
-- Generated by ORDS REST Data Services 21.4.2.r0621806
-- Schema: HBG_INTEGRATION  Date: Tue Apr 04 12:57:24 2023 
--

DECLARE
  l_roles     OWA.VC_ARR;
  l_modules   OWA.VC_ARR;
  l_patterns  OWA.VC_ARR;

BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'HBG_INTEGRATION',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'hbg_integration',
      p_auto_rest_auth      => FALSE);
    
  ORDS.DEFINE_MODULE(
      p_module_name    => 'ARCustomerMaintenance',
      p_base_path      => '/arCustMaintenance/',
      p_items_per_page => 0,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'deleteSelectedRecords',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'deleteSelectedRecords',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
HBG_AR_CUST_MAINTENANCE.delete_unselected_records(p_data => :body,p_current_user => :curr_user,p_status => :status);
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'deleteSelectedRecords',
      p_method             => 'POST',
      p_name               => 'status',
      p_bind_variable_name => 'status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'deleteSelectedRecords',
      p_method             => 'POST',
      p_name               => 'curr_user',
      p_bind_variable_name => 'curr_user',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'getCustomerbyOrgNum',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'getCustomerbyOrgNum',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select  party_number,party_name from   hz_parties   
where (party_number is null or upper(party_number) like  upper(:p_org_num)||''%'')
order by party_number ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'getCustomerbyOrgNum',
      p_method             => 'GET',
      p_name               => 'p_org_num',
      p_bind_variable_name => 'p_org_num',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'getTransactionCodes',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'getTransactionCodes',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select *
from HBG_AR_TRXMAINT_TRXCODES
');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'createSession',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'createSession',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare 
l_session  number;
begin
select to_char(sysdate,''YYMMDDHH24MISS'') into l_session  from dual;

insert into hbg_ar_trx_maint_session
(record_id,session_id,logged_in_user,logged_in_time)
values (hbg_ar_trx_session_seq.nextval,l_session,:p_user,systimestamp);

:p_session := l_session;
:p_status := ''SUCCESS'';
exception
when others then
:p_status := ''ERROR'';

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'createSession',
      p_method             => 'POST',
      p_name               => 'p_status',
      p_bind_variable_name => 'p_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'createSession',
      p_method             => 'POST',
      p_name               => 'p_session',
      p_bind_variable_name => 'p_session',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'LONG',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'retrieveSelectedRecords',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'retrieveSelectedRecords',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
    HBG_AR_CUST_MAINTENANCE.retrieve_selectedRecords(P_ACCT_NBR => :acct_nbr,p_org => :org_name,p_loggedin_user =>:loggedin_user, x_transactions => :transactions,p_ret_status => :ret_status,p_error_msg => :error_msg );
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'retrieveSelectedRecords',
      p_method             => 'POST',
      p_name               => 'transactions',
      p_bind_variable_name => 'transactions',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'RESULTSET',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'retrieveSelectedRecords',
      p_method             => 'POST',
      p_name               => 'ret_status',
      p_bind_variable_name => 'ret_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'retrieveSelectedRecords',
      p_method             => 'POST',
      p_name               => 'error_msg',
      p_bind_variable_name => 'error_msg',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'searchTransactions',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'searchTransactions',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare 
-- transactions  clob; 
output clob;
 ret_status  varchar2(200); 
  error_msg  varchar2(200);

  V_TEMP VARCHAR2(32767);
    V_CLOB CLOB ;
    V_AMOUNT NUMBER := 30000;
    V_OFFSET NUMBER := 1;
    V_LENGTH NUMBER ;
    V_RESULT CLOB;
BEGIN  
--
    hbg_ar_cust_maintenance.search_trxs(p_acct_nbr => :acct_nbr, p_org => :org_name, p_trx_code => :trx_code, p_trxtype_reason => :trxtype_reason
    , p_flag_code => :flag_code,
                                               p_claim_nbr => :claim_nbr, p_shipment_nbr => :shipment_nbr, p_inv_ref_nbr => :inv_ref_nbr
                                               , p_inv_po_nbr => :inv_po_nbr, p_aging_cat => :aging_cat,
                                               p_trx_from_date => :trx_from_date, p_trx_to_date => :trx_to_date, p_inv_num_from => :inv_num_from
                                               , p_inv_num_to => :inv_num_to, p_status => :status,
                                               p_amt_from =' || '> :amt_from, p_amt_to => :amt_to, p_include_inv => :include_inv, p_include_cm => :include_cm
                                               , p_include_claim => :include_claim, p_include_unapp_receipts => :include_receipts, p_loggedin_user => :loggedin_user,
                                               p_held_by_others => :held_by_othrs_data, x_transactions => output, p_ret_status => ret_status, p_error_msg => error_msg
                                               );

        OWA_UTIL.MIME_HEADER(''application/json'');
     V_CLOB  := output; 
    V_LENGTH  := DBMS_LOB.GETLENGTH(output);
WHILE V_LENGTH >= V_OFFSET LOOP
        V_TEMP:= DBMS_LOB.SUBSTR(output, V_AMOUNT, V_OFFSET);
        HTP.PRN(V_TEMP);
        V_OFFSET := V_OFFSET + LENGTH(V_TEMP);
    END LOOP;
--HBG_AR_CUST_MAINTENANCE.search_transactions( p_acct_nbr => :acct_nbr, p_org => :org_name, x_transactions => :transactions);
END;');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'searchTransactions',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare 
transactions  clob; 
ret_status  varchar2(200);
error_msg  varchar2(200);

  V_TEMP VARCHAR2(32767);
    V_CLOB CLOB ;
    V_AMOUNT NUMBER := 30000;
    V_OFFSET NUMBER := 1;
    V_LENGTH NUMBER ;
    V_RESULT CLOB;
BEGIN
    hbg_ar_cust_maintenance.search_transactions(p_acct_nbr => :acct_nbr, p_org => :org_name, p_trx_code => :trx_code, p_trxtype_reason => :trxtype_reason
    , p_flag_code => :flag_code,
                                               p_claim_nbr => :claim_nbr, p_shipment_nbr => :shipment_nbr, p_inv_ref_nbr => :inv_ref_nbr
                                               , p_inv_po_nbr => :inv_po_nbr, p_aging_cat => :aging_cat,
                                               p_trx_from_date => :trx_from_date, p_trx_to_date => :trx_to_date, p_inv_num_from => :inv_num_from
                                               , p_inv_num_to => :inv_num_to, p_status => :status,
                                               p_amt_from => :amt_from, p_amt_' || 'to => :amt_to, p_include_inv => :include_inv, p_include_cm => :include_cm
                                               , p_include_claim => :include_claim, p_include_unapp_receipts => :include_receipts, p_loggedin_user => :loggedin_user,
                                               p_held_by_others => :held_by_othrs_data, p_process_id => :processId, x_transactions => transactions, p_ret_status => ret_status, p_error_msg => error_msg
                                               );
    
     OWA_UTIL.MIME_HEADER(''application/json'');

    V_CLOB  := transactions; 
    V_LENGTH  := DBMS_LOB.GETLENGTH(transactions);
WHILE V_LENGTH >= V_OFFSET LOOP
        V_TEMP:= DBMS_LOB.SUBSTR(transactions, V_AMOUNT, V_OFFSET);
        HTP.PRN(V_TEMP);
        V_OFFSET := V_OFFSET + LENGTH(V_TEMP);
    END LOOP;
--HBG_AR_CUST_MAINTENANCE.search_transactions( p_acct_nbr => :acct_nbr, p_org => :org_name, x_transactions => :transactions);
END;');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'getTransactionType',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'getTransactionType',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    tran_type TrxType,
   tran_type||'' - ''|| LISTAGG(transaction_code, '', '') WITHIN GROUP(
    ORDER BY
        tran_type
    ) TrxCodes
FROM
    hbg_ar_trxmaint_trxcodes
GROUP BY
    tran_type');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'createActivities',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'createActivities',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
                           hbg_ar_cust_maintenance.create_trx_activity(p_data => :body,p_status => :status, p_process_id => :process_id);

                         END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'createActivities',
      p_method             => 'POST',
      p_name               => 'status',
      p_bind_variable_name => 'status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'createActivities',
      p_method             => 'POST',
      p_name               => 'process_id',
      p_bind_variable_name => 'process_id',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'getCustomerbyAcctNum',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'getCustomerbyAcctNum',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select account_number accountnumber,account_name accountname,party_number from hz_cust_accounts hca, hz_parties hp 
where hca.party_id = hp.party_id
and (account_number is null or upper(account_number) like  upper(:p_acct_num)||''%'')
and (account_name is null or upper(account_name) like  upper(:p_acct_name)||''%'')
and (party_name is null or upper(party_name) like  upper(:p_org_name)||''%'')
order by account_number ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'getCustomerbyAcctNum',
      p_method             => 'GET',
      p_name               => 'p_acct_num',
      p_bind_variable_name => 'p_acct_num',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'getCustomerbyAcctNum',
      p_method             => 'GET',
      p_name               => 'p_acct_name',
      p_bind_variable_name => 'p_acct_name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'getCustomerbyAcctNum',
      p_method             => 'GET',
      p_name               => 'p_org_name',
      p_bind_variable_name => 'p_org_name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'storeSelectedRecords',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'storeSelectedRecords',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
    HBG_AR_CUST_MAINTENANCE.store_selected_records(p_data => :body,p_status => :status);
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'storeSelectedRecords',
      p_method             => 'POST',
      p_name               => 'status',
      p_bind_variable_name => 'status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'getCollapseTrxsDetails',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ARCustomerMaintenance',
      p_pattern        => 'getCollapseTrxsDetails',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    account_number,
    nvl(new_account_number,account_number) target_account_number,
    org_nbr,
    invoice_number,
    new_trx_number,
    amount,
    trx_date,
    submitted_by,
    submission_date,
    orcl_status,
    orcl_err_message,
    process_id
FROM
    hbg_ar_cust_maintenance_activity
where process_id =  nvl(:p_process_id,process_id)
and new_trx_number = nvl(:p_trx_number,new_trx_number)
and orcl_status = (case when :p_trx_number is null then orcl_status else ''Success'' end)');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'getCollapseTrxsDetails',
      p_method             => 'GET',
      p_name               => 'p_process_id',
      p_bind_variable_name => 'p_process_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ARCustomerMaintenance',
      p_pattern            => 'getCollapseTrxsDetails',
      p_method             => 'GET',
      p_name               => 'p_trx_number',
      p_bind_variable_name => 'p_trx_number',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_MODULE(
      p_module_name    => 'AutomaticHoldsModule',
      p_base_path      => '/AutomaticHoldsModule/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'AutomaticHoldsModule',
      p_pattern        => 'UpdateHoldInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'AutomaticHoldsModule',
      p_pattern        => 'UpdateHoldInfo',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
hbg_so_auto_holds_pkg.hbg_so_custom_rule_update (
        p_comments => :p_comments,
        p_autoreleaseflag => :p_autoreleaseflag,
        p_end_date => :p_end_date,
        p_rule_id => :p_rule_id,
        p_return_status => x_return_status
    );
:x_return_status := x_return_status;
END;
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'AutomaticHoldsModule',
      p_pattern            => 'UpdateHoldInfo',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_MODULE(
      p_module_name    => 'Common',
      p_base_path      => '/Common/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getSiteNameByNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getSiteNameByNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
PARTY_SITE_NAME,PARTY_SITE_NUMBER
FROM
HZ_PARTY_SITES
WHERE 
PARTY_SITE_NUMBER = :p_site_number
');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getCategory2',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getCategory2',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select CATEGORY1_ID,CATEGORY2_ID, CATEGORY2_CODE || ''-'' || CATEGORY2_NAME FLEX_VALUE , CATEGORY2_CODE FROM XXHBG_FAMILY_CODE_REPORTING_CATEGORY2
 WHERE CATEGORY1_ID = :P_CATEGORY1_ID AND
(:P_CATEGORY_CODE is null or upper(CATEGORY2_CODE) LIKE upper(:P_CATEGORY_CODE) || ''%'') ORDER BY CATEGORY2_ID DESC');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getOwnerNameByCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getOwnerNameByCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select OWNER_ID,OWNER_NAME	 from XXHBG_FAMILY_CODE_OWNER where OWNER_CODE = :OWNER_CODE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getAccountNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getAccountNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'Select Account_number,cust_account_id from hz_cust_Accounts hca where
(:party_id is null or hca.party_id = :party_id) and (:p_acct_number is null or upper(hca.account_number)  LIKE upper(:p_acct_number || ''%''))');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getOwners',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getOwners',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 1000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'-- select OWNER_ID,OWNER_CODE , Owner_name from XXHBG_FAMILY_CODE_OWNER

select OWNER_ID, OWNER_CODE|| ''- '' || OWNER_NAME FLEX_VALUE , OWNER_CODE from XXHBG_FAMILY_CODE_OWNER where (:owner_code is null or upper(owner_code) like upper(:owner_code) || ''%'' )order by OWNER_ID desc

');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getReportingGroup',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getReportingGroup',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select REPORTING_GROUP_ID, REPORTING_GRP_CODE || ''-'' || REPORTING_GRP_NAME FLEX_VALUE, REPORTING_GRP_CODE FROM XXHBG_FAMILY_CODE_REPORTING_GROUP
where OWNER_ID = :P_OWNER_ID
and (:REPORTING_GRP_CODE is null or upper(REPORTING_GRP_CODE) like upper(:REPORTING_GRP_CODE) || ''%'' )
order by REPORTING_GROUP_ID desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getCategory1',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getCategory1',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select REPORTING_GROUP_ID,CATEGORY1_ID, CATEGORY1_CODE || ''-'' || CATEGORY1_NAME FLEX_VALUE , CATEGORY1_CODE FROM XXHBG_FAMILY_CODE_REPORTING_CATEGORY1 WHERE REPORTING_GROUP_ID = :P_REPORTING_GROUP_ID AND
(:P_CATEGORY_CODE is null or upper(CATEGORY1_CODE) LIKE upper(:P_CATEGORY_CODE) || ''%'') ORDER BY CATEGORY1_ID DESC');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getCountryInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getCountryInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT DISTINCT GEOGRAPHY_CODE COUNTRY_CODE, GEOGRAPHY_NAME COUNTRY_NAME FROM HZ_GEOGRAPHIES WHERE GEOGRAPHY_TYPE = ''COUNTRY''
and (:COUNTRY_NAME IS NULL OR upper(GEOGRAPHY_NAME) like upper(:COUNTRY_NAME) || ''%'' )ORDER BY GEOGRAPHY_CODE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getStateInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getStateInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT distinct GEOGRAPHY_NAME STATE FROM HZ_GEOGRAPHIES WHERE GEOGRAPHY_TYPE = ''STATE'' and   ( :GEOGRAPHY_NAME IS NULL  OR upper(GEOGRAPHY_NAME) like upper(:GEOGRAPHY_NAME) || ''%'' ) ORDER BY GEOGRAPHY_NAME
');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getAccountNameByNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getAccountNameByNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'Select account_number,cust_account_id, Account_name from hz_cust_Accounts where account_number = :p_account_number');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getrepGrpNamebyCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getrepGrpNamebyCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select REPORTING_GROUP_ID,REPORTING_GRP_NAME,OWNER_ID from XXHBG_FAMILY_CODE_REPORTING_GROUP where REPORTING_GRP_CODE = :P_REPORTING_GRP_CODE and owner_id = :P_owner_id');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getBisacDescription',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getBisacDescription',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT DESCRIPTION FROM FND_FLEX_VALUES_VL where VALUE_CATEGORY = trim(''HBG_BISAC_CATEGORIES'') and FLEX_VALUE = :FLEX_VALUE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getOrganizationIdbyName',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getOrganizationIdbyName',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct party_id,party_name ,PARTY_NUMBER from HZ_PARTIES where PARTY_TYPE = ''ORGANIZATION'' and STATUS = ''A''
 and (:party_name is null or upper(party_name) like upper(:party_name || ''%'') )');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getCat1NamebyCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getCat1NamebyCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select CATEGORY1_CODE,CATEGORY1_NAME,CATEGORY1_ID from XXHBG_FAMILY_CODE_REPORTING_CATEGORY1 where CATEGORY1_CODE = :P_CATEGORY1_CODE and REPORTING_GROUP_ID = :P_REPORTING_GROUP_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getSubFormat',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getSubFormat',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select SUB_FORMAT_CODE from XXHBG_FAMILY_CODE_SUB_FORMAT order by SUB_FORMAT_ID desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getSubFormatNameByCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getSubFormatNameByCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select SUB_FORMAT_NAME from XXHBG_FAMILY_CODE_SUB_FORMAT where SUB_FORMAT_CODE = :P_SUB_FORMAT_CODE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getOrganizationNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getOrganizationNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct party_id,party_name ,PARTY_NUMBER from HZ_PARTIES where PARTY_TYPE = ''ORGANIZATION'' and STATUS = ''A''
 and (:party_name is null or upper(party_name) like upper(:party_name || ''%'') )');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getOrganizationNameByNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getOrganizationNameByNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct party_id,party_name ,PARTY_NUMBER from HZ_PARTIES where PARTY_TYPE = ''ORGANIZATION'' and STATUS = ''A''
 and (:party_number is null or upper(party_number) like upper(:party_number || ''%'') )');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getFormatNameByCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getFormatNameByCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select FORMAT_NAME  from XXHBG_FAMILYCODE_FORMAT  where FORMAT_CODE = :P_FORMAT_CODE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getcat2NameByCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getcat2NameByCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select CATEGORY2_CODE,CATEGORY2_NAME,CATEGORY2_ID from XXHBG_FAMILY_CODE_REPORTING_CATEGORY2 where CATEGORY2_CODE = :P_CATEGORY2_CODE and CATEGORY1_ID = :P_CATEGORY1_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getFormat',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getFormat',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select FORMAT_CODE  from XXHBG_FAMILYCODE_FORMAT  order by FORMAT_ID desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getSiteNamesByAccNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getSiteNamesByAccNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
HPS.PARTY_SITE_NAME,
HPS.PARTY_SITE_NUMBER
FROM
HZ_PARTY_SITES HPS,
HZ_CUST_ACCT_SITES_ALL HCASA,
HZ_CUST_ACCOUNTS HCA
WHERE 1=1
AND (:P_ACCOUNT_NUMBER is null or upper(HCA.ACCOUNT_NUMBER) LIKE upper(:P_ACCOUNT_NUMBER || ''%''))
AND (:p_site_name is null or upper(HPS.PARTY_SITE_NAME) LIKE upper(:p_site_name || ''%''))
AND (:p_site_nUMBER is null or upper(HPS.PARTY_SITE_NUMBER) LIKE upper(:p_site_number || ''%''))
AND HCA.CUST_ACCOUNT_ID = HCASA.CUST_ACCOUNT_ID
AND HCASA.PARTY_SITE_ID = HPS.PARTY_SITE_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getBisac',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getBisac',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT VALUE_CATEGORY VALUE_SET_NAME,FLEX_VALUE,DESCRIPTION FROM FND_FLEX_VALUES_VL where VALUE_CATEGORY = trim(''HBG_BISAC_CATEGORIES'') and upper(FLEX_VALUE) like  upper(:flex_value) || ''%'' order by flex_value');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getCities',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getCities',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT GEOGRAPHY_CODE CITY FROM HZ_GEOGRAPHIES WHERE GEOGRAPHY_TYPE = ''CITY'' and (:city is null or upper(GEOGRAPHY_CODE) LIKE upper(:city || ''%'')) ORDER BY GEOGRAPHY_CODE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Common',
      p_pattern        => 'getPostalCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Common',
      p_pattern        => 'getPostalCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT GEOGRAPHY_NAME "POSTAL CODE" FROM HZ_GEOGRAPHIES WHERE GEOGRAPHY_TYPE = ''POSTAL_CODE'' and (:postal is null or upper(GEOGRAPHY_NAME) LIKE upper(:postal || ''%'')) ORDER BY GEOGRAPHY_CODE

');

  ORDS.DEFINE_MODULE(
      p_module_name    => 'Country Groups',
      p_base_path      => '/Country Groups/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Country Groups',
      p_pattern        => 'CountryDetails',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Country Groups',
      p_pattern        => 'CountryDetails',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select HDRCG.COUNTRY_GROUP, 
HDRCG.COUNTRY_GROUP_DESCRIPTION,
HDRC.COUNTRY_CODE,
HDRC.COUNTRY_NAME
from HBG_DIST_RIGHTS_COUNTRYGROUP_EXT HDRCG,
HBG_DIST_RIGHTS_COUNTRIES_EXT HDRC
where 1=1
AND HDRCG.COUNTRY_GROUP=HDRC.COUNTRY_GROUP
AND HDRCG.COUNTRY_GROUP =NVL(:P_COUNTRY_GROUP, HDRCG.COUNTRY_GROUP)');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'Country Groups',
      p_pattern            => 'CountryDetails',
      p_method             => 'GET',
      p_name               => 'P_COUNTRY_GROUP',
      p_bind_variable_name => 'P_COUNTRY_GROUP',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Country Groups',
      p_pattern        => 'EmpDetails',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Country Groups',
      p_pattern        => 'EmpDetails',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from emp where deptno =:P_DEPT');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'Country Groups',
      p_pattern            => 'EmpDetails',
      p_method             => 'GET',
      p_name               => 'P_DEPT',
      p_bind_variable_name => 'P_DEPT',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'Country Groups',
      p_pattern        => 'DeptDetails',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'Country Groups',
      p_pattern        => 'DeptDetails',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select deptno from emp');

  ORDS.DEFINE_MODULE(
      p_module_name    => 'CustomeOrders',
      p_base_path      => '/CustomeOrders/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getItems',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getItems',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct item_number from EGP_SYSTEM_ITEMS_B where item_number like :p_item_num || ''%''');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'CoLinesActions',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'CoLinesActions',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select LINE_ACTION_ID, RULE_LINE_ID, TEMPLATE_NAME, TEMPLATE_ID, HOLD_FLAG,HOLD_LEVEL,HOLD_NAME,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE,TO_CHAR(ENTERED_DATE,''YYYY-MM-DD'') ENTERED_DATE,TO_CHAR(UPDATED_DATE,''YYYY-MM-DD'') UPDATED_DATE,
TEMPLATE_LEVEL,UPDATED_BY,ENTERED_BY from HBG_CO_LINE_ACTIONS where RULE_LINE_ID = :P_RULE_LINE_ID');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'CoLinesActions',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'	
	declare
  p_return_status varchar2(200);
begin hbg_custom_orders_pkg.hbg_co_line_actions_create (
  p_rule_line_id     => :rule_line_id  
 ,p_template_level   => :template_level
 ,p_template_name    => :template_name 
 ,p_template_id      => :template_id   
 ,p_hold_flag        => :hold_flag     
 ,p_hold_level       => :hold_level    
 ,p_hold_name        => :hold_name     
 ,p_start_date       => :start_date    
 ,p_end_date         => :end_date      
 ,p_updated_by       => :updated_by 
 ,P_entered_by       => :entered_by
 ,p_return_status    => :p_return_status    
    );
	 :p_return_status := p_return_status;
 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'CustomeOrders',
      p_pattern            => 'CoLinesActions',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'CoLinesActions',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'	declare
  p_return_status varchar2(200);
begin hbg_custom_orders_pkg.hbg_co_line_actions_update (
  p_line_action_id   => :line_action_id 
  ,p_rule_line_id     => :rule_line_id  
 ,p_template_level   => :template_level
 ,p_template_name    => :template_name 
 ,p_template_id      => :template_id   
 ,p_hold_flag        => :hold_flag     
 ,p_hold_level       => :hold_level    
 ,p_hold_name        => :hold_name     
 ,p_start_date       => :start_date    
 ,p_end_date         => :end_date      
 ,p_updated_by       => :updated_by 
 ,p_return_status    => :p_return_status    
    );
	 :p_return_status := p_return_status;
 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'CustomeOrders',
      p_pattern            => 'CoLinesActions',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'grtHoldnames',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'grtHoldnames',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT HOLD_CODE,HOLD_NAME,HOLD_DESCRIPTION,HOLD_CODE_ID,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE FROM DOO_HOLD_CODES_VL WHERE HOLD_CODE = NVL(:P_HOLD_CODE,HOLD_CODE) AND nvl(EFFECTIVE_END_DATE,sysdate) >= SYSDATE AND HOLD_CODE LIKE ''HBG%''');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getAttachmentCategories',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getAttachmentCategories',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
FDC.CATEGORY_NAME,
FDC.DESCRIPTION
FROM
FND_DOCUMENT_CATEGORIES FDC,
FND_DOC_CATEGORIES_TO_ENTITIES FDCTE,
FND_DOCUMENT_ENTITIES FDE
WHERE 1=1
AND FDE.ENTITY_NAME = ''DOO_FULFILL_LINES_ALL''
AND FDE.DOCUMENT_ENTITY_ID = FDCTE.DOCUMENT_ENTITY_ID
AND FDE.ENTERPRISE_ID = FDCTE.ENTERPRISE_ID
AND FDCTE.CATEGORY_ID = FDC.CATEGORY_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getShiptoNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getShiptoNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT distinct
HPS.PARTY_SITE_ID AS PARTY_SITE_ID,
HPS.PARTY_SITE_NUMBER AS SHIP_TO_NUMBER,
HPS.PARTY_SITE_NAME AS SHIP_TO_NAME
FROM
HZ_PARTY_SITES HPS,
HZ_CUST_SITE_USES_ALL HCSUA
WHERE 1=1
AND HCSUA.SITE_USE_CODE = ''SHIP_TO''
and (:P_SHIP_TO_NUM IS NULL or HPS.PARTY_SITE_NUMBER LIKE :P_SHIP_TO_NUM || ''%'')
AND (:PARTY_SITE_NUMBER  IS NULL or HPS.PARTY_SITE_NUMBER =:PARTY_SITE_NUMBER )');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getImprintNamebyCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getImprintNamebyCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select EXTERNAL_IMP_NAME  from XXHBG_FAMILY_CODE_EXTERNAL_IMPRINT where PUB_ID= :P_PUB_ID and EXTERNAL_IMP_CODE = :P_EXTERNAL_IMP_CODE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getSubFormatCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getSubFormatCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select SUB_FORMAT_CODE from XXHBG_FAMILY_CODE_SUB_FORMAT order by SUB_FORMAT_ID desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getimprint',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getimprint',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select EXTERNAL_IMP_CODE from XXHBG_FAMILY_CODE_EXTERNAL_IMPRINT where PUB_ID= :P_PUB_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getPubNamebyCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getPubNamebyCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select PUB_ID,EXTERNAL_PUB_NAME from XXHBG_FAMILY_CODE_EXTERNAL_PUBLISHER where EXTERNAL_PUB_CODE = :P_EXTERNAL_PUB_CODE and REPORTING_GROUP_ID = :P_REPORTING_GROUP_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getNVLCategory1',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getNVLCategory1',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select CATEGORY1_CODE from XXHBG_FAMILY_CODE_REPORTING_CATEGORY1 where REPORTING_GROUP_ID = nvl(:REPORTING_GROUP_ID,REPORTING_GROUP_ID)');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getcat1DescByCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getTemplateLines',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getTemplateLines',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from HBG_CO_TEMPLATE_LINES where TEMPLATE_ID = :TEMPLATE_ID order by LINE_ID desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getTemplateLines',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin hbg_custom_orders_pkg.hbg_co_template_lines_create (
        p_template_id       => :template_id      
        ,p_sequence          => :sequence         
        ,p_category_code 	=> :category_code 	
        ,p_category_name 	=> :category_name 	
        ,p_instructions_text => :instructions_text
        ,p_entered_by        => :entered_by       
        ,p_updated_by        => :updated_by              
        ,p_return_status     => :p_return_status    
    );
	 :p_return_status := p_return_status;
 end;
 
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'CustomeOrders',
      p_pattern            => 'getTemplateLines',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getTemplateLines',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin hbg_custom_orders_pkg.hbg_co_template_lines_update (
        p_line_id            => :line_id
         ,p_template_id       => :template_id      
        ,p_sequence          => :sequence         
        ,p_category_code 	=> :category_code 	
        ,p_category_name 	=> :category_name 	
        ,p_instructions_text => :instructions_text   
        ,p_updated_by        => :updated_by              
        ,p_return_status     => :p_return_status    
    );
	 :p_return_status := p_return_status;
 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'CustomeOrders',
      p_pattern            => 'getTemplateLines',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getOwnerCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getOwnerCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select OWNER_CODE from XXHBG_FAMILY_CODE_OWNER');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getTemplateHeaders',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getTemplateHeaders',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin hbg_custom_orders_pkg.hbg_co_template_headers_create (
         p_template_name         => :template_name       
        ,p_template_description  => :template_description
        ,p_cust_account_id       => :cust_account_id     
        ,p_owner_code 		     => :owner_code 		  
        ,p_owner_name 		     => :owner_name 		  
        ,p_account_number        => :account_number      
        ,p_account_description   => :account_description 
        ,p_start_date            => :start_date          
        ,p_end_date              => :end_date            
        ,p_entered_by            => :entered_by          
        ,p_updated_by            => :updated_by          
        ,p_return_status         => :p_return_status      
    );
	 :p_return_status := p_return_status;
 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'CustomeOrders',
      p_pattern            => 'getTemplateHeaders',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getTemplateHeaders',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 1000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
TEMPLATE_ID	          
,TEMPLATE_NAME   	  
,TEMPLATE_DESCRIPTION	  
,CUST_ACCOUNT_ID	      
,OWNER_CODE	                   
,ACCOUNT_NUMBER	      
,ACCOUNT_DESCRIPTION	  
,OWNER_NAME
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
,TO_CHAR(ENTERED_DATE,''YYYY-MM-DD'') ENTERED_DATE
,TO_CHAR(UPDATED_DATE,''YYYY-MM-DD'') UPDATED_DATE
,ENTERED_BY
,UPDATED_BY
 from HBG_CO_TEMPLATE_HEADERS

 where         1 = 1

    AND (
 ( :P_TEMPLATE_NAME IS NULL
            OR TEMPLATE_NAME = :P_TEMPLATE_NAME )
                
          AND ( upper(:P_TEMPLATE_DESCRIPTION) IS NULL
                OR upper(TEMPLATE_DESCRIPTION) = upper(:P_TEMPLATE_DESCRIPTION) )
  ) 
 order by TEMPLATE_ID desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getTemplateHeaders',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin hbg_custom_orders_pkg.hbg_co_template_headers_update (
         p_template_id            => :template_id
         ,p_template_name         => :template_name       
        ,p_template_description  => :template_description
        ,p_cust_account_id       => :cust_account_id     
        ,p_owner_code 		     => :owner_code 		  
        ,p_owner_name 		     => :owner_name 		  
        ,p_account_number        => :account_number      
        ,p_account_description   => :account_description 
        ,p_start_date            => :start_date          
        ,p_end_date              => :end_date               
        ,p_updated_by            => :updated_by          
        ,p_return_status         => :p_return_status      
    );
	 :p_return_status := p_return_status;
 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'CustomeOrders',
      p_pattern            => 'getTemplateHeaders',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getRulesLines',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getRulesLines',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
RULE_LINE_ID	                  
,RULE_ID	                          
,SEQUENCE	                      
,SHIP_TO_NUMBER	                  
,OWNER_CODE	                      
,REPORTING_GROUP	                  
,PUBLISHER	                      
,IMPRINT	                          
,FORMAT	                          
,SUB_FORMAT	                      
,INVENTORY_ITEM_ID	              
,PRICE_ON_BOOK	                  
,SHRINK_WRAP	                      
,MASTER_PACK	                      
,INNER_PACK	                      
,NEW_PACK_QUANTITY	              
,SHIP_TO_NAME	                  
,OWNER_NAME	                      
,ITEM	                          
,REPORTING_GROUP_DESCRIPTION	      
,PUBLISHER_NAME	                  
,IMPRINT_NAME	                  
,FORMAT_NAME	                      
,SUB_FORMAT_NAME
,TO_CHAR(ENTERED_DATE,''YYYY-MM-DD'') ENTERED_DATE
,TO_CHAR(UPDATED_DATE,''YYYY-MM-DD'') UPDATED_DATE          
,ENTERED_BY	                      
,UPDATE' || 'D_BY	             	                  
 from HBG_CO_RULES_LINES where RULE_ID = :RULE_ID order by RULE_LINE_ID desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getRulesLines',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
 begin 
hbg_custom_orders_pkg.hbg_co_rules_lines_create (
     P_rule_id                       => :rule_id                     
     ,P_sequence	                     => :sequence	                  
     ,P_ship_to_number                => :ship_to_number             
     ,P_ship_to_name  	             => :ship_to_name  	            
     ,P_owner_code	                 => :owner_code	              
     ,P_owner_name                    => :owner_name                 
     ,P_reporting_group               => :reporting_group            
     ,P_reporting_group_description 	 => :reporting_group_description           
     ,P_publisher	                 => :publisher	              
     ,P_publisher_name	             => :publisher_name	               
     ,P_imprint	                     => :imprint	                  
     ,P_imprint_name	                 => :imprint_name	                    
     ,P_format	                     => :f' || 'ormat	                  
     ,P_format_name                   => :format_name                  
     ,P_sub_format                    => :sub_format                 
     ,P_sub_format_name               => :sub_format_name            
     ,P_item                          => :item                       
     ,P_price_on_book	             => :price_on_book	          
     ,P_shrink_wrap	                 => :shrink_wrap	               
     ,P_master_pack	                 => :master_pack	              
     ,P_inner_pack	                 => :inner_pack	              
     ,P_new_pack_quantity	         => :new_pack_quantity	                   
     ,P_entered_by	                 => :entered_by	              
     ,P_updated_by                    => :updated_by  
     ,p_return_status               => :p_return_status                      
    );
	 :p_return_status := p_return_status;
 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'CustomeOrders',
      p_pattern            => 'getRulesLines',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getRulesLines',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
 begin 
hbg_custom_orders_pkg.hbg_co_rules_lines_update (
     p_rule_line_id                  => :rule_line_id
     ,P_rule_id                       => :rule_id                     
     ,P_sequence	                     => :sequence	                  
     ,P_ship_to_number                => :ship_to_number             
     ,P_ship_to_name  	             => :ship_to_name  	            
     ,P_owner_code	                 => :owner_code	              
     ,P_owner_name                    => :owner_name                 
     ,P_reporting_group               => :reporting_group            
     ,P_reporting_group_description 	 => :reporting_group_description           
     ,P_publisher	                 => :publisher	              
     ,P_publisher_name	             => :publisher_name	               
     ,P_imprint	                     => :imprint	                  
     ,P_imprint_name	             => :imprint_name	           ' || '         
     ,P_format	                     => :format	                  
     ,P_format_name                   => :format_name                  
     ,P_sub_format                    => :sub_format                 
     ,P_sub_format_name               => :sub_format_name            
     ,P_item                          => :item                       
     ,P_price_on_book	             => :price_on_book	          
     ,P_shrink_wrap	                 => :shrink_wrap	               
     ,P_master_pack	                 => :master_pack	              
     ,P_inner_pack	                 => :inner_pack	              
     ,P_new_pack_quantity	         => :new_pack_quantity	                              
     ,P_updated_by                    => :updated_by    
	,p_return_status     => :p_return_status   	 
    );
	 :p_return_status := p_return_status;
 end;
 ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'CustomeOrders',
      p_pattern            => 'getRulesLines',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getOwnerNameByCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getOwnerNameByCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select OWNER_ID,OWNER_NAME	 from XXHBG_FAMILY_CODE_OWNER where OWNER_CODE = :OWNER_CODE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getAccountNameByNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getAccountNameByNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'Select account_number,cust_account_id, Account_name from hz_cust_Accounts where account_number = :p_account_number');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getAccountNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getAccountNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'Select Account_number,cust_account_id from hz_cust_Accounts hca where
(:party_id is null or hca.party_id = :party_id) and (:p_acct_number is null or upper(hca.account_number)  LIKE upper(:p_acct_number || ''%''))');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getRuleHeaders',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getRuleHeaders',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select  RULE_ID	             
 	,ORGANIZATION_ID	 
 	,ORGANIZATION_NAME	     
 	,ORGANIZATION_NUMBER	 
 	,ACCOUNT_NUMBER	         
 	,ACCOUNT_DESCRIPTION
	,CUST_ACCOUNT_ID	     
 	,DESTINATION_ACCOUNT	 
 	,DEPARTMENT_ID	         
 	,SALES_CHANNEL	         
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
,TO_CHAR(ENTERED_DATE,''YYYY-MM-DD'') ENTERED_DATE
,TO_CHAR(UPDATED_DATE,''YYYY-MM-DD'') UPDATED_DATE          
    ,ENTERED_BY	                      
 	,UPDATED_BY	             
from  HBG_CO_RULES_HEADERS
     where         1 = 1

    AND (
 ( :ORGANIZATION_ID IS NULL
            OR ORGANIZATION_ID = :ORGANIZATION_ID )
                
          AND ( upper(:CUST_ACCOUNT_ID) IS NULL
                OR upper(CUST_ACCOUNT_ID) = upper(:CUST_ACCOUNT_ID) )
  ) order by RULE_ID asc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getRuleHeaders',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
 begin 
hbg_custom_orders_pkg.hbg_co_rules_headers_create (
         p_organization_id        => :organization_id    
        ,p_organization_number    => :organization_number
        ,p_organization_name      => :organization_name  
        ,p_cust_account_id        => :cust_account_id    
        ,p_account_number         => :account_number     
        ,p_account_description    => :account_description
        ,p_destination_account    => :destination_account
        ,p_department_id          => :department_id      
        ,p_sales_channel 	      => :sales_channel 	
        ,p_start_date             => :start_date         
        ,p_end_date               => :end_date           
        ,p_entered_by             => :entered_by         
        ,p_updated_by             => :updated_by
		,p_return_status          => :p_return_status    
    );
	 :p_return_status := p_return_status;
 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'CustomeOrders',
      p_pattern            => 'getRuleHeaders',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getRuleHeaders',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
 begin 
hbg_custom_orders_pkg.hbg_co_rules_headers_update (
         P_rule_id                => :rule_id
        ,p_organization_id        => :organization_id    
        ,p_organization_number    => :organization_number
        ,p_organization_name      => :organization_name  
        ,p_cust_account_id        => :cust_account_id    
        ,p_account_number         => :account_number     
        ,p_account_description    => :account_description
        ,p_destination_account    => :destination_account
        ,p_department_id          => :department_id      
        ,p_sales_channel 	      => :sales_channel 	
        ,p_start_date             => :start_date         
        ,p_end_date               => :end_date          
        ,p_updated_by             => :updated_by
		,p_return_status          => :p_return_status    
    );
	 :p_return_status := p_return_status;
 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'CustomeOrders',
      p_pattern            => 'getRuleHeaders',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getReportingGroupCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getReportingGroupCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select REPORTING_GRP_CODE from XXHBG_FAMILY_CODE_REPORTING_GROUP where owner_id = :p_owner_id');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getStaticCategoryName',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getStaticCategoryName',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select category_code,category_name from(
select ''ARSMT'' category_code,''AR Statement'' category_name from dual
union all
select ''BIND'' category_code,''Bindery Instruction'' category_name from dual
union all
select ''CFSI'' category_code,''CFS Internal'' category_name from dual
union all
select ''DMOI'' category_code,''DMO Internal'' category_name from dual
union all
select ''DSRI'' category_code,''Distribution Service Returns Internal'' category_name from dual
union all
 select ''FULI'' category_code,''Fulfillment Internal'' category_name from dual
union all   
 select ''GEN'' category_code,''General Comment'' category_name from dual
union all    
 select ''INMGT'' category_code,''Inventory Management Internal'' category_name from dual
union all        
select ''INOPS'' category_code,''Inventory Ops Internal'' category_name from dual
union all  
select ''INV'' category_code,''Invoice'' category_name from dual
union all            
select ''NARR'' category_code,''Narrative'' category_name from dual
union' || ' all   
select ''PL'' category_code,''Packing List– bom components'' category_name from dual
union all           
select ''SSE'' category_code,''Support Service External'' category_name from dual
union all  
select ''SSI'' category_code,''Support Service Internal'' category_name from dual
) where category_code = :p_cat_code');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getRepgrpNameByCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getRepgrpNameByCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select REPORTING_GROUP_ID,REPORTING_GRP_NAME,OWNER_ID from XXHBG_FAMILY_CODE_REPORTING_GROUP where REPORTING_GRP_CODE = :P_REPORTING_GRP_CODE and owner_id = :P_owner_id');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getFormatCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getFormatCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select FORMAT_CODE  from XXHBG_FAMILYCODE_FORMAT  order by FORMAT_ID desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getFormatNameByCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getFormatNameByCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select FORMAT_NAME  from XXHBG_FAMILYCODE_FORMAT  where FORMAT_CODE = :P_FORMAT_CODE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getPubCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getPubCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select EXTERNAL_PUB_CODE from XXHBG_FAMILY_CODE_EXTERNAL_PUBLISHER where REPORTING_GROUP_ID = :P_REPORTING_GROUP_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getSubformatNameByCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getSubformatNameByCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select SUB_FORMAT_NAME from XXHBG_FAMILY_CODE_SUB_FORMAT where SUB_FORMAT_CODE = :P_SUB_FORMAT_CODE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getOrgNameByNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'CustomeOrders',
      p_pattern        => 'getOrgNameByNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select party_id,party_name ,PARTY_NUMBER from HZ_PARTIES where party_number = :part_number');

  ORDS.DEFINE_MODULE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_base_path      => '/DistributionTitleRights/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'createCountryAssociation',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'createCountryAssociation',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
hbg_so_dist_title_rights_pkg.hbg_add_country_assocation (
        p_country_group_id => :p_country_group_id,
        p_country_id => :p_country_id,
        p_created_by => :p_created_by,
        p_last_updated_by => :p_last_updated_by,
        p_return_status => :x_return_status
    );
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'createCountryAssociation',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'copyEditCountryGroup',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'copyEditCountryGroup',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
x_country_group_id NUMBER;
BEGIN
hbg_so_dist_title_rights_pkg.hbg_copyedit_country_group (
		p_country_group => :p_country_group,
        p_country_group_code => :p_country_group_code,
		p_country_group_name => :p_country_group_name,
		p_comments => :p_comments,
		p_enabled_flag => :p_enabled_flag,
		p_created_by => :p_created_by,
		p_last_updated_by => :p_last_updated_by,
        p_return_status => :x_return_status,
        p_country_group_id => :x_country_group_id
    );
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'copyEditCountryGroup',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'copyEditCountryGroup',
      p_method             => 'POST',
      p_name               => 'x_country_group_id',
      p_bind_variable_name => 'x_country_group_id',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'INT',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getTitleRightHeaderInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getTitleRightHeaderInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
HTRE.TITLE_RIGHT_ID,
ESIB.INVENTORY_ITEM_ID,
ESIB.ITEM_NUMBER,
ESIB.ATTRIBUTE5 SHORT_TITLE,
ESIB.ATTRIBUTE3 SHORT_AUTHOR,
EIEB.ATTRIBUTE_CHAR1 OWNER,
FFVL_OWNER.DESCRIPTION OWNER_DESCRIPTION,
EIEB.ATTRIBUTE_CHAR2 REPORTING_GROUP,
FCL_REPORTING_GROUP.MEANING REPORTING_GROUP_DESCRIPTION,
EIEB.ATTRIBUTE_CHAR3 CATEGORY_1,
FCL_CATEGORY1.MEANING CATEGORY_1_DESCRIPTION,
EIEB.ATTRIBUTE_CHAR4 CATEGORY_2,
FCL_CATEGORY2.MEANING CATEGORY_2_DESCRIPTION,
EIEB.ATTRIBUTE_CHAR7 FORMAT,
FFVL_FORMAT.DESCRIPTION FORMAT_DESCRIPTION,
EIEB.ATTRIBUTE_CHAR8 SUBFORMAT,
FFVL_SUBFORMAT.DESCRIPTION SUBFORMAT_DESCRIPTION
FROM
HBG_TITLE_RIGHTS_EXT HTRE,
EGP_SYSTEM_ITEMS_B ESIB,
EGO_ITEM_EFF_B EIEB,
INV_ORG_PARAMETERS IOP,
FND_FLEX_VALUES_VL FFVL_OWNER,
FND_FLEX_VALUES_VL FFVL_FORMAT,
FND_FLEX_VALUES_VL FFVL_SUBFORMAT,
FND_COMMON_LOOKUPS FCL_REPORTING_GROUP,
FND_COMMON_LOOKUPS FCL_CATEGORY1,
FND_COMMON_LOOKUPS FCL_CATEGORY2
WHERE 1=1
AND HTRE.INVENTORY_ITEM_ID = ESIB.INVENTORY_ITE' || 'M_ID
AND ESIB.INVENTORY_ITEM_ID = EIEB.INVENTORY_ITEM_ID(+)
AND ESIB.ORGANIZATION_ID = EIEB.ORGANIZATION_ID(+)
AND ESIB.ORGANIZATION_ID = IOP.ORGANIZATION_ID
AND IOP.ORGANIZATION_CODE = ''ITEM_MASTER''
AND EIEB.CONTEXT_CODE(+) = ''Family Code''
AND EIEB.ATTRIBUTE_CHAR1 = FFVL_OWNER.FLEX_VALUE(+)
AND FFVL_OWNER.VALUE_CATEGORY(+) = ''HBG_Owner''
AND EIEB.ATTRIBUTE_CHAR7= FFVL_FORMAT.FLEX_VALUE(+)
AND FFVL_FORMAT.VALUE_CATEGORY(+) = ''HBG_Format''
AND EIEB.ATTRIBUTE_CHAR8 = FFVL_SUBFORMAT.FLEX_VALUE(+)
AND FFVL_SUBFORMAT.VALUE_CATEGORY(+) = ''HBG_Subformat''
AND CONCAT(EIEB.ATTRIBUTE_CHAR1,EIEB.ATTRIBUTE_CHAR2) = FCL_REPORTING_GROUP.LOOKUP_CODE(+)
AND FCL_REPORTING_GROUP.LOOKUP_TYPE (+) = ''HBG_REPORTING_GROUP''
AND CONCAT(EIEB.ATTRIBUTE_CHAR1,CONCAT(EIEB.ATTRIBUTE_CHAR2,EIEB.ATTRIBUTE_CHAR3)) = FCL_CATEGORY1.LOOKUP_CODE(+)
AND FCL_CATEGORY1.LOOKUP_TYPE (+) = ''HBG_CATEGORY_1''
AND CONCAT(EIEB.ATTRIBUTE_CHAR1,CONCAT(EIEB.ATTRIBUTE_CHAR2,CONCAT(EIEB.ATTRIBUTE_CHAR3,EIEB.ATTRIBUTE_CHAR4))' || ') = FCL_CATEGORY2.LOOKUP_CODE(+)
AND FCL_CATEGORY2.LOOKUP_TYPE (+) = ''HBG_CATEGORY_2''
AND ESIB.ITEM_TYPE = ''FG''
AND ESIB.ITEM_NUMBER = :P_ITEM_NUMBER');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getTitleRightHeaderInfo',
      p_method             => 'GET',
      p_name               => 'P_ITEM_NUMBER',
      p_bind_variable_name => 'P_ITEM_NUMBER',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getValueSetsDetails',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getValueSetsDetails',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT VALUE_CATEGORY VALUE_SET_NAME,FLEX_VALUE,DESCRIPTION,ENABLED_FLAG,START_DATE_ACTIVE,END_DATE_ACTIVE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE FROM FND_FLEX_VALUES_VL WHERE FLEX_VALUE = :P_FLEX_VALUE AND VALUE_CATEGORY = :P_VALUE_SET_NAME');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getValueSetsDetails',
      p_method             => 'GET',
      p_name               => 'P_FLEX_VALUE',
      p_bind_variable_name => 'P_FLEX_VALUE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getValueSetsDetails',
      p_method             => 'GET',
      p_name               => 'P_VALUE_SET_NAME',
      p_bind_variable_name => 'P_VALUE_SET_NAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getLookupValuesDetails',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getLookupValuesDetails',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT LOOKUP_TYPE,LOOKUP_CODE,MEANING,DESCRIPTION,ENABLED_FLAG,DISPLAY_SEQUENCE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE,TAG FROM FND_COMMON_LOOKUPS WHERE LOOKUP_TYPE = :P_LOOKUP_TYPE AND LOOKUP_CODE = :P_LOOKUP_CODE ORDER BY DESCRIPTION');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getLookupValuesDetails',
      p_method             => 'GET',
      p_name               => 'P_LOOKUP_CODE',
      p_bind_variable_name => 'P_LOOKUP_CODE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getLookupValuesDetails',
      p_method             => 'GET',
      p_name               => 'P_LOOKUP_TYPE',
      p_bind_variable_name => 'P_LOOKUP_TYPE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'createCountryGroup',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'createCountryGroup',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
x_country_group_id NUMBER;
BEGIN
hbg_so_dist_title_rights_pkg.hbg_create_country_group (
        p_country_group_code => :p_country_group_code,
		p_country_group_name => :p_country_group_name,
		p_comments => :p_comments,
		p_enabled_flag => :p_enabled_flag,
		p_created_by => :p_created_by,
		p_last_updated_by => :p_last_updated_by,
        p_return_status => :x_return_status,
        p_country_group_id => :x_country_group_id
    );
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'createCountryGroup',
      p_method             => 'POST',
      p_name               => 'x_country_group_id',
      p_bind_variable_name => 'x_country_group_id',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'INT',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'createCountryGroup',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCountryGroupList',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCountryGroupList',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
COUNTRY_GROUP_ID,
COUNTRY_GROUP_CODE || '' -- '' || COUNTRY_GROUP_NAME COUNTRY_GROUP_CODE,
COUNTRY_GROUP_NAME,
COMMENTS,
ENABLED_FLAG,
CREATED_BY,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE 
FROM
HBG_COUNTRY_GROUPS_EXT
 ORDER BY COUNTRY_GROUP_CODE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCountryAssocList',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCountryAssocList',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT HCGAE.*,HAHRE.GEOGRAPHY_NAME COUNTRY_NAME FROM HBG_COUNTRY_GROUP_ASSOC_EXT HCGAE,HZ_GEOGRAPHIES HAHRE WHERE TO_CHAR(COUNTRY_GROUP_ID) = :P_COUNTRY_GROUP_ID AND  HAHRE.GEOGRAPHY_ID = HCGAE.COUNTRY_ID
ORDER BY HCGAE.COUNTRY_CODE');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getCountryAssocList',
      p_method             => 'GET',
      p_name               => 'P_COUNTRY_GROUP_ID',
      p_bind_variable_name => 'P_COUNTRY_GROUP_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCountryGroupDetails',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCountryGroupDetails',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT * FROM HBG_COUNTRY_GROUPS_EXT WHERE TO_CHAR(COUNTRY_GROUP_ID) = :P_COUNTRY_GROUP_ID ORDER BY COUNTRY_GROUP_CODE');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getCountryGroupDetails',
      p_method             => 'GET',
      p_name               => 'P_COUNTRY_GROUP_ID',
      p_bind_variable_name => 'P_COUNTRY_GROUP_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'DeleteSelectedCountries',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'DeleteSelectedCountries',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
hbg_so_dist_title_rights_pkg.hbg_country_assoc_deletion (
        p_country_id => :p_country_id,
        p_country_group_id => :p_country_group_id,
        p_return_status => :x_return_status
    );
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'DeleteSelectedCountries',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'UpdateCountryGroup',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'UpdateCountryGroup',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
hbg_so_dist_title_rights_pkg.hbg_country_group_update (
        p_country_group_id => :p_country_group_id,
		p_comments => :p_comments,
		p_country_group_name => :p_country_group_name,
		p_enabled_flag => :p_enabled_flag,
        p_return_status => :x_return_status
    );
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'UpdateCountryGroup',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCountriesList',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCountriesList',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    geography_id      country_id,
    geography_code country_code,
    geography_code
    || '' -- ''
    || geography_name concat_country_code,
    geography_name    country_name
FROM
    hz_geographies
WHERE
    geography_type = ''COUNTRY''
ORDER BY
    geography_code');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getTitleRightDetailsInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getTitleRightDetailsInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT  * FROM 
 (SELECT DISTINCT
    htrde.title_right_id,
    esib.item_number,
    NULL title_right_detail_id, --htrde.title_right_detail_id,
    htrde.title_right_category,
	CASE WHEN COUNTRY_GROUP = ''WWD'' THEN COUNTRY_GROUP ELSE 
    hz.geography_code END country_code,
	CASE WHEN COUNTRY_GROUP = ''WWD'' THEN COUNTRY_GROUP ELSE 
    hz.geography_name END country_name
FROM
    hbg_title_right_details_ext htrde,
    hz_geographies              hz,
    hbg_title_rights_ext htre,
    egp_system_items_b esib,
    inv_org_parameters iop
WHERE
        1 = 1
    AND htrde.country_id = hz.geography_id
    AND hz.geography_type = ''COUNTRY''
    AND htrde.title_right_id = htre.title_right_id
    AND htre.inventory_item_id = esib.inventory_item_id
    AND esib.organization_id = iop.organization_id
    AND iop.organization_code = ''ITEM_MASTER''
    AND htrde.title_right_id = :P_TITLE_RIGHT_ID
    AND hz.geography_code = NVL(:P_COUNTRY_CODE,hz.geography_code)
    AND hz.geo' || 'graphy_name = NVL(:P_COUNTRY_NAME,hz.geography_name)
)
ORDER BY
    
    title_right_category,
    country_code
  ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getTitleRightDetailsInfo',
      p_method             => 'GET',
      p_name               => 'P_COUNTRY_CODE',
      p_bind_variable_name => 'P_COUNTRY_CODE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getTitleRightDetailsInfo',
      p_method             => 'GET',
      p_name               => 'P_TITLE_RIGHT_ID',
      p_bind_variable_name => 'P_TITLE_RIGHT_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getTitleRightDetailsInfo',
      p_method             => 'GET',
      p_name               => 'P_COUNTRY_NAME',
      p_bind_variable_name => 'P_COUNTRY_NAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getValueSetsInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getValueSetsInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'--select OWNER_CODE FLEX_VALUE,OWNER_NAME DESCRIPTION  from XXHBG_FAMILY_CODE_OWNER WHERE ''HBG_Owner''=trim(:P_VALUE_SET_NAME) ORDER BY OWNER_CODE
SELECT VALUE_CATEGORY VALUE_SET_NAME,FLEX_VALUE,DESCRIPTION,ENABLED_FLAG,START_DATE_ACTIVE,END_DATE_ACTIVE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE FROM FND_FLEX_VALUES_VL where VALUE_CATEGORY = trim(:P_VALUE_SET_NAME) order by flex_value');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getValueSetsInfo',
      p_method             => 'GET',
      p_name               => 'P_VALUE_SET_NAME',
      p_bind_variable_name => 'P_VALUE_SET_NAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getLookupValuesInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getLookupValuesInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT LOOKUP_TYPE,LOOKUP_CODE,MEANING,DESCRIPTION,ENABLED_FLAG,DISPLAY_SEQUENCE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE,TAG FROM FND_COMMON_LOOKUPS WHERE LOOKUP_TYPE = :P_LOOKUP_TYPE AND TAG = :P_TAG ORDER BY DESCRIPTION
/*select LOOKUP_CODE,MEANING from (select REPORTING_GRP_CODE LOOKUP_CODE,REPORTING_GRP_NAME MEANING from XXHBG_FAMILY_CODE_REPORTING_GROUP 
WHERE 1=1
AND ''HBG_REPORTING_GROUP''=trim(:P_LOOKUP_TYPE) 
AND OWNER_ID =(SELECT OWNER_ID FROM XXHBG_FAMILY_CODE_OWNER WHERE OWNER_CODE=:P_TAG)
UNION
select CATEGORY1_CODE LOOKUP_CODE,CATEGORY1_NAME MEANING from XXHBG_FAMILY_CODE_REPORTING_CATEGORY1 
WHERE 1=1
AND ''HBG_CATEGORY_1''=trim(:P_LOOKUP_TYPE) 
AND REPORTING_GROUP_ID =(SELECT REPORTING_GROUP_ID FROM XXHBG_FAMILY_CODE_REPORTING_GROUP WHERE REPORTING_GRP_CODE=:P_TAG)
UNION
select CATEGORY2_CODE LOOKUP_CODE,CATEGORY2_NAME MEANING from XXHBG_FAMILY_CODE_REPORTING_CATEGORY2 
WHERE 1=1
AND ''HBG_CATEGORY_2''=trim(:P_LOOKUP_TYPE) 
AND CATEGORY1_ID =(S' || 'ELECT CATEGORY1_ID FROM XXHBG_FAMILY_CODE_REPORTING_CATEGORY1 WHERE CATEGORY1_CODE=:P_TAG))
order by LOOKUP_CODE*/');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getLookupValuesInfo',
      p_method             => 'GET',
      p_name               => 'P_TAG',
      p_bind_variable_name => 'P_TAG',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getLookupValuesInfo',
      p_method             => 'GET',
      p_name               => 'P_LOOKUP_TYPE',
      p_bind_variable_name => 'P_LOOKUP_TYPE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'DistirbutionRules',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'DistirbutionRules',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
hbg_so_dist_title_rights_pkg.hbg_dist_rights_update (
        p_distribution_right_id => :distribution_right_id,
        p_end_date => to_date(:end_date,''YYYY-MM-DD''),
        p_group_rule => :group_rule,
        p_comments => :comments,
		p_last_updated_by => :last_updated_by,
        p_return_status => :x_return_status
    );
END;
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'DistirbutionRules',
      p_method             => 'PUT',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'DistirbutionRules',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
hbg_so_dist_title_rights_pkg.hbg_dist_rights_creation (
        p_owner => :owner,
        p_reporting_group => :reporting_group,
		p_category_1 => :category_1,
		p_category_2 => :category_2,
		p_format => :format,
		p_subformat => :subformat,
		p_from_pubdate => to_date(:from_pub_date,''YYYY-MM-DD''),
		p_to_pubdate => to_date(:to_pub_date,''YYYY-MM-DD''),
		p_country_group => :country_group,
		p_country_code => :country_code,
		p_edition => :edition,
		p_item_number => :item_number,
		p_account_number => :account_number,
		p_account_type => :account_type,
		p_default_acct_type => :default_account_type,
		p_outcome => :outcome,
		p_start_date => to_date(:start_date,''YYYY-MM-DD''),
		p_end_date => to_date(:end_date,''YYYY-MM-DD''),
		p_group_rule => :group_rule,
		p_comments => :comments,
		p_created_by => :created_by,
		p_last_updated_by => :last_updated_by,
        p_return_status => :x_return_status
    );
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'DistirbutionRules',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'DistirbutionRules',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
DISTINCT
HDRE.DISTRIBUTION_RIGHT_ID,
HAHVSE_OWNER.FLEX_VALUE OWNER,
HAHVSE_OWNER.DESCRIPTION OWNER_DESCRIPTION,
HAHLE_REPORTING_GROUP.DESCRIPTION REPORTING_GROUP,
HAHLE_REPORTING_GROUP.MEANING REPORTING_GROUP_DESCRIPTION,
HAHLE_CATEGORY1.DESCRIPTION CATEGORY_1,
HAHLE_CATEGORY1.MEANING CATEGORY_1_DESCRIPTION,
HAHLE_CATEGORY2.DESCRIPTION CATEGORY_2,
HAHLE_CATEGORY2.MEANING CATEGORY_2_DESCRIPTION,
HAHVSE_FORMAT.FLEX_VALUE FORMAT,
HAHVSE_FORMAT.DESCRIPTION FORMAT_DESCRIPTION,
HAHVSE_SUBFORMAT.FLEX_VALUE SUBFORMAT,
HAHVSE_SUBFORMAT.DESCRIPTION SUBFORMAT_DESCRIPTION,
--TO_CHAR(HDRE.FROM_PUB_DATE,''MM/DD/YYYY'') 
HDRE.FROM_PUB_DATE,
--TO_CHAR(HDRE.TO_PUB_DATE,''MM/DD/YYYY'') 
HDRE.TO_PUB_DATE,
HCGE.COUNTRY_GROUP_CODE COUNTRY_GROUP,
HAHRE.GEOGRAPHY_CODE COUNTRY_CODE,
HAHRE.GEOGRAPHY_NAME COUNTRY_NAME,
HDRE.EDITION,
HDRE.ITEM_NUMBER,
ESIB.ATTRIBUTE5 SHORT_TITLE,
ESIB.ATTRIBUTE3 SHORT_AUTHOR,
HCA.ACCOUNT_NUMBER,
HDRE.ACCOUNT_TYPE,
HDRE.DEFAULT_ACCOUNT_TYPE,
HDRE.O' || 'UTCOME,
--TO_CHAR(HDRE.START_DATE,''MM/DD/YYYY'') 
HDRE.START_DATE,
--TO_CHAR(HDRE.END_DATE,''MM/DD/YYYY'') 
HDRE.END_DATE,
HDRE.RULES_GROUP GROUP_RULE,
HDRE.COMMENTS,
TO_CHAR(HDRE.CREATION_DATE,''MM/DD/YYYY HH24:MI:ss'') CREATION_DATE,
HDRE.CREATED_BY,
TO_CHAR(HDRE.LAST_UPDATE_DATE,''MM/DD/YYYY HH24:MI:ss'') LAST_UPDATE_DATE,
HDRE.LAST_UPDATED_BY,
HDRE.PRECEDENCE_LEVEL

FROM
HBG_DIST_RIGHTS_EXT HDRE,
FND_FLEX_VALUES_VL HAHVSE_OWNER,
HBG_AUTO_HOLD_LOOKUPS_EXT HAHLE_REPORTING_GROUP,
HBG_AUTO_HOLD_LOOKUPS_EXT HAHLE_CATEGORY1,
HBG_AUTO_HOLD_LOOKUPS_EXT HAHLE_CATEGORY2,
FND_FLEX_VALUES_VL HAHVSE_FORMAT,
FND_FLEX_VALUES_VL HAHVSE_SUBFORMAT,
HBG_COUNTRY_GROUPS_EXT HCGE,
HZ_GEOGRAPHIES HAHRE,
EGP_SYSTEM_ITEMS_B ESIB,
INV_ORG_PARAMETERS IOP,
HZ_CUST_ACCOUNTS HCA

WHERE 1=1
AND HDRE.OWNER = HAHVSE_OWNER.FLEX_VALUE(+)
AND HAHVSE_OWNER.VALUE_CATEGORY(+) = ''HBG_Owner''
AND HDRE.REPORTING_GROUP = HAHLE_REPORTING_GROUP.LOOKUP_CODE(+)
AND HAHLE_REPORTING_GROUP.LOOKUP_TYPE(+) = ''' || 'HBG_REPORTING_GROUP''
AND HDRE.CATEGORY_1 = HAHLE_CATEGORY1.LOOKUP_CODE(+)
AND HAHLE_CATEGORY1.LOOKUP_TYPE(+) = ''HBG_CATEGORY_1''
AND HDRE.CATEGORY_2 = HAHLE_CATEGORY2.LOOKUP_CODE(+)
AND HAHLE_CATEGORY2.LOOKUP_TYPE(+) = ''HBG_CATEGORY_2''
AND HDRE.FORMAT = HAHVSE_FORMAT.FLEX_VALUE(+)
AND HAHVSE_FORMAT.VALUE_CATEGORY(+) = ''HBG_Format''
AND HDRE.SUB_FORMAT = HAHVSE_SUBFORMAT.FLEX_VALUE(+)
AND HAHVSE_SUBFORMAT.VALUE_CATEGORY(+) = ''HBG_Subformat''
AND HDRE.COUNTRY_GROUP_ID = HCGE.COUNTRY_GROUP_ID(+)
AND HDRE.COUNTRY_ID = HAHRE.GEOGRAPHY_ID(+)
AND HAHRE.GEOGRAPHY_TYPE(+) = ''COUNTRY''
AND HDRE.ITEM_NUMBER = ESIB.ITEM_NUMBER(+)
AND ESIB.ORGANIZATION_ID = IOP.ORGANIZATION_ID(+)
AND IOP.ORGANIZATION_CODE(+) = ''ITEM_MASTER''
AND HDRE.CUST_ACCOUNT_ID = HCA.CUST_ACCOUNT_ID(+)
AND HDRE.DISTRIBUTION_RIGHT_ID LIKE NVL(:P_DISTRIBUTION_RIGHT_ID,HDRE.DISTRIBUTION_RIGHT_ID)
AND NVL(HAHVSE_OWNER.FLEX_VALUE,''#NULL'') LIKE NVL(:P_OWNER,NVL(HAHVSE_OWNER.FLEX_VALUE,''#NULL''))
AND NVL(HAHLE_REPORTING_G' || 'ROUP.DESCRIPTION,''#NULL'') LIKE NVL(:P_REPORTING_GROUP,NVL(HAHLE_REPORTING_GROUP.DESCRIPTION,''#NULL''))
AND NVL(HAHLE_CATEGORY1.DESCRIPTION,''#NULL'') LIKE NVL(:P_CATEGORY1,NVL(HAHLE_CATEGORY1.DESCRIPTION,''#NULL''))
AND NVL(HAHLE_CATEGORY2.DESCRIPTION,''#NULL'') LIKE NVL(:P_CATEGORY2,NVL(HAHLE_CATEGORY2.DESCRIPTION,''#NULL''))
AND NVL(HAHVSE_FORMAT.FLEX_VALUE,''#NULL'') LIKE NVL(:P_FORMAT,NVL(HAHVSE_FORMAT.FLEX_VALUE,''#NULL''))
AND NVL(HAHVSE_SUBFORMAT.FLEX_VALUE,''#NULL'') LIKE NVL(:P_SUBFORMAT,NVL(HAHVSE_SUBFORMAT.FLEX_VALUE,''#NULL''))
AND TO_CHAR(NVL(HDRE.EDITION,999999999)) LIKE CASE WHEN UPPER(:P_EDITION) = ''#NULL'' THEN ''999999999'' ELSE NVL(:P_EDITION,NVL(HDRE.EDITION,999999999)) END
AND NVL(HDRE.ITEM_NUMBER,''#NULL'') LIKE NVL(:P_ITEM_NUMBER,NVL(HDRE.ITEM_NUMBER,''#NULL''))
AND NVL(HCGE.COUNTRY_GROUP_CODE,''#NULL'') LIKE NVL(:P_COUNTRY_GROUP,NVL(HCGE.COUNTRY_GROUP_CODE,''#NULL''))
AND NVL(HAHRE.GEOGRAPHY_CODE,''#NULL'') LIKE NVL(:P_COUNTRY_CODE,NVL(HAHRE.GEOGRAPHY_CODE,''#NULL''))
AND NVL(HCA.ACCO' || 'UNT_NUMBER,''A#NULL'') LIKE NVL(:P_ACCOUNT_NUMBER,NVL(HCA.ACCOUNT_NUMBER,''A#NULL''))
AND NVL(HDRE.ACCOUNT_TYPE,''#NULL'') LIKE NVL(:P_ACCOUNT_TYPE,NVL(HDRE.ACCOUNT_TYPE,''#NULL''))
AND NVL(HDRE.DEFAULT_ACCOUNT_TYPE,''#NULL'') LIKE NVL(:P_DEFAULT_ACCT_TYPE,NVL(HDRE.DEFAULT_ACCOUNT_TYPE,''#NULL''))
AND NVL(HDRE.OUTCOME,''#NULL'') LIKE NVL(:P_OUTCOME,NVL(HDRE.OUTCOME,''#NULL''))
AND NVL(HDRE.RULES_GROUP,''#NULL'') LIKE NVL(:P_GROUP_RULE,NVL(HDRE.RULES_GROUP,''#NULL''))
AND (DECODE(:P_FROM_PUBDATE,NULL,NVL(HDRE.FROM_PUB_DATE,SYSDATE),HDRE.FROM_PUB_DATE)  >= NVL(TO_DATE(:P_FROM_PUBDATE,''YYYY-MM-DD''),NVL(HDRE.FROM_PUB_DATE,SYSDATE)) 
   AND DECODE(:P_TO_PUB_DATE,NULL,NVL(HDRE.TO_PUB_DATE,SYSDATE),HDRE.TO_PUB_DATE)  <= NVL(TO_DATE(:P_TO_PUB_DATE,''YYYY-MM-DD''),NVL(HDRE.TO_PUB_DATE,SYSDATE)) 
    )
AND NVL(hdre.end_date,sysdate) >= case when :P_SHOW_ONLY_ACTIVE = ''Y'' then sysdate else nvl(hdre.end_date,sysdate) end
order by DISTRIBUTION_RIGHT_ID DESC');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getItemInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getItemInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT ESIB.INVENTORY_ITEM_ID,ESIB.ORGANIZATION_ID,ESIB.ITEM_NUMBER,ESIB.ATTRIBUTE5 SHORT_TITLE,ESIB.ATTRIBUTE3 AUTHOR FROM EGP_SYSTEM_ITEMS_B ESIB,INV_ORG_PARAMETERS IOP
WHERE 1=1
AND ESIB.ORGANIZATION_ID = IOP.ORGANIZATION_ID
AND IOP.ORGANIZATION_CODE = ''ITEM_MASTER'' 
AND ESIB.ITEM_NUMBER LIKE replace(:P_ITEM_NUMBER,'''''''',''%'')
--AND ESIB.ITEM_NUMBER LIKE upper(:P_ITEM_NUMBER||''%'')
AND ESIB.ITEM_TYPE = ''FG''');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getItemInfo',
      p_method             => 'GET',
      p_name               => 'P_ITEM_NUMBER',
      p_bind_variable_name => 'P_ITEM_NUMBER',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCustomerInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCustomerInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    account_number,
    cust_account_id,
    account_name
FROM
    hz_cust_accounts
WHERE
        1 = 1
    AND UPPER(account_number) LIKE UPPER(nvl(:p_account_number, account_number))
   --AND upper(account_number) LIKE upper(''%''||:p_account_number || ''%'')
    AND UPPER(nvl(account_name, ''#NULL'')) LIKE UPPER(nvl(:p_account_name, nvl(account_name, ''#NULL'')))
ORDER BY
    cust_account_id');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getCustomerInfo',
      p_method             => 'GET',
      p_name               => 'p_account_number',
      p_bind_variable_name => 'p_account_number',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'DIST_TITLE_RIGHTS',
      p_pattern            => 'getCustomerInfo',
      p_method             => 'GET',
      p_name               => 'p_account_name',
      p_bind_variable_name => 'p_account_name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCountryGroupAssociationList',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'DIST_TITLE_RIGHTS',
      p_pattern        => 'getCountryGroupAssociationList',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    hcgae.*,
    hahre.geography_name country_name
FROM
    hbg_country_groups_ext      hcge,
    hbg_country_group_assoc_ext hcgae,
    hz_geographies              hahre
WHERE
        1 = 1
    AND hcge.country_group_id = hcgae.country_group_id
    AND to_char(hcge.country_group_code) = :p_country_group_code
    AND hahre.geography_id = hcgae.country_id
ORDER BY
    hcgae.country_code');

  ORDS.DEFINE_MODULE(
      p_module_name    => 'FamilyCodeExtension',
      p_base_path      => '/familyCode/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'getCat2Id',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'getCat2Id',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct category2_code,category2_id from XXHBG_FAMILY_CODE_REPORTING_CATEGORY2 where category1_id in (select category1_id  from XXHBG_FAMILY_CODE_REPORTING_CATEGORY1 where reporting_group_id=:p_reporting_group_id)');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeExternalPublisher',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeExternalPublisher',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from XXHBG_FAMILY_CODE_EXTERNAL_PUBLISHER where PUB_ID =: PUB_ID');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeExternalPublisher',
      p_method             => 'DELETE',
      p_name               => 'PUB_ID',
      p_bind_variable_name => 'PUB_ID',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeExternalPublisher',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_external_publisher_create ( 
        p_external_pub_code   => :external_pub_code  ,
        p_external_pub_name   => :external_pub_name  ,
        p_external_pub_abbr   => :external_pub_abbr  ,
        p_reporting_group_id  => :reporting_group_id,
        p_start_date          => to_date(substr(:start_date,1,10),''YYYY-MM-DD'') ,
        p_end_date            => to_date(substr(:end_date,1,10),''YYYY-MM-DD'')     ,
        p_status              => :status,
        p_created_date        => sysdate,
        p_created_by          => :created_by         ,
        p_last_updated_date   => sysdate,
        p_last_updated_by     => :last_updated_by    , 
        p_category1_id        => :category1_id,
        p_return_status       => :p_return_status    

);

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeExternalPublisher',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeExternalPublisher',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select
*
from 
XXHBG_FAMILY_CODE_EXTERNAL_PUBLISHER 
where 
REPORTING_GROUP_ID =:REPORTING_GROUP_ID');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeExternalPublisher',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_external_publisher_update ( 
        p_pub_id            => :pub_id,
        p_external_pub_code   => :external_pub_code  ,
        p_external_pub_name   => :external_pub_name  ,
        p_external_pub_abbr   => :external_pub_abbr  ,
        p_reporting_group_id   => :reporting_group_id,
        p_start_date          => to_date(substr(:start_date,1,10),''YYYY-MM-DD'') ,
        p_end_date            => to_date(substr(:end_date,1,10),''YYYY-MM-DD'')     ,
        p_status              => :status     ,
        p_created_date        => to_date(substr(:created_date,1,10),''YYYY-MM-DD'')        ,
        p_created_by          => :created_by         ,
        p_last_updated_date   => sysdate,
        p_last_updated_by     => :last_updated_by    ,
        p_category1_id        => :category1_id,
        p_return_status       => :p_return_status    

);

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeExternalPublisher',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeOwner',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeOwner',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select *
from
XXHBG_FAMILY_CODE_OWNER

WHERE
        1 = 1

    AND (
 ( :P_OWNER_CODE IS NULL
            OR OWNER_CODE = :P_OWNER_CODE )

          AND ( :P_OWNER_NAME IS NULL
                OR OWNER_NAME = :P_OWNER_NAME )
            AND ( :P_OWNER_ABBR IS NULL
                OR OWNER_ABBR = :P_OWNER_ABBR )
  )
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeOwner',
      p_method             => 'GET',
      p_name               => 'owner_id',
      p_bind_variable_name => 'owner_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeOwner',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
 p_return_status varchar2(200);
BEGIN 
hbg_family_code_pkg.hbg_family_code_owner_create(
        p_owner_code        => :owner_code       ,
        p_owner_name        => :owner_name       ,
        p_owner_abbr        => :owner_abbr       ,
        p_status            => :status          ,
        p_in_pubtracker_ind => :in_pubtracker_ind,
        p_distributee_ind   => :distributee_ind  ,
        p_start_date	       =>to_date(substr(:start_date,1,10),''YYYY-MM-DD''),
        p_end_date             =>to_date(substr(:end_date,1,10),''YYYY-MM-DD''),
        p_creation_date     => sysdate,
        p_created_by        => :created_by       ,
        p_last_updated_date => sysdate,
        p_last_updated_by   => :last_updated_by    ,
p_return_status => :p_return_status
);

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeOwner',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeOwner',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
 p_return_status varchar2(200);
BEGIN 
hbg_family_code_pkg.hbg_family_code_owner_update(
      p_owner_id            => :owner_id,
      p_owner_code          => :owner_code         ,
        p_owner_name        => :owner_name       ,
        p_owner_abbr        => :owner_abbr       ,
        p_status            => :status           ,
        p_in_pubtracker_ind => :in_pubtracker_ind,
        p_distributee_ind   => :distributee_ind  ,
        p_start_date	        =>to_date(substr(:start_date,1,10),''YYYY-MM-DD''),
        p_end_date          =>to_date(substr(:end_date,1,10),''YYYY-MM-DD''),
        p_creation_date     => to_date(substr(:creation_date,1,10),''YYYY-MM-DD'')    ,
        p_created_by        => :created_by       ,
        p_last_updated_date => sysdate           ,
        p_last_updated_by   => :last_updated_by  ,
        p_return_status     => :p_return_status    
        );
end;
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeOwner',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeOwner',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from XXHBG_FAMILY_CODE_OWNER WHERE owner_id =:owner_id
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeOwner',
      p_method             => 'DELETE',
      p_name               => 'owner_id',
      p_bind_variable_name => 'owner_id',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeExternalImprint',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeExternalImprint',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
* 
from 
XXHBG_FAMILY_CODE_EXTERNAL_IMPRINT 
where 
pub_id =:pub_id');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeExternalImprint',
      p_method             => 'GET',
      p_name               => 'IMPR_ID',
      p_bind_variable_name => 'IMPR_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeExternalImprint',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_external_imprint_create ( 
        p_external_imp_code => :external_imp_code,
        p_external_imp_name => :external_imp_name,
        p_external_imp_abbr => :external_imp_abbr,
         p_reporting_group_id => :reporting_group_id,
        p_status       => :status       ,
        p_start_date      =>  to_date(substr(:start_date,1,10),''YYYY-MM-DD'')     ,
        p_end_date      =>  to_date(substr(:end_date,1,10),''YYYY-MM-DD'')     ,
        p_created_date      =>  to_date(substr(:created_date,1,10),''YYYY-MM-DD'')     ,
        p_created_by        => :created_by       ,
        p_last_updated_date => to_date(substr(:last_updated_date,1,10),''YYYY-MM-DD''),
        p_last_updated_by   => :last_updated_by  ,
        p_pub_id            => :pub_id           ,
        p_category2_id      => :category2_id,
        p_return_status     => :p_return_status    

);

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeExternalImprint',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeExternalImprint',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_external_imprint_update ( 
        p_impr_id         => :impr_id ,
        p_external_imp_code => :external_imp_code,
        p_external_imp_name => :external_imp_name,
        p_external_imp_abbr => :external_imp_abbr,
        p_reporting_group_id => :reporting_group_id,
        p_status        => :status      ,
        p_start_date      =>  to_date(substr(:start_date,1,10),''YYYY-MM-DD'')     ,
        p_end_date      =>  to_date(substr(:end_date,1,10),''YYYY-MM-DD'')     ,
        p_created_date      =>  to_date(substr(:created_date,1,10),''YYYY-MM-DD'')     ,
        p_created_by        => :created_by       ,
        p_last_updated_date => to_date(substr(:last_updated_date,1,10),''YYYY-MM-DD''),
        p_last_updated_by   => :last_updated_by  ,
        p_category2_id      => :category2_id,
        p_pub_id            => :pub_id,
        p_return_status     => :p_return_status    

);

en' || 'd;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeExternalImprint',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeFormat',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeFormat',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
* 
from 
XXHBG_FAMILYCODE_FORMAT 
where 
   1 = 1

     AND (
 ( :P_FORMAT_CODE IS NULL
            OR FORMAT_CODE = :P_FORMAT_CODE )

          AND ( :P_FORMAT_NAME IS NULL
                OR FORMAT_NAME = :P_FORMAT_NAME )
            AND ( :P_FORMAT_ABBR IS NULL
                OR FORMAT_ABBR = :P_FORMAT_ABBR )
  )');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeFormat',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_format_create ( 
       p_format_code         => :format_code        ,
        p_format_name         => :format_name        ,
        p_format_abbr         => :format_abbr        ,
        p_status              => :status           ,
        p_ebook_ind           => :ebook_ind          ,
        p_nonpub_item_ind     => :nonpub_item_ind    ,
        p_audio_ind           => :audio_ind          ,
        p_inc_sale_ind        => :inc_sale_ind       ,
        p_cal_ind             => :cal_ind            ,
        p_commodity_code      => :commodity_code     ,
        p_require_sub_fmt_ind => :require_sub_fmt_ind,
        p_creation_date       => to_date(substr(:creation_date,1,10),''YYYY-MM-DD'')      ,
        p_created_by          => :created_by         ,
        p_last_updated_date   => to_date(substr(:last_updated_date,1,10),''YYYY-MM-DD'')  ,
        p_last_updated_by     => :last_updated_' || 'by    ,
        p_return_status       => :p_return_status      

);

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeFormat',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeFormat',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_format_update ( 
           p_format_id       => :format_id,
            p_format_code         => :format_code        ,
        p_format_name         => :format_name        ,
        p_format_abbr         => :format_abbr        ,
        p_status              => :status           ,
        p_ebook_ind           => :ebook_ind          ,
        p_nonpub_item_ind     => :nonpub_item_ind    ,
        p_audio_ind           => :audio_ind          ,
        p_inc_sale_ind        => :inc_sale_ind       ,
        p_cal_ind             => :cal_ind            ,
        p_commodity_code      => :commodity_code     ,
        p_require_sub_fmt_ind => :require_sub_fmt_ind,
         p_creation_date       => to_date(substr(:creation_date,1,10),''YYYY-MM-DD'')      ,
        p_created_by          => :created_by         ,
        p_last_updated_date   => to_date(substr(:last_updated_date,1,10),''YYYY-MM-DD'') ' || ' ,
        p_last_updated_by     => :last_updated_by    ,
        p_return_status       => :p_return_status      

);

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeFormat',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'ReportingGrpLOV',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'ReportingGrpLOV',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
REPORTING_GRP_CODE,
REPORTING_GRP_NAME,
REPORTING_GRP_ABBR
from
XXHBG_FAMILY_CODE_REPORTING_GROUP');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'PublisherLOV',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'PublisherLOV',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
PUB_ID,
EXTERNAL_PUB_CODE,
EXTERNAL_PUB_NAME,
EXTERNAL_PUB_ABBR 
from 
XXHBG_FAMILY_CODE_EXTERNAL_PUBLISHER
where 
STATUS =''Y''');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FormatLOV',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FormatLOV',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select FORMAT_CODE from XXHBG_FAMILYCODE_FORMAT');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'getPubId',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'getPubId',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select pub_id ,external_pub_code,external_pub_name,external_pub_abbr from xxhbg_family_code_external_publisher where REPORTING_GROUP_ID = :REPORTING_GROUP_ID order by pub_id ASC');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'SubFormatLOV',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'SubFormatLOV',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select SUB_FORMAT_CODE,SUB_FORMAT_NAME,SUB_FORMAT_ABBR from XXHBG_FAMILY_CODE_SUB_FORMAT');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'ImprintLOV',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'ImprintLOV',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select EXTERNAL_IMP_CODE,EXTERNAL_IMP_NAME,EXTERNAL_IMP_ABBR from XXHBG_FAMILY_CODE_EXTERNAL_IMPRINT
');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeReportingGroup',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeReportingGroup',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * 
from 
XXHBG_FAMILY_CODE_REPORTING_GROUP 
where
OWNER_ID =:OWNER_ID');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeReportingGroup',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_reporting_group_create ( 
    p_reporting_grp_code => :reporting_grp_code,
p_reporting_grp_name   => :reporting_grp_name   ,
p_reporting_grp_abbr   => :reporting_grp_abbr   ,
p_created_by           => :created_by           ,
p_last_updated_by      => :last_updated_by      ,
p_owner_id             => :owner_id             ,
p_status               => :status               ,
p_start_date           => to_date(substr(:start_date,1,10),''YYYY-MM-DD'')           ,
p_end_date             => to_date(substr(:end_date,1,10),''YYYY-MM-DD'')             ,
p_return_status        => :return_status   );     
end;
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeReportingGroup',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeReportingGroup',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_reporting_group_update (
          p_reporting_group_id =>:reporting_group_id,
        p_reporting_grp_code =>:reporting_grp_code,
        p_reporting_grp_name =>:reporting_grp_name,
        p_reporting_grp_abbr =>:reporting_grp_abbr,
        p_creation_date      =>:creation_date     ,
        p_created_by         =>:created_by        ,
        p_last_updated_date  =>:last_updated_date ,
        p_last_updated_by    =>:last_updated_by   ,
        p_owner_id           =>:owner_id          ,
        p_status             =>:status            ,
        p_start_date         =>to_date(substr(:start_date,1,10),''YYYY-MM-DD''),
        p_end_date           =>to_date(substr(:end_date,1,10),''YYYY-MM-DD''),
        p_return_status      =>:p_return_status
    	);
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeReportingGroup',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeReportingGroup',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from XXHBG_FAMILY_CODE_REPORTING_GROUP where REPORTING_GROUP_ID =:REPORTING_GROUP_ID


');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeReportingGroup',
      p_method             => 'DELETE',
      p_name               => 'REPORTING_GROUP_ID',
      p_bind_variable_name => 'REPORTING_GROUP_ID',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeCategory1',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeCategory1',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
* 
from 
XXHBG_FAMILY_CODE_REPORTING_CATEGORY1 
where 
REPORTING_GROUP_ID =:REPORTING_GROUP_ID');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeCategory1',
      p_method             => 'GET',
      p_name               => 'CATEGORY1_ID',
      p_bind_variable_name => 'CATEGORY1_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeCategory1',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from XXHBG_FAMILY_CODE_REPORTING_CATEGORY1 where CATEGORY1_ID = :CATEGORY1_ID');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeCategory1',
      p_method             => 'DELETE',
      p_name               => 'CATEGORY1_ID',
      p_bind_variable_name => 'CATEGORY1_ID',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeCategory1',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_reporting_category1_create ( 

        p_category1_code         => :category1_code        ,
        p_category1_name         => :category1_name        ,
        p_category1_abbr         => :category1_abbr        ,
        p_start_date             =>  to_date(substr(:start_date,1,10),''YYYY-MM-DD'')          ,
        p_end_date               =>  to_date(substr(:end_date,1,10),''YYYY-MM-DD'')          ,
        p_status                 => :status                ,
        p_returnable_grace_days  => :returnable_grace_days ,
        p_creation_date          =>  to_date(substr(:creation_date,1,10),''YYYY-MM-DD'')          ,
        p_created_by             => :created_by            ,
        p_last_updated_date      =>  to_date(substr(:last_updated_date,1,10),''YYYY-MM-DD'')      ,
        p_last_updated_by        => :last_updated_by       ,
        p_reporting_group_id     => :reporting_group_id    ,' || '
        p_pub_id                 => :pub_id                ,
        p_company_code           => :company_code          ,
        p_osd_ind                => :osd_ind               ,
        p_partial_ship_ind       => :partial_ship_ind      ,
        p_partial_ship_threshold => :partial_ship_threshold,
        p_return_status          => :p_return_status         

);

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeCategory1',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeCategory1',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_reporting_category1_update ( 
        p_category1_id          => :category1_id,
        p_category1_code         => :category1_code        ,
        p_category1_name         => :category1_name        ,
        p_category1_abbr         => :category1_abbr        ,
        p_start_date             =>  to_date(substr(:start_date,1,10),''YYYY-MM-DD'')          ,
        p_end_date               =>  to_date(substr(:end_date,1,10),''YYYY-MM-DD'')          ,
        p_status                 => :status                ,
        p_returnable_grace_days  => :returnable_grace_days ,
        p_creation_date          =>  to_date(substr(:creation_date,1,10),''YYYY-MM-DD'')          ,
        p_created_by             => :created_by            ,
        p_last_updated_date      =>  to_date(substr(:last_updated_date,1,10),''YYYY-MM-DD'')      ,
        p_last_updated_by        => :last_updated_by       ,
        p_re' || 'porting_group_id     => :reporting_group_id    ,
        p_pub_id                 => :pub_id                ,
        p_company_code           => :company_code          ,
        p_osd_ind                => :osd_ind               ,
        p_partial_ship_ind       => :partial_ship_ind      ,
        p_partial_ship_threshold => :partial_ship_threshold,
        p_return_status          => :p_return_status         

);

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeCategory1',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeCategory2',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeCategory2',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from XXHBG_FAMILY_CODE_REPORTING_CATEGORY2 where CATEGORY2_ID =:CATEGORY2_ID');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeCategory2',
      p_method             => 'DELETE',
      p_name               => 'CATEGORY2_ID',
      p_bind_variable_name => 'CATEGORY2_ID',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeCategory2',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
* 
from 
XXHBG_FAMILY_CODE_REPORTING_CATEGORY2 
where 
CATEGORY1_ID =:CATEGORY1_ID');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeCategory2',
      p_method             => 'GET',
      p_name               => 'CATEGORY2_ID',
      p_bind_variable_name => 'CATEGORY2_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeCategory2',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_reporting_category2_create ( 
       p_category2_code       =>:category2_code,
        p_category2_name       =>:category2_name,
        p_category2_abbr       =>:category2_abbr,
        p_impr_id              => :impr_id,
        p_created_by           =>:created_by,
        p_last_updated_by      =>:last_updated_by,
        p_category1_id         =>:category1_id,
        p_start_date           =>to_date(substr(:start_date,1,10),''YYYY-MM-DD''),
        p_end_date             =>to_date(substr(:end_date ,1,10),''YYYY-MM-DD''),
        p_status               =>:status,
        p_return_status        =>:p_return_status       
);

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeCategory2',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeCategory2',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_reporting_category2_update ( 
        p_category2_id   => :category2_id,
        p_category2_code        => :category2_code       ,
        p_category2_name        => :category2_name       ,
        p_category2_abbr         => :category2_abbr        ,
        p_impr_id              => :impr_id,
        p_start_date             =>  to_date(substr(:start_date,1,10),''YYYY-MM-DD'')          ,
        p_end_date               =>  to_date(substr(:end_date,1,10),''YYYY-MM-DD'')          ,
        p_creation_date          =>  to_date(substr(:creation_date,1,10),''YYYY-MM-DD'') ,
        p_status                 => :status                ,
        p_created_by            => :created_by           ,
        p_last_updated_date => null,
        p_last_updated_by       => :last_updated_by      ,
        p_category1_id          => :category1_id         ,
        p_return_status         => :p_return_status   ' || '     
);

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeCategory2',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeSubFormat',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeSubFormat',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_sub_format_update ( 
        p_sub_format_id   => :sub_format_id,
        p_sub_format_code   => :sub_format_code  ,
        p_sub_format_name   => :sub_format_name  ,
        p_sub_format_abbr   => :sub_format_abbr  ,
        p_status        => :status       ,
        p_commodity_code    => :commodity_code   ,
        p_default_rpt_ind   => :default_rpt_ind  ,
        p_created_date      => to_date(substr(:created_date,1,10),''YYYY-MM-DD'')      ,
        p_created_by        => :created_by       ,
        p_last_updated_date => to_date(substr(:last_updated_date,1,10),''YYYY-MM-DD'') ,
        p_last_updated_by   => :last_updated_by  ,
        p_return_status     => :p_return_status  

);

end;
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeSubFormat',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeSubFormat',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
* 
from 
XXHBG_FAMILY_CODE_SUB_FORMAT 
where 
   1 = 1

     AND (
 ( :P_SUB_FORMAT_CODE IS NULL
            OR SUB_FORMAT_CODE = :P_SUB_FORMAT_CODE )

          AND ( :P_SUB_FORMAT_NAME IS NULL
                OR SUB_FORMAT_NAME = :P_SUB_FORMAT_NAME )
            AND ( :P_SUB_FORMAT_ABBR IS NULL
                OR SUB_FORMAT_ABBR = :P_SUB_FORMAT_ABBR )
  )');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'FamilyCodeSubFormat',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_family_code_pkg.hbg_family_code_sub_format_create ( 

        p_sub_format_code   => :sub_format_code  ,
        p_sub_format_name   => :sub_format_name  ,
        p_sub_format_abbr   => :sub_format_abbr  ,
        p_status        => :status       ,
        p_commodity_code    => :commodity_code   ,
        p_default_rpt_ind   => :default_rpt_ind  ,
        p_created_date      => to_date(substr(:created_date,1,10),''YYYY-MM-DD'')      ,
        p_created_by        => :created_by       ,
        p_last_updated_date => to_date(substr(:last_updated_date,1,10),''YYYY-MM-DD'') ,
        p_last_updated_by   => :last_updated_by  ,
        p_return_status     => :p_return_status  

);

end;
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'FamilyCodeExtension',
      p_pattern            => 'FamilyCodeSubFormat',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'ownerlov',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'ownerlov',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct
OWNER_CODE,
OWNER_NAME,
OWNER_ABBR
from XXHBG_FAMILY_CODE_OWNER');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'getimpId',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'FamilyCodeExtension',
      p_pattern        => 'getimpId',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select impr_id,external_imp_code,external_imp_name,external_imp_abbr from xxhbg_family_code_external_imprint where REPORTING_GROUP_ID = :REPORTING_GROUP_ID order by impr_id ASC');

  ORDS.DEFINE_MODULE(
      p_module_name    => 'HBGARInvoiceExt',
      p_base_path      => '/arinvoice/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getCusName',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getCusName',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct BILL_TO_CUSTNUM from HBG_AR_INVOCIE_DTLS_TBL  where BILL_TO_CUSTNAME=:BILL_TO_CUSTNAME');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'HBGARInvoiceExt',
      p_pattern            => 'getCusName',
      p_method             => 'GET',
      p_name               => 'BILL_TO_CUSTNAME',
      p_bind_variable_name => 'BILL_TO_CUSTNAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getTransactionStatus',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getCustomerSiteNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getCustomerSiteNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct SHIP_TO_SITENUM from HBG_AR_INVOCIE_DTLS_TBL where BILL_TO_CUSTNUM=:BILL_TO_CUSTNUM');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'HBGARInvoiceExt',
      p_pattern            => 'getCustomerSiteNumber',
      p_method             => 'GET',
      p_name               => 'BILL_TO_CUSTNUM',
      p_bind_variable_name => 'BILL_TO_CUSTNUM',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getCustomerAccountNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getCustomerAccountNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct BILL_TO_CUSTNUM from HBG_AR_INVOCIE_DTLS_TBL');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getSearchDetails',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getSearchDetails',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from HBG_AR_INVOCIE_DTLS_TBL where  (TRX_NUMBER=:P_TRX_NUMBER or :P_TRX_NUMBER is null) and (BILL_TO_CUSTNAME=:P_BILL_TO_CUSTNAME or :P_BILL_TO_CUSTNAME is null)
and (TRX_DATE=to_date(:P_TRX_DATE,''YYYY-MM-DD'') or :P_TRX_DATE is null)');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'HBGARInvoiceExt',
      p_pattern            => 'getSearchDetails',
      p_method             => 'GET',
      p_name               => 'P_TRX_NUMBER',
      p_bind_variable_name => 'P_TRX_NUMBER',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'HBGARInvoiceExt',
      p_pattern            => 'getSearchDetails',
      p_method             => 'GET',
      p_name               => 'P_BILL_TO_CUSTNAME',
      p_bind_variable_name => 'P_BILL_TO_CUSTNAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getCustomerName',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getCustomerName',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct BILL_TO_CUSTNAME from HBG_AR_INVOCIE_DTLS_TBL');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getARInvoiceDetails',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getARInvoiceDetails',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct trx_number from HBG_AR_INVOCIE_DTLS_TBL');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getTransactionDate',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getTransactionDate',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct TRX_DATE from HBG_AR_INVOCIE_DTLS_TBL');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getTransactionSource',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getTransactionSource',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct BATCH_SOURCE_NAME from HBG_AR_INVOCIE_DTLS_TBL');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getTransactionType',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'HBGARInvoiceExt',
      p_pattern        => 'getTransactionType',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct TRANSACTION_TYPE from HBG_AR_INVOCIE_DTLS_TBL');

  ORDS.DEFINE_MODULE(
      p_module_name    => 'PaymentExtension',
      p_base_path      => '/PaymentExtension/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'hbg_ar_payment_header',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'hbg_ar_payment_header',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    HAPH.BATCH_ID,
    HAPH.STATUS,
    to_char(HAPH.CREATION_DATE, ''MM/DD/YYYY'') CREATION_DATE,
    HAPH.CREATED_BY,
    to_char(HAPH.LAST_UPDATE_DATE, ''MM/DD/YYYY'') LAST_UPDATE_DATE,
    HAPH.LAST_UPDATED_BY,
    COUNT(HAPL.AMOUNT) COUNT,
    SUM(HAPL.AMOUNT) AMOUNT
FROM
    HBG_INTEGRATION.HBG_AR_PAYMENTS_HEADER_V HAPH,
    HBG_INTEGRATION.HBG_AR_PAYMENTS_LINES HAPL
WHERE
    (HAPH.BATCH_ID LIKE ''%'' || :P_BATCH_ID || ''%'' OR :P_BATCH_ID = ''NONE'' OR :P_BATCH_ID = ''undefined'') AND
    (HAPH.STATUS LIKE ''%'' || :P_STATUS || ''%'' OR :P_STATUS = ''NONE'' OR :P_STATUS = ''undefined'') AND
    (HAPH.CREATED_BY LIKE ''%'' || :P_CREATED_BY || ''%'' OR :P_CREATED_BY = ''NONE'' OR :P_CREATED_BY = ''undefined'') AND
    (:P_DATE_MODE = ''NONE'' OR :P_DATE_MODE = ''undefined'' OR
        (:P_DATE_MODE = ''After'' AND to_date(to_char(HAPH.CREATION_DATE, ''MM/DD/YYYY''), ''MM/DD/YYYY'') >= to_date(:P_START_DATE,''MM/DD/YYYY'')) OR
        (:P_DATE_MODE = ''Before'' AND to_date(to_char(HAPH.CREATION_DATE, ''MM/DD/YYYY''),' || ' ''MM/DD/YYYY'') <= to_date(:P_START_DATE,''MM/DD/YYYY'')) OR
        (:P_DATE_MODE = ''Between'' AND to_date(to_char(HAPH.CREATION_DATE, ''MM/DD/YYYY''), ''MM/DD/YYYY'') >= to_date(:P_START_DATE,''MM/DD/YYYY'') AND to_date(to_char(HAPH.CREATION_DATE, ''MM/DD/YYYY''), ''MM/DD/YYYY'') <= to_date(:P_END_DATE,''MM/DD/YYYY''))
    ) AND HAPH.BATCH_ID = HAPL.BATCH_ID
group by 
    HAPH.BATCH_ID, 
    HAPH.STATUS, 
    to_char(HAPH.CREATION_DATE, ''MM/DD/YYYY''), 
    HAPH.CREATED_BY, to_char(HAPH.LAST_UPDATE_DATE, ''MM/DD/YYYY''), 
    HAPH.LAST_UPDATED_BY');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payment_header',
      p_method             => 'GET',
      p_name               => 'P_CREATED_BY',
      p_bind_variable_name => 'P_CREATED_BY',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payment_header',
      p_method             => 'GET',
      p_name               => 'P_BATCH_ID',
      p_bind_variable_name => 'P_BATCH_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payment_header',
      p_method             => 'GET',
      p_name               => 'P_DATE_MODE',
      p_bind_variable_name => 'P_DATE_MODE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payment_header',
      p_method             => 'GET',
      p_name               => 'P_END_DATE',
      p_bind_variable_name => 'P_END_DATE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payment_header',
      p_method             => 'GET',
      p_name               => 'P_START_DATE',
      p_bind_variable_name => 'P_START_DATE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payment_header',
      p_method             => 'GET',
      p_name               => 'P_STATUS',
      p_bind_variable_name => 'P_STATUS',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'hbg_ar_payment_header',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
P_CREATE_STATUS varchar2(200);

BEGIN
HBG_AR_PAYMENTS_PKG.MERGE_HEADER_P (
    P_BATCH_ID  => :P_BATCH_ID
   ,P_CREATED_BY => :P_CREATED_BY   
   ,P_CREATION_DATE  => :P_CREATION_DATE   
   ,P_LAST_UPDATED_BY => :P_LAST_UPDATED_BY 
   ,P_LAST_UPDATE_DATE => :P_LAST_UPDATE_DATE   
   ,P_CREATE_STATUS => :P_CREATE_STATUS 
);
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payment_header',
      p_method             => 'POST',
      p_name               => 'P_CREATE_STATUS',
      p_bind_variable_name => 'P_CREATE_STATUS',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'hbg_ar_payment_lines_merge',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'hbg_ar_payment_lines_merge',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
P_CREATE_STATUS varchar2(200);
P_LINE_ID_OUT NUMBER;
begin


HBG_AR_PAYMENTS_PKG.MERGE_LINE_P (
    P_LINE_ID  => :P_LINE_ID,
    P_BATCH_ID  => :P_BATCH_ID,
    P_BUSINESS_UNIT  => :P_BUSINESS_UNIT,
    P_PROCESS_TYPE  => :P_PROCESS_TYPE,
    P_PAYMENT_TYPE  => :P_PAYMENT_TYPE,
    P_PAYMENT_DATE  => :P_PAYMENT_DATE,
    P_ACCOUNT_NUMBER  => :P_ACCOUNT_NUMBER,
    P_ACCOUNT_NAME  => :P_ACCOUNT_NAME,
    P_RECEIPT_NUMBER  => :P_RECEIPT_NUMBER,
    P_INVOICE_NUMBER  => :P_INVOICE_NUMBER,
    P_CLAIM_NUMBER  => :P_CLAIM_NUMBER,
    P_TRANSACTION_CODE  => :P_TRANSACTION_CODE,
    P_AMOUNT  => :P_AMOUNT,
    P_PAYMENT_METHOD  => :P_PAYMENT_METHOD,
    P_CURRENCY  => :P_CURRENCY,
    P_GL_ACCOUNT  => :P_GL_ACCOUNT,
    P_RECEIPT_ID  => :P_RECEIPT_ID,
    P_PAYMENT_ID  => :P_PAYMENT_ID,
    P_CLAIM_ID  => :P_CLAIM_ID,
    P_CREATION_DATE  => :P_CREATION_DATE,
    P_CREATED_BY  => :P_CREATED_BY,
    P_LAST_UPDATE_DATE  => :P_LAST_UPDATE_DATE,
    P_LAST_UPDATED_BY   => :P_LAST_UPDATED' || '_BY,
    P_RETURN_STATUS   => :P_RETURN_STATUS,
    P_RETURN_MESSAGE  => :P_RETURN_MESSAGE,
    P_CREATE_STATUS   => :P_CREATE_STATUS,
    P_LINE_ID_OUT     => :P_LINE_ID_OUT
);

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payment_lines_merge',
      p_method             => 'POST',
      p_name               => 'P_CREATE_STATUS',
      p_bind_variable_name => 'P_CREATE_STATUS',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payment_lines_merge',
      p_method             => 'POST',
      p_name               => 'P_LINE_ID_OUT',
      p_bind_variable_name => 'P_LINE_ID_OUT',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'hbg_ar_batch',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'hbg_ar_batch',
      p_method         => 'GET',
      p_source_type    => 'json/item',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT SQ_PAYMENTS_BATCH_ID.NEXTVAL NEXTVAL FROM DUAL');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'hbg_ar_payments_lines',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'hbg_ar_payments_lines',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    HAPL.LINE_ID          LINE_ID,
    HAPL.BATCH_ID         BATCH_ID,
    HAPL.BUSINESS_UNIT    BUSINESS_UNIT,
    HAPL.PAYMENT_TYPE     PAYMENT_TYPE,
    HAPL.PAYMENT_DATE     PAYMENT_DATE,
    HAPL.ACCOUNT_NUMBER   ACCOUNT_NUMBER,
    HAPL.ACCOUNT_NAME     ACCOUNT_NAME,
    HAPL.RECEIPT_NUMBER   RECEIPT_NUMBER,
    HAPL.AMOUNT           AMOUNT,
    HAPL.PAYMENT_METHOD   PAYMENT_METHOD,
    HAPL.CURRENCY         CURRENCY,
    HAPL.GL_ACCOUNT       GL_ACCOUNT,
    HAPL.CREATION_DATE    CREATION_DATE,
    HAPL.CREATED_BY       CREATED_BY,
    HAPL.LAST_UPDATE_DATE LAST_UPDATE_DATE,
    HAPL.LAST_UPDATED_BY  LAST_UPDATED_BY,
    HAPL.RETURN_STATUS    RETURN_STATUS,
    HAPL.RETURN_MESSAGE   RETURN_MESSAGE
FROM
    HBG_INTEGRATION.HBG_AR_PAYMENTS_LINES HAPL
WHERE
    HAPL.BATCH_ID = :P_BATCH_ID');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payments_lines',
      p_method             => 'GET',
      p_name               => 'P_BATCH_ID',
      p_bind_variable_name => 'P_BATCH_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'hbg_ar_payments_lines',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
P_CREATE_STATUS varchar2(200);
P_LINE_ID_OUT NUMBER;
begin


HBG_AR_PAYMENTS_PKG.HBG_PAYMENT_EXTENSION_CREATE (
    P_BATCH_ID         => :P_BATCH_ID       
   ,P_BUSINESS_UNIT    => :P_BUSINESS_UNIT  
   ,P_PAYMENT_TYPE     => :P_PAYMENT_TYPE   
   ,P_PAYMENT_DATE     => :P_PAYMENT_DATE   
   ,P_ACCOUNT_NUMBER   => :P_ACCOUNT_NUMBER 
   ,P_ACCOUNT_NAME     => :P_ACCOUNT_NAME   
   ,P_RECEIPT_NUMBER   => :P_RECEIPT_NUMBER 
   ,P_AMOUNT           => :P_AMOUNT         
   ,P_PAYMENT_METHOD   => :P_PAYMENT_METHOD 
   ,P_CURRENCY         => :P_CURRENCY       
   ,P_GL_ACCOUNT       => :P_GL_ACCOUNT     
   ,P_CREATED_BY       => :P_CREATED_BY     
   ,P_LAST_UPDATED_BY  => :P_LAST_UPDATED_BY
   ,P_CREATE_STATUS    => :P_CREATE_STATUS
   ,P_LINE_ID_OUT => :P_LINE_ID_OUT
);


end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payments_lines',
      p_method             => 'POST',
      p_name               => 'P_CREATE_STATUS',
      p_bind_variable_name => 'P_CREATE_STATUS',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'hbg_ar_payments_lines',
      p_method             => 'POST',
      p_name               => 'P_LINE_ID_OUT',
      p_bind_variable_name => 'P_LINE_ID_OUT',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'getCustomerbyAcctNum',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PaymentExtension',
      p_pattern        => 'getCustomerbyAcctNum',
      p_method         => 'GET',
      p_source_type    => 'json/item',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select account_name accountname from hz_cust_accounts hca, hz_parties hp 
where hca.party_id = hp.party_id
and account_number = :p_acct_num
and :p_acct_num is not null
order by account_number');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PaymentExtension',
      p_pattern            => 'getCustomerbyAcctNum',
      p_method             => 'GET',
      p_name               => 'p_acct_num',
      p_bind_variable_name => 'p_acct_num',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_MODULE(
      p_module_name    => 'ReservationsUI',
      p_base_path      => '/ReservationsUI/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getOrderNumberLoV',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getOrderNumberLoV',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct order_number from doo_headers_all order by to_number(order_number) desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getAccountTypeLov',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getAccountTypeLov',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct description from FND_FLEX_VALUES_VL where value_category = ''HBG_ACCOUNT_TYPE'' order by description');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getSalesTypeLov',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getSalesTypeLov',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct description from FND_FLEX_VALUES_VL where value_category = ''HBG_SALES_TYPE'' order by description');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getPartySiteNumberLOV',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getPartySiteNumberLOV',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct party_site_number, party_site_name from hz_party_sites where :p_party_site_number is null or party_site_number like :p_party_site_number || ''%''');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'getPartySiteNumberLOV',
      p_method             => 'GET',
      p_name               => 'p_party_site_number',
      p_bind_variable_name => 'p_party_site_number',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getReserHeaderbyItemCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getReserHeaderbyItemCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
   distinct rh.*
FROM
   xxhbg_res_pre_reservation_header rh,
   xxhbg_res_pre_reservation_lines rl
   
WHERE
        1 = 1

    AND (
 ( :p_pre_reservation_number IS NULL 
            OR rh.pre_reservation_number = :p_pre_reservation_number )
	AND ( :p_inventory_organization IS NULL
            OR rh.inventory_organization = :p_inventory_organization )
	AND ( :p_requester IS NULL
            OR rh.requester = :p_requester )
	AND ( :p_approver IS NULL
            OR rh.approver = :p_approver )
	AND ( :p_reason_code IS NULL
            OR rh.reason_code = :p_reason_code )		
	AND ( :p_reservation_type IS NULL
            OR rh.reservation_type = :p_reservation_type )		
	AND ( :p_print_number IS NULL
            OR rh.print_number = :p_print_number )		
	AND ( :p_expiration_date IS NULL
            OR trunc(rh.expiration_date) = trunc(to_date(substr(:p_expiration_date,1,10),''YYYY-MM-DD HH24:MI:SS'')) )
	AND ( :p_comments IS NULL
            OR rh.comments =' || ' :p_comments )
	AND ( :p_status IS NULL
            OR rh.status = :p_status )
	AND ( :p_item_code IS NULL
            OR rl.item_code = :p_item_code )
	AND rh.pre_reservation_number = rl.reservation_number
	      
  ) order by pre_reservation_number desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationLineAttributes',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationLineAttributes',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
ESIB.ITEM_NUMBER,
ESIB.ATTRIBUTE26 ISBN_ON_BOOK,
ESIB.ATTRIBUTE14 PUB_STATUS,
ESIB.ATTRIBUTE5 SHORT_TITLE,
ESIB.ATTRIBUTE3 SHORT_AUTHOR,
EIEB.ATTRIBUTE_CHAR1 OWNER,
FFVL_OWNER.DESCRIPTION OWNER_DESCRIPTION,
EIEB.ATTRIBUTE_CHAR2 REPORTING_GROUP,
FCL_REPORTING_GROUP.MEANING REPORTING_GROUP_DESCRIPTION,
EIEB.ATTRIBUTE_CHAR3 CATEGORY_1,
FCL_CATEGORY1.MEANING CATEGORY_1_DESCRIPTION,
EIEB.ATTRIBUTE_CHAR4 CATEGORY_2,
FCL_CATEGORY2.MEANING CATEGORY_2_DESCRIPTION
FROM
EGP_SYSTEM_ITEMS_B ESIB,
EGO_ITEM_EFF_B EIEB,
INV_ORG_PARAMETERS IOP,
FND_FLEX_VALUES_VL FFVL_OWNER,
FND_FLEX_VALUES_VL FFVL_FORMAT,
FND_FLEX_VALUES_VL FFVL_SUBFORMAT,
FND_COMMON_LOOKUPS FCL_REPORTING_GROUP,
FND_COMMON_LOOKUPS FCL_CATEGORY1,
FND_COMMON_LOOKUPS FCL_CATEGORY2
WHERE 1=1
AND ESIB.INVENTORY_ITEM_ID = EIEB.INVENTORY_ITEM_ID(+)
AND ESIB.ORGANIZATION_ID = EIEB.ORGANIZATION_ID(+)
AND ESIB.ORGANIZATION_ID = IOP.ORGANIZATION_ID
AND IOP.ORGANIZATION_CODE = ''ITEM_MASTER''
AND EIEB.CONTEXT_COD' || 'E(+) = ''Family Code''
AND EIEB.ATTRIBUTE_CHAR1 = FFVL_OWNER.FLEX_VALUE(+)
AND FFVL_OWNER.VALUE_CATEGORY(+) = ''HBG_Owner''
AND EIEB.ATTRIBUTE_CHAR7= FFVL_FORMAT.FLEX_VALUE(+)
AND FFVL_FORMAT.VALUE_CATEGORY(+) = ''HBG_Format''
AND EIEB.ATTRIBUTE_CHAR8 = FFVL_SUBFORMAT.FLEX_VALUE(+)
AND FFVL_SUBFORMAT.VALUE_CATEGORY(+) = ''HBG_Subformat''
AND CONCAT(EIEB.ATTRIBUTE_CHAR1,EIEB.ATTRIBUTE_CHAR2) = FCL_REPORTING_GROUP.LOOKUP_CODE(+)
AND FCL_REPORTING_GROUP.LOOKUP_TYPE (+) = ''HBG_REPORTING_GROUP''
AND CONCAT(EIEB.ATTRIBUTE_CHAR1,CONCAT(EIEB.ATTRIBUTE_CHAR2,EIEB.ATTRIBUTE_CHAR3)) = FCL_CATEGORY1.LOOKUP_CODE(+)
AND FCL_CATEGORY1.LOOKUP_TYPE (+) = ''HBG_CATEGORY_1''
AND CONCAT(EIEB.ATTRIBUTE_CHAR1,CONCAT(EIEB.ATTRIBUTE_CHAR2,CONCAT(EIEB.ATTRIBUTE_CHAR3,EIEB.ATTRIBUTE_CHAR4))) = FCL_CATEGORY2.LOOKUP_CODE(+)
AND FCL_CATEGORY2.LOOKUP_TYPE (+) = ''HBG_CATEGORY_2''
AND ESIB.ITEM_TYPE = ''FG''
AND ESIB.ITEM_NUMBER = :P_ITEM_NUMBER');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'ReservationLineAttributes',
      p_method             => 'GET',
      p_name               => 'p_item_number',
      p_bind_variable_name => 'p_item_number',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getLotDetailsbyItemCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getLotDetailsbyItemCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT  b.ORGANIZATION_CODE, a.SUBINVENTORY_CODE, a.LOT_NUMBER, SUM(a.TRANSACTION_QUANTITY) quantity, c.INVENTORY_ITEM_STATUS_CODE Item_Status
FROM hbg_inv_onhand_quantities_detail a,
inv_org_parameters b,
egp_system_items_b c
WHERE a.INVENTORY_ITEM_ID = c.INVENTORY_ITEM_ID
and c.item_number = :item_code
and a.organization_id = b.organization_id
and a.organization_id = c.organization_id
GROUP BY c. item_number, b.ORGANIZATION_CODE, a.ORGANIZATION_ID, a.SUBINVENTORY_CODE, a.LOT_NUMBER, c.INVENTORY_ITEM_STATUS_CODE
ORDER BY c. item_number, b.ORGANIZATION_CODE, a.ORGANIZATION_ID, a.SUBINVENTORY_CODE, a.LOT_NUMBER, c.INVENTORY_ITEM_STATUS_CODE');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'getLotDetailsbyItemCode',
      p_method             => 'GET',
      p_name               => 'item_code',
      p_bind_variable_name => 'item_code',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationHeader',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationHeader',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'    SELECT
      distinct 
      rh.pre_reservation_number
     ,rh.inventory_organization    
     ,rh.requester                 
     ,rh.approver                  
     ,rh.reason_code               
     ,rh.reservation_type          
     ,rh.print_number               
     ,to_char(rh.expiration_date,''YYYY-MM-DD'') expiration_date
     --,to_date(to_char(rh.expiration_date),''YYYY-MM-DD HH24:MI:SS'') expiration_date
     --,to_char(to_date(rh.expiration_date,''YYYY-MM-DD HH24:MI:SS'')) expiration_date
     --,to_date(substr(rh.expiration_date,1,10),''YYYY-MM-DD HH24:MI:SS'') expiration_date
     ,rh.comments                  
     ,rh.status                    
     ,rh.created_by                
     ,rh.created_date              
     ,rh.last_updated_by           
     ,rh.last_update_date          
     ,rh.auto_clear_on_expiry_date 

    FROM
       xxhbg_res_pre_reservation_header rh,
       xxhbg_res_pre_reservation_lines rl
       
    WHERE
          ' || '  1 = 1
    
        AND (
            ( :p_pre_reservation_number IS NULL
                OR rh.pre_reservation_number = :p_pre_reservation_number )
        AND ( :p_inventory_organization IS NULL
                OR rl.inventory_organization = :p_inventory_organization
                and rl.reservation_number = rh.pre_reservation_number)
        AND ( :p_requester IS NULL
                OR rh.requester = :p_requester )
        AND ( :p_approver IS NULL
                OR rh.approver = :p_approver )
        AND ( :p_reason_code IS NULL
                OR rh.reason_code = :p_reason_code )		
        AND ( :p_reservation_type IS NULL
                OR rh.reservation_type = :p_reservation_type )		
        AND ( :p_print_number IS NULL
                OR rh.print_number = :p_print_number )		
        AND ( to_date(:p_expiration_date,''YYYY-MM-DD'') IS NULL
                OR rh.expiration_date = to_date(:p_expiration_date,''YYYY-MM-DD''))
        AND ( :p_comments IS NULL' || '
                OR rh.comments = :p_comments )
        AND ( :p_status IS NULL
                OR rh.status = :p_status )
              
      ) order by pre_reservation_number desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationHeader',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
HBG_PRE_RESERVATIONS_PKG.hbg_pre_res_header_create (
        p_pre_reservation_number => :pre_reservation_number,
        p_inventory_organization => :inventory_organization,
        p_requester => :requester,
        p_approver => :approver,
        p_reason_code => :reason_code,
        p_reservation_type => :reservation_type,
        p_print_number => :print_number,
        p_expiration_date => to_date(substr(:expiration_date,1,10),''YYYY-MM-DD HH24:MI:SS''),
        p_auto_clear_on_expiry_date => :auto_clear_on_expiry_date,
        p_comments => :comments,
        p_status => :status,
        p_criteria_uid => :criteria_uid,
        p_created_by => :created_by,
        p_last_updated_by => :last_updated_by,
		p_return_status => :x_return_status
    );
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'ReservationHeader',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationHeaderCheck',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationHeaderCheck',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from xxhbg_res_pre_reservation_lines where reservation_number = :p_reservation_number and erp_reservation_id is null');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationHeaderCheck',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
HBG_PRE_RESERVATIONS_PKG.hbg_pre_res_header_check (
        p_requester => :requester,
        p_reason_code => :reason_code,
        p_reservation_type => :reservation_type,
        p_expiration_date => to_date(substr(:expiration_date,1,10),''YYYY-MM-DD''),
        p_status => :status,
        p_return_status => :x_return_status
    );
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'ReservationHeaderCheck',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationLine',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationLine',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from xxhbg_res_pre_reservation_lines where reservation_number = :p_reservation_number');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'ReservationLine',
      p_method             => 'GET',
      p_name               => 'p_reservation_number',
      p_bind_variable_name => 'p_reservation_number',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationLine',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
HBG_PRE_RESERVATIONS_PKG.hbg_pre_res_lines_create (  
  
p_item_code	=> :item_code,
p_isbn_on_book	=> :isbn_on_book,
p_short_title	=> :short_title,
p_status	=> :status,
p_reservation_type	=> :reservation_type,
p_print_number	=> :print_number,
p_inventory_organization	=> :inventory_organization,
p_lot_number	=> :lot_number,
p_subinventory	=> :subinventory,
p_requested_quantity	=> :requested_quantity,
p_reserved_quantity	=> :reserved_quantity,
p_released_via_cuid	=> :released_via_cuid,
p_available_reserved	=> :available_reserved,
p_ip_only	=> :ip_only,
p_pre_reserved_balance	=> :pre_reserved_balance,
p_usable_balance	=> :usable_balance,
p_end_balance	=> :end_balance,
p_created_by	=> :created_by,
p_last_updated_by	=> :last_updated_by,
p_reservation_number => :reservation_number,
p_record_id => :record_id,
p_po_number => :po_number,
p_wo_number => :wo_number,
p_return_status => :x_return_status
    );
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'ReservationLine',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationLine',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);

BEGIN
HBG_PRE_RESERVATIONS_PKG.hbg_pre_res_lines_delete (

p_item_code	=> :item_code,
p_inventory_organization => :inventory_organization,
p_lot_number => :lot_number,
p_reservation_number => :reservation_number,
p_return_status => :x_return_status);

END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'ReservationLine',
      p_method             => 'DELETE',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'GetReservationHeader',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'GetReservationHeader',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => 'Header data for Export in to excel',
      p_source         => 
'    SELECT
      distinct 
      concat('''''''',rh.pre_reservation_number) pre_reservation_number
     ,rh.inventory_organization    
     ,rh.requester                 
     ,rh.approver                  
     ,rh.reason_code               
     ,rh.reservation_type          
     ,rh.print_number               
     ,to_char(rh.expiration_date,''YYYY-MM-DD'') expiration_date
     --,to_date(to_char(rh.expiration_date),''YYYY-MM-DD HH24:MI:SS'') expiration_date
     --,to_char(to_date(rh.expiration_date,''YYYY-MM-DD HH24:MI:SS'')) expiration_date
     --,to_date(substr(rh.expiration_date,1,10),''YYYY-MM-DD HH24:MI:SS'') expiration_date
     ,rh.comments                  
     ,rh.status                    
     ,rh.created_by                
     ,rh.created_date              
     ,rh.last_updated_by           
     ,rh.last_update_date          
     ,rh.auto_clear_on_expiry_date 

    FROM
       xxhbg_res_pre_reservation_header rh,
       xxhbg_res_pre_reservation_line' || 's rl
       
    WHERE
            1 = 1
    
        AND (
            ( :p_pre_reservation_number IS NULL
                OR rh.pre_reservation_number = :p_pre_reservation_number )
        AND ( :p_inventory_organization IS NULL
                OR rl.inventory_organization = :p_inventory_organization
                and rl.reservation_number = rh.pre_reservation_number)
        AND ( :p_requester IS NULL
                OR rh.requester = :p_requester )
        AND ( :p_approver IS NULL
                OR rh.approver = :p_approver )
        AND ( :p_reason_code IS NULL
                OR rh.reason_code = :p_reason_code )		
        AND ( :p_reservation_type IS NULL
                OR rh.reservation_type = :p_reservation_type )		
        AND ( :p_print_number IS NULL
                OR rh.print_number = :p_print_number )		
        AND ( to_date(:p_expiration_date,''YYYY-MM-DD'') IS NULL
                OR rh.expiration_date = to_date(:p_expiration_date,''YYYY-MM-DD''))' || '
        AND ( :p_comments IS NULL
                OR rh.comments = :p_comments )
        AND ( :p_status IS NULL
                OR rh.status = :p_status )
              
      ) order by pre_reservation_number desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getInventoryOrg',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getInventoryOrg',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT ORGANIZATION_ID, ORGANIZATION_CODE FROM inv_org_parameters WHERE ORGANIZATION_CODE IN (''HBG'',''HXR'',''EXT'',''INDY'')');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationCriteria',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationCriteria',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
    x_return_status VARCHAR2(200);
BEGIN
hbg_pre_reservations_pkg.hbg_pre_res_criteria_create (
               
		p_order_number => :order_number,              
		p_release_date => to_date(substr(:release_date,1,10),''YYYY-MM-DD HH24:MI:SS''),
		p_entered_by   => :entered_by,
		p_purchase_order_number => :purchase_order_number,
		p_work_order_number => :work_order_number,
		p_organization_code => :organization_code,        
		p_account_type => :account_type,
		p_bill_to_code => :bill_to_code,           
		p_ship_to_code => :ship_to_code,           
		p_sale_type => :sale_type,
		p_offer_code => :offer_code,             
		p_override_hot_title => :override_hot_title,
		p_reservation_number => :reservation_number,
        p_criteria_uid => :criteria_uid,
        p_item_code => :item_code,
        p_return_status => :x_return_status     
    );
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'ReservationCriteria',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationCriteria',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from xxhbg_res_pre_reservation_add_criteria 
where reservation_number = :p_reservation_number
order by criteria_uid');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'ReservationCriteria',
      p_method             => 'GET',
      p_name               => 'p_reservation_number',
      p_bind_variable_name => 'p_reservation_number',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationCriteria',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DELETE FROM xxhbg_res_pre_reservation_add_criteria
WHERE RESERVATION_NUMBER = :P_RESERVATION_NUMBER
AND CRITERIA_UID = :P_CRITERIA_UID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ItemCodeLov',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ItemCodeLov',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct item_number from egp_system_items_b');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'postlinesandheaders',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'postlinesandheaders',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
  P_BODY_DATA BLOB;
  p_return_sts VARCHAR2(2000);
BEGIN
    P_BODY_DATA := :body;
      xxhbg_pre_reservations_pkg.hbg_pre_res_header_create(p_resevation_dtls    => UTL_RAW.cast_to_varchar2(P_BODY_DATA),
            p_return_status      => p_return_sts);
  :p_return_status := p_return_sts;
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'postlinesandheaders',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationHistory',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'ReservationHistory',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT * FROM
       xxhbg_res_pre_reservation_history
    WHERE       1 = 1
    
        AND 
            ( (:p_pre_reservation_number IS NULL or :p_pre_reservation_number = ''undefined'')
                OR pre_reservation_number = :p_pre_reservation_number )
        AND ( (:p_item_code IS NULL or :p_item_code = ''undefined'')
                OR item_code = :p_item_code)');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getReservationNumber',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getReservationNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct pre_reservation_number from xxhbg_res_pre_reservation_header order by pre_reservation_number desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getReservationCriteria',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getReservationCriteria',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from xxhbg_res_pre_reservation_add_criteria where criteria_uid = :p_criteria_uid');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getReserHeaderbyCriteriaID',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getReserHeaderbyCriteriaID',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select a.* from xxhbg_res_pre_reservation_header a, xxhbg_res_pre_reservation_add_criteria b
where a.pre_reservation_number = b.reservation_number
and b.criteria_uid = :p_criteria_uid');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getPreReservedBalance',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getPreReservedBalance',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select sum(reserved_quantity) pre_reserved_balance from xxhbg_res_pre_reservation_lines 
where item_code = :item_code
and inventory_organization = :inventory_organization
and subinventory = :subinventory');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getCustAccountNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getCustAccountNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT distinct account_number, account_name FROM hz_cust_accounts where account_number like :p_account_number || ''%'' order BY account_number');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'getCustAccountNumber',
      p_method             => 'GET',
      p_name               => 'p_account_number',
      p_bind_variable_name => 'p_account_number',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getPartyName',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'ReservationsUI',
      p_pattern        => 'getPartyName',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select DISTINCT party_number from hz_parties where party_type = ''ORGANIZATION'' and party_number like :p_party_number || ''%''');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'ReservationsUI',
      p_pattern            => 'getPartyName',
      p_method             => 'GET',
      p_name               => 'p_party_number',
      p_bind_variable_name => 'p_party_number',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_MODULE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_base_path      => '/AutomaticHolds/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getOrganizationName',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getOrganizationName',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT DISTINCT
    hp.party_number organization_number,
    hp.party_name   organization_name
FROM
    hz_parties hp,
    hz_cust_accounts hca
WHERE
        1 = 1
    AND UPPER(hp.party_number) like UPPER(nvl(:p_org_number, hp.party_number))
    AND UPPER(hp.party_name) like UPPER(nvl(:p_org_name,hp.party_name))
    AND hca.party_id = hp.party_id
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getOrganizationName',
      p_method             => 'GET',
      p_name               => 'P_ORG_NUMBER',
      p_bind_variable_name => 'P_ORG_NUMBER',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getOrganizationName',
      p_method             => 'GET',
      p_name               => 'P_ORG_NAME',
      p_bind_variable_name => 'P_ORG_NAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getOwnerName',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getOwnerName',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT VALUE_CATEGORY VALUE_SET_NAME,FLEX_VALUE,DESCRIPTION,ENABLED_FLAG,START_DATE_ACTIVE,END_DATE_ACTIVE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE FROM FND_FLEX_VALUES_VL WHERE VALUE_CATEGORY = ''HBG_Owner''  ORDER BY FLEX_VALUE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCustomerInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCustomerInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT HP.PARTY_NUMBER ORGANIZATION_NUMBER,HCA.CUST_ACCOUNT_ID,HCA.ACCOUNT_NUMBER,HCA.ACCOUNT_NAME FROM HZ_CUST_ACCOUNTS HCA,HZ_PARTIES HP WHERE HCA.PARTY_ID = HP.PARTY_ID AND HP.PARTY_NUMBER = :P_ORG_NAME AND HCA.ACCOUNT_NUMBER = NVL(:P_ACCOUNT_NUMBER,HCA.ACCOUNT_NUMBER)');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getCustomerInfo',
      p_method             => 'GET',
      p_name               => 'P_ORG_NAME',
      p_bind_variable_name => 'P_ORG_NAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getCustomerInfo',
      p_method             => 'GET',
      p_name               => 'P_ACCOUNT_NUMBER',
      p_bind_variable_name => 'P_ACCOUNT_NUMBER',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getItemInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getItemInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    esib.item_number,
    esib.attribute5 short_title,
    esib.attribute3 author
FROM
    egp_system_items_b esib,
    inv_org_parameters iop
WHERE
        1 = 1
    AND esib.organization_id = iop.organization_id
    AND iop.organization_code = ''ITEM_MASTER''
    AND esib.item_number like :p_item_number
    AND esib.item_type = ''FG''
    AND esib.item_number NOT LIKE ''%TEMPLATE%''');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getItemInfo',
      p_method             => 'GET',
      p_name               => 'P_ITEM_NUMBER',
      p_bind_variable_name => 'P_ITEM_NUMBER',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getHoldRules',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getHoldRules',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT DISTINCT
    a.*
FROM
    (
        SELECT
            hahcre.owner_name                                         owner_name,
            hahvse_owner.description                                  owner_name_desc,
            hahvse_reporting.description                              reporting_group,
            hahvse_reporting.meaning                                  reporting_group_desc,
            hahvse_catgeory1.description                              category_1,
            hahvse_catgeory1.meaning                                  category_1_desc,
            hahvse_catgeory2.description                              category_2,
            hahvse_catgeory2.meaning                                  category_2_desc,
            hahcre.item_number,
            esib.attribute3                                           author,
            esib.attribute5                                           short_title,
            hahcre.organization,
            hp.party_' || 'name                                             organization_name,
            hahcre.account_number,
            hca.account_name,
            hahcre.ship_to_site,
            hps.party_site_name,
            hahcre.country,
            hahcre.state,
            hahce_hold.hold_name,
            hahcre.hold_comments,
           -- to_char(hahcre.start_date,''MM-DD-YYYY'') 
            hahcre.start_date                                         start_date,
           -- to_char(hahcre.end_date,''MM-DD-YYYY'')
            hahcre.end_date                                           end_date,
            hahcre.auto_release_flag,
            hahcre.rule_id,
            hahcre.comments,
            to_char(hahcre.creation_date, ''MM-DD-YYYY HH24:MI:ss'')    creation_date,
            hahcre.created_by,
            to_char(hahcre.last_update_date, ''MM-DD-YYYY HH24:MI:ss'') last_update_date,
            hahcre.last_updated_by,
            hahcre.department,
            hahcre.zip_' || 'code
        FROM
            hbg_auto_hold_custom_rules_ext hahcre,
            egp_system_items_b             esib,
            inv_org_parameters             iop,
            hz_parties                     hp,
            hz_cust_accounts               hca,
            hz_party_sites                 hps,
            hz_cust_acct_sites_all         hcasa,
            hz_cust_site_uses_all          hcsua,
            fnd_flex_values_vl             hahvse_owner,
            fnd_common_lookups             hahvse_reporting,
            fnd_common_lookups             hahvse_catgeory1,
            fnd_common_lookups             hahvse_catgeory2,
            doo_hold_codes_vl              hahce_hold
        WHERE
                1 = 1
            AND hahcre.item_number = esib.item_number (+)
            AND esib.organization_id = iop.organization_id (+)
            AND iop.organization_code (+) = ''ITEM_MASTER''
            AND hahcre.organization = hp.party_number (+)
   ' || '         AND hahcre.account_number = hca.account_number (+)
            AND hahcre.ship_to_site = hps.party_site_number (+)
            AND hps.party_site_id = hcasa.party_site_id (+)
            AND hcasa.cust_acct_site_id = hcsua.cust_acct_site_id (+)
            AND hcsua.site_use_code (+) = ''SHIP_TO''
            AND hahcre.owner_name = hahvse_owner.flex_value (+)
            AND hahvse_owner.value_category (+) = ''HBG_Owner''
            AND hahcre.reporting_group = hahvse_reporting.lookup_code (+)
            AND hahvse_reporting.lookup_type (+) = ''HBG_REPORTING_GROUP''
            AND hahcre.category_1 = hahvse_catgeory1.lookup_code (+)
            AND hahvse_catgeory1.lookup_type (+) = ''HBG_CATEGORY_1''
            AND hahcre.category_2 = hahvse_catgeory2.lookup_code (+)
            AND hahvse_catgeory2.lookup_type (+) = ''HBG_CATEGORY_2''
            AND hahcre.hold_name = hahce_hold.hold_code (+)
            AND hahcre.start_date between CASE
                         ' || '               WHEN :p_show_only_active = ''Future'' THEN
                                            sysdate + 1
                                        ELSE
                                            hahcre.start_date
                                    END
                                    and CASE
                                        WHEN :p_show_only_active = ''Future'' THEN
                                            hahcre.start_date
                                        WHEN :p_show_only_active = ''All'' THEN
                                            hahcre.start_date
                                        ELSE
                                            sysdate
                                    END
            AND nvl(hahcre.end_date, sysdate) BETWEEN CASE
                                                          WHEN nvl(:p_show_only_active,''Active'') = ''Active'' THEN
                                                              sysdate
                  ' || '                                        ELSE
                                                              nvl(hahcre.end_date, sysdate)
                                                      END AND CASE
                                                                  WHEN nvl(:p_show_only_active,''Active'') in (''Active'',''All'',''Future'') THEN
                                                                      nvl(hahcre.end_date, sysdate)
                                                                  WHEN nvl(:p_show_only_active,''Active'') = ''Expired'' THEN
                                                                      sysdate -1 
                                                                  ELSE
                                                                      sysdate
                                                              END
    ) a
WHERE
        1 = 1
    AND nvl(a.rule_id, 1) LIKE nvl(:p_rule_id, nvl(a.rule_id, 1))
    AND upper(nvl(a.owner_name' || ', ''#NULL'')) LIKE upper(nvl(:p_owner, nvl(a.owner_name, ''#NULL'')))
    AND upper(nvl(a.reporting_group, ''#NULL'')) LIKE upper(nvl(:p_reporting_group, nvl(a.reporting_group, ''#NULL'')))
    AND upper(nvl(a.category_1, ''#NULL'')) LIKE upper(nvl(:p_category1, nvl(a.category_1, ''#NULL'')))
    AND upper(nvl(a.category_2, ''#NULL'')) LIKE upper(nvl(:p_category2, nvl(a.category_2, ''#NULL'')))
    AND upper(nvl(a.item_number, ''#NULL'')) LIKE upper(nvl(:p_item_number, nvl(a.item_number, ''#NULL'')))
    AND upper(nvl(a.short_title, ''#NULL'')) LIKE upper(nvl(:p_short_title, nvl(a.short_title, ''#NULL'')))
    AND upper(nvl(a.author, ''#NULL'')) LIKE upper(nvl(:p_short_author, nvl(a.author, ''#NULL'')))
    AND upper(nvl(a.organization, ''#NULL'')) LIKE upper(nvl(:p_organization, nvl(a.organization, ''#NULL'')))
    AND upper(nvl(a.organization_name, ''#NULL'')) LIKE upper(nvl(:p_organization_name, nvl(a.organization_name, ''#NULL'')))
    AND upper(nvl(a.ship_to_site, ''#NULL'')) LIKE upper(nvl(:p_shipto, nvl(a.s' || 'hip_to_site, ''#NULL'')))
    AND upper(nvl(a.party_site_name, ''#NULL'')) LIKE upper(nvl(:p_shipto_name, nvl(a.party_site_name, ''#NULL'')))
    AND upper(nvl(a.account_number, ''#NULL'')) LIKE upper(nvl(:p_account_number, nvl(a.account_number, ''#NULL'')))
    AND upper(nvl(a.account_name, ''#NULL'')) LIKE upper(nvl(:p_account_name, nvl(a.account_name, ''#NULL'')))
    AND upper(nvl(a.country, ''#NULL'')) LIKE upper(nvl(:p_country, nvl(a.country, ''#NULL'')))
    AND upper(nvl(a.state, ''#NULL'')) LIKE upper(nvl(:p_state, nvl(a.state, ''#NULL'')))
    AND upper(nvl(a.hold_name, ''#NULL'')) LIKE upper(nvl(:p_holdname, nvl(a.hold_name, ''#NULL'')))
    AND upper(nvl(a.auto_release_flag, ''#NULL'')) LIKE upper(nvl(:p_autoreleaseflag, nvl(a.auto_release_flag, ''#NULL'')))
ORDER BY
    a.rule_id DESC');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'P_OWNER',
      p_bind_variable_name => 'P_OWNER',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_category2',
      p_bind_variable_name => 'p_category2',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_category1',
      p_bind_variable_name => 'p_category1',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_item_number',
      p_bind_variable_name => 'p_item_number',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_short_title',
      p_bind_variable_name => 'p_short_title',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_short_author',
      p_bind_variable_name => 'p_short_author',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_organization',
      p_bind_variable_name => 'p_organization',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_organization_name',
      p_bind_variable_name => 'p_organization_name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_shipto',
      p_bind_variable_name => 'p_shipto',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_shipto_name',
      p_bind_variable_name => 'p_shipto_name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_account_number',
      p_bind_variable_name => 'p_account_number',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_account_name',
      p_bind_variable_name => 'p_account_name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_country',
      p_bind_variable_name => 'p_country',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_state',
      p_bind_variable_name => 'p_state',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_holdname',
      p_bind_variable_name => 'p_holdname',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_autoreleaseflag',
      p_bind_variable_name => 'p_autoreleaseflag',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_reporting_group',
      p_bind_variable_name => 'p_reporting_group',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_rule_id',
      p_bind_variable_name => 'p_rule_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldRules',
      p_method             => 'GET',
      p_name               => 'p_show_only_active',
      p_bind_variable_name => 'p_show_only_active',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'UpdateHoldRule',
      p_priority       => 0,
      p_etag_type      => 'NONE',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'UpdateHoldRule',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
hbg_so_auto_holds_pkg.hbg_so_custom_rule_update (
        p_comments => :p_comments,
        p_autoreleaseflag => :p_autoreleaseflag,
        p_end_date => to_date(:p_end_date,''YYYY-MM-DD''), -- MM/DD/YYYY
        p_rule_id => :p_rule_id,
        p_last_updated_by => :p_last_updated_by,
        p_hold_comments => :p_hold_comments,
        p_department => :p_department,
        p_return_status => :x_return_status
    );
END;
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'UpdateHoldRule',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getShiptoInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getShiptoInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
HCA.CUST_ACCOUNT_ID,
HPS.PARTY_SITE_NUMBER,
HPS.PARTY_SITE_NAME
FROM
HZ_PARTIES HP,
HZ_CUST_ACCOUNTS HCA,
HZ_CUST_ACCT_SITES_ALL HCASA,
HZ_PARTY_SITES HPS,
HZ_CUST_SITE_USES_ALL HCSUA
WHERE 1=1
AND HP.PARTY_ID = HCA.PARTY_ID
AND HCA.CUST_ACCOUNT_ID = HCASA.CUST_ACCOUNT_ID
AND HCASA.PARTY_SITE_ID = HPS.PARTY_SITE_ID
AND HCASA.CUST_ACCT_SITE_ID = HCSUA.CUST_ACCT_SITE_ID
AND HCSUA.SITE_USE_CODE = ''SHIP_TO''
AND HCSUA.STATUS = ''A''
AND HP.PARTY_NUMBER = :P_ORG_NAME
AND HPS.party_site_number = nvl(:p_party_site_number, HPS.party_site_number)
AND HCA.ACCOUNT_NUMBER = NVL(:P_ACCOUNT_NUMBER, HCA.ACCOUNT_NUMBER)');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getShiptoInfo',
      p_method             => 'GET',
      p_name               => 'P_ORG_NAME',
      p_bind_variable_name => 'P_ORG_NAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getShiptoInfo',
      p_method             => 'GET',
      p_name               => 'P_PARTY_SITE_NUMBER',
      p_bind_variable_name => 'P_PARTY_SITE_NUMBER',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getShiptoInfo',
      p_method             => 'GET',
      p_name               => 'P_ACCOUNT_NUMBER',
      p_bind_variable_name => 'P_ACCOUNT_NUMBER',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCategory1',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCategory1',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT LOOKUP_TYPE,LOOKUP_CODE,MEANING,DESCRIPTION,ENABLED_FLAG,DISPLAY_SEQUENCE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE,TAG FROM FND_COMMON_LOOKUPS WHERE  LOOKUP_TYPE = ''HBG_CATEGORY_1'' AND TAG = :P_REPORTING_GROUP ORDER BY DESCRIPTION');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getCategory1',
      p_method             => 'GET',
      p_name               => 'P_REPORTING_GROUP',
      p_bind_variable_name => 'P_REPORTING_GROUP',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getOwnerDetails',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getOwnerDetails',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT VALUE_CATEGORY VALUE_SET_NAME,FLEX_VALUE,DESCRIPTION,ENABLED_FLAG,START_DATE_ACTIVE,END_DATE_ACTIVE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE FROM FND_FLEX_VALUES_VL WHERE value_category = ''HBG_Owner'' AND FLEX_VALUE = :P_OWNER');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getOwnerDetails',
      p_method             => 'GET',
      p_name               => 'P_OWNER',
      p_bind_variable_name => 'P_OWNER',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getHoldNamesInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getHoldNamesInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT HOLD_CODE,HOLD_NAME,HOLD_DESCRIPTION,HOLD_CODE_ID,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE FROM DOO_HOLD_CODES_VL WHERE HOLD_CODE = NVL(:P_HOLD_CODE,HOLD_CODE) AND nvl(EFFECTIVE_END_DATE,sysdate) >= SYSDATE AND HOLD_CODE LIKE ''HBG%''');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getHoldNamesInfo',
      p_method             => 'GET',
      p_name               => 'P_HOLD_CODE',
      p_bind_variable_name => 'P_HOLD_CODE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getReportingGroup',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getReportingGroup',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT LOOKUP_TYPE,LOOKUP_CODE,MEANING,DESCRIPTION,ENABLED_FLAG,DISPLAY_SEQUENCE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE,TAG FROM FND_COMMON_LOOKUPS WHERE LOOKUP_TYPE = ''HBG_REPORTING_GROUP'' AND TAG = :P_OWNER_NAME ORDER BY DESCRIPTION');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getReportingGroup',
      p_method             => 'GET',
      p_name               => 'P_OWNER_NAME',
      p_bind_variable_name => 'P_OWNER_NAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCategory2Info',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCategory2Info',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT LOOKUP_TYPE,LOOKUP_CODE,MEANING,DESCRIPTION,ENABLED_FLAG,DISPLAY_SEQUENCE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE,TAG FROM FND_COMMON_LOOKUPS WHERE  LOOKUP_TYPE = ''HBG_CATEGORY_2'' AND TAG = :P_CATEGORY1 ORDER BY DESCRIPTION');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getCategory2Info',
      p_method             => 'GET',
      p_name               => 'P_CATEGORY1',
      p_bind_variable_name => 'P_CATEGORY1',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCountryInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCountryInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT GEOGRAPHY_CODE COUNTRY_CODE, GEOGRAPHY_CODE||''-''||GEOGRAPHY_NAME COUNTRY_NAME FROM HZ_GEOGRAPHIES WHERE GEOGRAPHY_TYPE = ''COUNTRY'' ORDER BY GEOGRAPHY_CODE');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getStateInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getStateInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT DISTINCT
    hg.geography_name       state,
    hg.geography_name
    || ''-''
    || hgi.identifier_value state_concat
FROM
    hz_geographies           hg,
    hz_geography_identifiers hgi
WHERE
        hg.geography_type IN (''STATE'',''PROVINCE'')
    AND hg.country_code = :p_country_code
    AND hg.geography_id = hgi.geography_id
    AND hgi.language_code = ''US''
    AND NVL(hg.geography_code,''#NULL'') <> hgi.identifier_value
ORDER BY
    geography_name');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getStateInfo',
      p_method             => 'GET',
      p_name               => 'P_COUNTRY_CODE',
      p_bind_variable_name => 'P_COUNTRY_CODE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getReportingGroupDetails',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getReportingGroupDetails',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT LOOKUP_TYPE,LOOKUP_CODE,MEANING,DESCRIPTION,ENABLED_FLAG,DISPLAY_SEQUENCE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE,TAG FROM FND_COMMON_LOOKUPS WHERE LOOKUP_TYPE = ''HBG_REPORTING_GROUP'' AND LOOKUP_CODE  = :P_REPORTING_GROUP');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getReportingGroupDetails',
      p_method             => 'GET',
      p_name               => 'P_REPORTING_GROUP',
      p_bind_variable_name => 'P_REPORTING_GROUP',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'createHoldRule',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'createHoldRule',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
hbg_so_auto_holds_pkg.hbg_so_custom_rule_create (
        p_owner => :p_owner,
        p_reporting_group => :p_reporting_group,
		p_category1 => :p_category1,
		p_category2 => :p_category2,
		p_item_number => :p_item_number,
		p_organization => :p_organization,
		p_account_number => :p_account_number,
		p_shipto => :p_shipto,
		p_country => :p_country,
		p_state => :p_state,
		p_holdname => :p_holdname,
		p_hold_comments => :p_hold_comments,
		p_start_date => to_date(:p_start_date,''YYYY-MM-DD''), --MM/DD/YYYY
		p_comments => :p_comments,
		p_autoreleaseflag => :p_autoreleaseflag,
        p_end_date => to_date(:p_end_date,''YYYY-MM-DD''), -- MM/DD/YYYY
        p_created_by => :p_created_by,
        p_department => :p_department,
        p_last_updated_by => :p_last_updated_by,
        p_zipcode => :p_zipcode,
        p_return_status => :x_return_status
    );
END;
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'createHoldRule',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCategory1Details',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCategory1Details',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT LOOKUP_TYPE,LOOKUP_CODE,MEANING,DESCRIPTION,ENABLED_FLAG,DISPLAY_SEQUENCE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE,TAG FROM FND_COMMON_LOOKUPS WHERE  LOOKUP_TYPE = ''HBG_CATEGORY_1'' AND LOOKUP_CODE  = :P_CATEGORY1');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getCategory1Details',
      p_method             => 'GET',
      p_name               => 'P_CATEGORY1',
      p_bind_variable_name => 'P_CATEGORY1',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCategory2Details',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getCategory2Details',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT LOOKUP_TYPE,LOOKUP_CODE,MEANING,DESCRIPTION,ENABLED_FLAG,DISPLAY_SEQUENCE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE,TAG FROM FND_COMMON_LOOKUPS WHERE  LOOKUP_TYPE = ''HBG_CATEGORY_2'' AND LOOKUP_CODE  = :P_CATEGORY2');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getCategory2Details',
      p_method             => 'GET',
      p_name               => 'P_CATEGORY2',
      p_bind_variable_name => 'P_CATEGORY2',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getPostalCodes',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_AUTOMATIC_HOLDS',
      p_pattern        => 'getPostalCodes',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT DISTINCT GEOGRAPHY_NAME POSTAL_CODE FROM HZ_GEOGRAPHIES 
WHERE 
GEOGRAPHY_TYPE = ''POSTAL_CODE'' 
AND COUNTRY_CODE = :P_COUNTRY_CODE 
AND GEOGRAPHY_NAME LIKE :P_GEOGRAPHY_NAME || ''%''
ORDER BY GEOGRAPHY_NAME');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getPostalCodes',
      p_method             => 'GET',
      p_name               => 'P_COUNTRY_CODE',
      p_bind_variable_name => 'P_COUNTRY_CODE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SO_AUTOMATIC_HOLDS',
      p_pattern            => 'getPostalCodes',
      p_method             => 'GET',
      p_name               => 'P_GEOGRAPHY_NAME',
      p_bind_variable_name => 'P_GEOGRAPHY_NAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_MODULE(
      p_module_name    => 'SO_PRICING',
      p_base_path      => '/accttype/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_PRICING',
      p_pattern        => 'getPartyLOV',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_PRICING',
      p_pattern        => 'getPartyLOV',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct party_name,party_id from XX_HBG_ACCT_TYPE_HDR_EXT_TBLSO_PRICING');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_PRICING',
      p_pattern        => 'sopricing',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SO_PRICING',
      p_pattern        => 'getAcctType',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SO_PRICING',
      p_pattern        => 'getAcctType',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from hbg_organization');

  ORDS.DEFINE_MODULE(
      p_module_name    => 'SalesCreditExtension',
      p_base_path      => '/salesCredit/',
      p_items_per_page => 100,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOrgNamebyOrgNum',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOrgNamebyOrgNum',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select party_number,party_name,party_id from hz_parties where party_number  = :party_number');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'validateDistributionChannel',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'validateDistributionChannel',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT count(*) dist_cnt
                FROM
                    hbg_distribution_maintenance_tbl
                WHERE
                        upper(owner) = upper(:p_owner)
                    AND dist_channel_id= :p_dist_channel_id
                    AND ( :p_reporting_group IS NULL  OR reporting_group = :p_reporting_group )');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOrgCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOrgCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'-- select  organization_code ,organization_id from inv_org_parameters
select party_id organization_id ,party_name organization_code from hz_parties where status=''A'' AND party_id in  (select distinct party_id from hz_cust_accounts)');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DistributionMaintenance',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DistributionMaintenance',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin 
  hbg_sales_credit_pkg.distribution_maintenance_update(
p_dist_mainten_stg_id         => :dist_mainten_stg_id        , 
p_owner                       => :owner                      ,
p_owner_description           => :owner_description          ,
p_reporting_group             => :reporting_group            ,
p_creation_date               => null             ,
p_created_by                  => :created_by                 ,
p_last_updated_by             => :last_updated_by            ,
p_last_update_date            => null           ,
p_start_date                  =>:start_date ,
p_end_date                    =>:end_date,
p_dist_channel_id             => :dist_channel_id            ,
p_reporting_group_description => :reporting_group_description,
p_return_status => :p_return_status
  );
  /* legacy output: 
dbms_output.put_line(''p_return_status = '' || p_return_status);
*/ 
  :p_return_status := p_return_status;
--rollback' || '; 
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'DistributionMaintenance',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DistributionMaintenance',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from HBG_DISTRIBUTION_MAINTENANCE_TBL where DIST_CHANNEL_ID = :P_DIST_CHANNEL_ID order by DIST_MAINTEN_STG_ID desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DistributionMaintenance',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin 
  hbg_sales_credit_pkg.distribution_maintenance_create( 
p_owner                       => :owner                      ,
p_owner_description           => :owner_description          ,
p_reporting_group             => :reporting_group            ,
p_creation_date               => null              ,
p_created_by                  => :created_by                 ,
p_last_updated_by             => :last_updated_by            ,
p_last_update_date            => null           ,
p_start_date                  =>:start_date,
p_end_date                    => :end_date,
p_dist_channel_id             => :dist_channel_id            ,
p_reporting_group_description => :reporting_group_description,
p_return_status => :p_return_status
);
  :p_return_status := p_return_status;

end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'DistributionMaintenance',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getAllPONums',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getAllPONums',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct CUSTOMER_PO_NUMBER from doo_headers_all');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getRefNumList',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getRefNumList',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct order_number,header_id from doo_headers_all  where status_code = ''OPEN'' order by last_update_date desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOrderStatus',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOrderStatus',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select ''OPEN'' value , ''Open'' Name from dual union all  select ''DOO_REFERENCE'' value , ''Reference'' Name from dual union all  select ''DOO_DRAFT'' value , ''Draft'' Name from dual');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getStoreNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getStoreNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    hps.party_site_number party_site_name ,
    hps.party_site_id
FROM
    hz_cust_acct_sites_all hcas,
    hz_cust_site_uses_all  hcsu,
    hz_party_sites         hps
WHERE
        hcas.cust_acct_site_id = hcsu.cust_acct_site_id
    AND hcas.party_site_id = hps.party_site_id(+)
    -- AND hcsu.site_use_code = ''BILL_TO''
    AND hps.party_site_name is not null
    AND hps.status=''A''
    AND hcsu.status=''A''
	AND (:p_cust_account_id is null or hcas.cust_account_id =:p_cust_account_id) and (:p_party_site_name is null or upper(hps.party_site_number) like upper(:p_party_site_name || ''%''))');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'CriteriaFetchAction',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'CriteriaFetchAction',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
    dla.inventory_organization_id,
    dla.inventory_item_id,
    hca.account_number,
    dha.status_code       header_order_status,
    dha.request_cancel_date,
    dha.freight_terms_code,
    dfla.actual_ship_date,
    dfla.request_arrival_date,
    dla.ordered_qty,
    egp.item_number,
    dha.customer_po_number,
    dhcv_header.hold_code header_reson_code,
    dhcv_line.hold_code   line_reson_code,
    dla.status_code       line_status_code
FROM
    doo_headers_all        dha,
    doo_lines_all          dla,
    doo_fulfill_lines_all  dfla,
    hz_cust_accounts       hca,
    hz_parties             hp,
    hz_cust_acct_sites_all hcas,
   -- hz_cust_site_uses_all  hcsu,
    hz_party_sites         hps,
    doo_hold_instances     dhi_header,
    doo_hold_codes_vl      dhcv_header,
    doo_hold_instances     dhi_line,
    doo_hold_codes_vl      dhcv_line,
    egp_system_items_b     egp
WHERE
        dha.header_id = dla.header_id
    AND dla.line_id = dfla.line_id
    AND dha.sol' || 'd_to_party_id = hp.party_id
    AND dla.inventory_item_id = egp.inventory_item_id
    AND dla.inventory_organization_id = egp.organization_id
    AND hp.party_id = hca.party_id
    --AND hcas.cust_acct_site_id = hcsu.cust_acct_site_id
    AND hcas.party_site_id = hps.party_site_id
    AND hcas.cust_account_id = hca.cust_account_id
    AND ( :p_organization_id IS NULL
          OR dla.inventory_organization_id = :p_organization_id )
    AND ( :p_invetory_item_id IS NULL
          OR dla.inventory_item_id = :p_invetory_item_id )
    AND ( :p_cust_account_id IS NULL
          OR hca.cust_account_id = :p_cust_account_id )
    AND ( :p_ex_cust_account_id IS NULL
          OR hca.cust_account_id <> :p_ex_cust_account_id )
    AND ( :p_line_status IS NULL
          OR dla.status_code = :p_line_status )
    AND ( :p_order_status IS NULL
          OR dha.status_code = :p_order_status )
    AND ( :p_from_ordered_qty IS NULL
          OR dla.ordered_qty >= :p_from_ordered_qty )
    AND ( :p_to_or' || 'dered_qty IS NULL
          OR dla.ordered_qty >= :p_to_ordered_qty )
    AND ( :p_po_number IS NULL
          OR dha.customer_po_number = :p_po_number )
    AND dha.source_order_id = dhi_header.transaction_entity_id1 (+)
    AND dhi_header.transaction_entity_name1 (+) = ''DOO_ORDER_HEADERS_V''
    AND dhi_header.hold_code_id = dhcv_header.hold_code_id (+)
    AND dla.source_line_id = dhi_line.transaction_entity_id1 (+)
    AND dhi_line.transaction_entity_name1 (+) = ''DOO_ORDER_LINES_V''
    AND dhi_line.hold_code_id = dhcv_line.hold_code_id (+)
    AND ( :p_hdr_reason_code IS NULL
          OR dhcv_header.hold_code = :p_hdr_reason_code )
    AND ( :p_line_reason_code IS NULL
          OR dhcv_line.hold_code = :p_line_reason_code )
    AND ( :p_received_from_date IS NULL
          OR dla.actual_ship_date >= :p_received_from_date )
    AND ( :p_received_to_date IS NULL
          OR dla.actual_ship_date <= :p_received_to_date )
    AND nvl(dha.status_code, ''A'') NOT IN ( ''DOO_DRAFT'', ''DOO_RE' || 'FERENCE'' )
    AND dfla.status_code NOT IN ( ''CLOSED'', ''CANCELED'', ''AWAIT_BILLING'', ''AWAIT_RECEIVING'', ''BACKORDERED'',
                                  ''SHIPPED'' )
    AND dha.object_version_number = (
        SELECT
            MAX(object_version_number)
        FROM
            doo_headers_all
        WHERE
                dha.source_order_id = source_order_id
            AND dha.source_order_system = source_order_system
            AND status_code <> ''DOO_REFERENCE''
    )');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getDivisionNamebyNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getDivisionNamebyNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select SF_DIV_ID,DIVISION_NAME from XXHBG_SALES_FORCE_DIV_TBL where DIVISION_NUMBER = :DIVISION_NUMBER and SALES_FORCE_ID = :SALES_FORCE_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getAccountNamebyCustAccId',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getAccountNamebyCustAccId',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'Select cust_account_id,account_number,account_name from hz_cust_Accounts where account_number = :p_account_number');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getTerritoryIdbyterritoryNumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getTerritoryIdbyterritoryNumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select SF_TERRITORY_ID, TERRITORY_NAME 
 from XXHBG_SALES_FORCE_TERRITORY_TBL 
 where TERRITORY_NUMBER = :TERRITORY_NUMBER  and SALES_FORCE_ID = :SALES_FORCE_ID and SF_DIV_ID = :SF_DIV_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getSalesRepName',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getSalesRepName',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select SALES_REP_NAME from XXHBG_SALES_FORCE_SALES_REP_TBL
 where SALES_REP_NUMBER = :SALES_REP_NUMBER 
 and SF_TERRITORY_ID = :SF_TERRITORY_ID
 and SALES_FORCE_ID = :SALES_FORCE_ID
and SF_DIV_ID = :SF_DIV_ID ');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'TeritoryTableCol',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'TeritoryTableCol',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
TERRITORY_NUMBER  ,                 
TERRITORY_NAME,
SF_TERRITORY_ID
from
XXHBG_SALES_FORCE_TERRITORY_TBL where SF_DIV_ID = :SF_DIV_ID   order by SF_TERRITORY_ID desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOrganizationNameBynumber',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOrganizationNameBynumber',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select party_id,party_name ,PARTY_NUMBER from HZ_PARTIES where party_number = :part_number');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SalesRepTableCol',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SalesRepTableCol',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
SALES_REP_NUMBER,
SALES_REP_NAME,
SF_SALES_REP_ID
from
XXHBG_SALES_FORCE_SALES_REP_TBL WHERE SF_TERRITORY_ID = :SF_TERRITORY_ID
order by SF_SALES_REP_ID desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'UnassignSalesForce',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'UnassignSalesForce',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT * FROM ( select SF_UNASSIGNED_ID
,TYPE
,ORGANIZATION_NUMBER
,ORGANIZATION_NAME
,ACCOUNT_TYPE
,DESCRIPTION
,ACCOUNT_PREFIX
,OWNER
,OWNER_DESCRIPTION
,REPORTING_GROUP
,REPORTING_GROUP_DESCRIPTION
,BILL_TO_COUNTRY
,BILL_TO_STATE
,SHIP_TO_COUNTRY
,SHIP_TO_STATE
,FINAL_DESTINATION_COUNTRY
,SALES_FORCE_NUMBER
,SALES_FORCE_NAME
,DIVISION
,DIVISION_NAME
,TERRITORY
,TERRITORY_NAME
,SALES_REP
,SALES_REP_NAME
,NOTES
,ENTERED_BY
,ENTERED_DATE
,UPDATED_BY
,UPDATED_DATE
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
--,STATUS
,CASE WHEN (TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'') AND 
TO_DATE(TO_CHAR(END_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') >= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) or
(END_DATE is null and TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) then
''Active'' 
else 
''Inact' || 'ive'' end STATUS
,SF_ASSIGN_ID
,SALES_FORCE_ID
,ACCOUNT_NUMBER
,ACCOUNT_NAME from XXHBG_UNASSIGNED_SALES_FORCE_TBL )Q

 where         1 = 1

    AND (
 ( :SALES_FORCE_NUMBER IS NULL
            OR Q.SALES_FORCE_NUMBER = :SALES_FORCE_NUMBER )
                
          AND ( :P_STATUS IS NULL
                OR Q.STATUS = :P_STATUS )
  )
 
 order by SF_UNASSIGNED_ID desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'UnassignSalesForce',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin 
 hbg_sales_credit_pkg.unassigned_sales_force_create(    
p_type                        =>:type                        ,
p_organization_number       =>:organization_number       ,
p_organization_name       =>:organization_name       ,
p_account_number            => :account_number           ,
p_account_name              => :account_name             ,
p_account_type                =>:account_type                ,
p_description                 =>:description                 ,
p_account_prefix              =>:account_prefix              ,
p_owner                       =>:owner                       ,
p_owner_description           =>:owner_description           ,
p_reporting_group             =>:reporting_group             ,
p_reporting_group_description =>:reporting_group_description ,
p_bill_to_country             =>:bill_to_country             ,
p_bill_to_state               =>:bill_to_state               ,
p_ship_to_count' || 'ry             =>:ship_to_country             ,
p_ship_to_state               =>:ship_to_state               ,
p_final_destination_country   =>:final_destination_country   ,
p_sales_force_number          =>:sales_force_number          ,
p_sales_force_name            =>:sales_force_name            ,
p_division                    =>:division                    ,
p_division_name               =>:division_name               ,
p_territory                   =>:territory                   ,
p_territory_name              =>:territory_name              ,
p_sales_rep                   =>:sales_rep                   ,
p_sales_rep_name              =>:sales_rep_name              ,
p_notes                       =>:notes                       ,
p_entered_by                  =>:entered_by                  ,
p_updated_by                  =>:updated_by                  ,
p_updated_date                => sysdate              ,
p_start_date                  =>:start_date ,
p_end_date     ' || '               =>:end_date ,
p_status                      =>:status                      ,
p_sf_assign_id                =>:sf_assign_id                ,    
p_sales_force_id              =>:sales_force_id              ,
p_return_status             =>:p_return_status    
 );
 
:p_return_status := p_return_status;
 end;         
    
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'UnassignSalesForce',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'UnassignSalesForce',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin 
hbg_sales_credit_pkg.unassigned_sales_force_update(  
p_sf_unassigned_id            =>:sf_unassigned_id,
p_type                        =>:type                        ,
p_organization_number       =>:organization_number       ,
p_organization_name       =>:organization_name       ,
p_account_number              => :account_number           ,
p_account_name                => :account_name             ,
p_account_type                =>:account_type                ,
p_description                 =>:description                 ,
p_account_prefix              =>:account_prefix              ,
p_owner                       =>:owner                       ,
p_owner_description           =>:owner_description           ,
p_reporting_group             =>:reporting_group             ,
p_reporting_group_description =>:reporting_group_description ,
p_bill_to_country             =>:bill_to_country             ,
p_bill_to_state           ' || '    =>:bill_to_state               ,
p_ship_to_country             =>:ship_to_country             ,
p_ship_to_state               =>:ship_to_state               ,
p_final_destination_country   =>:final_destination_country   ,
p_sales_force_number          =>:sales_force_number          ,
p_sales_force_name            =>:sales_force_name            ,
p_division                    =>:division                    ,
p_division_name               =>:division_name               ,
p_territory                   =>:territory                   ,
p_territory_name              =>:territory_name              ,
p_sales_rep                   =>:sales_rep                   ,
p_sales_rep_name              =>:sales_rep_name              ,
p_notes                       =>:notes                       ,
p_entered_by                  =>:entered_by                  ,
p_updated_by                  =>:updated_by                  ,
p_updated_date                =>:updated_date,
p_start_date      ' || '            =>:start_date,
p_end_date                    =>:end_date,
p_status                      =>:status                      ,
p_sf_assign_id                =>:sf_assign_id                ,    
p_sales_force_id              =>:sales_force_id              ,
p_return_status             =>:p_return_status    
 );
 
:p_return_status := p_return_status;
 end;         
    
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'UnassignSalesForce',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'UnassignSalesForce',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from XXHBG_UNASSIGNED_SALES_FORCE_TBL where SF_UNASSIGNED_ID = :SF_UNASSIGNED_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getClientinfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getClientinfo',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin 
HBG_CUSTOMER_MASTER_PKG.hbg_client_info_create(
         cust_owner                 => :cust_owner               
        ,owner_description            => :owner_description        
        ,account_type                 => :account_type             
        ,account_type_description     => :account_type_description 
        ,created_by                   => :created_by               
        ,last_updated_by              => :last_updated_by          
        ,default_account_type         => :default_account_type     
        ,default_account_type_owners  => :default_account_type_owners
        ,operation_account_type       => :operation_account_type     
        ,reporting_group              => :reporting_group            
        ,reporting_group_description  => :reporting_group_description
        ,category1                    => :category1                  
        ,category1_description        => :category1_description ' || '     
        ,category2                    => :category2                  
        ,category2_description        => :category2_description      
        ,cust_format                  => :cust_format                
        ,format_description           => :format_description         
        ,sub_format                   => :sub_format                 
        ,sub_format_description       => :sub_format_description 
        ,customer_account             => :customer_account
        ,cust_account_id              => :cust_account_id
        ,p_return_status              => :p_return_status     
);
  /* legacy output: 
dbms_output.put_line(''p_return_status = '' || p_return_status);
*/ 
  :p_return_status := p_return_status;
--rollback; 
end;
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'getClientinfo',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getClientinfo',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from HBG_CLIENT_INFO_TBL where client_info_id = :client_info_id');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getClientinfo',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin
hbg_customer_master_pkg.hbg_client_info_upd(
          p_client_info_id               => :client_info_id             
        ,p_cust_owner                   => :cust_owner                 
        ,p_owner_description            => :owner_description          
        ,p_account_type                 => :account_type               
        ,p_account_type_description     => :account_type_description               
        ,p_last_updated_by              => :last_updated_by          
        ,p_default_account_type         => :default_account_type       
        ,p_default_account_type_owners  => :default_account_type_owners
        ,p_operation_account_type       => :operation_account_type     
        ,p_reporting_group              => :reporting_group            
        ,p_reporting_group_description  => :reporting_group_description
        ,p_category1                    => :category1                  
        ,p_catego' || 'ry1_description        => :category1_description      
        ,p_category2                    => :category2                  
        ,p_category2_description        => :category2_description      
        ,p_cust_format                  => :cust_format                
        ,p_format_description           => :format_description         
        ,p_sub_format                   => :sub_format                 
        ,p_sub_format_description       => :sub_format_description     
        ,p_customer_account             => :customer_account           
        ,p_cust_account_id              => :cust_account_id            
        ,p_return_status                => :p_return_status 
);
  /* legacy output:
dbms_output.put_line(''p_return_status = '' || p_return_status);
*/
  :p_return_status := p_return_status;
--rollback;
end;







');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'getClientinfo',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getClientinfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from HBG_CLIENT_INFO_TBL where CUST_ACCOUNT_ID = :p_cust_account_id');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'AssignAccountTypeSalesForce',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'AssignAccountTypeSalesForce',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin
 hbg_sales_credit_pkg.assign_account_type_to_sales_force_create(
p_sales_force        =>:sales_force
,p_sf_owner           =>:sf_owner
,p_owner_name         =>:owner_name
,p_account_type       =>:account_type
,p_account_type_name  =>:account_type_name
,p_notes              =>:notes
,p_entered_by         =>:entered_by
,p_updated_by         =>:updated_by
,p_start_date         =>:start_date
,p_end_date           =>:end_date
,p_status             =>:status
,p_sales_force_name   =>:sales_force_name
,p_return_status    =>:p_return_status
 );
 :p_return_status := p_return_status;
 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'AssignAccountTypeSalesForce',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'AssignAccountTypeSalesForce',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT * FROM ( select SALES_FORCE
,SALES_FORCE_NAME
,SF_OWNER
,OWNER_NAME
,ACCOUNT_TYPE
,ACCOUNT_TYPE_NAME
,NOTES
,ENTERED_BY
,ENTERED_DATE
,UPDATED_BY
,UPDATED_DATE
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
--,STATUS
,CASE WHEN (TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'') AND 
TO_DATE(TO_CHAR(END_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') >= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) or
(END_DATE is null and TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) then
''Active'' 
else 
''Inactive'' end STATUS
,SF_ACCOUNT_ID from xxhbg_assign_account_type_to_sales_force_tbl ) Q
 where         1 = 1

    AND (
 ( :SF_ACCOUNT_ID IS NULL
            OR Q.SF_ACCOUNT_ID = :SF_ACCOUNT_ID )
			
       AND ( :P_STATUS IS NULL
                OR Q.STATUS = :P_STATUS )
  ) order by SF_ACCOUNT_ID asc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'AssignAccountTypeSalesForce',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin
 hbg_sales_credit_pkg.assign_account_type_to_sales_force_update(
p_sf_account_id	      => :sf_account_id
,p_sales_force         =>:sales_force
,p_sf_owner           =>:sf_owner
,p_owner_name         =>:owner_name
,p_account_type       =>:account_type
,p_account_type_name  =>:account_type_name
,p_notes              =>:notes
,p_entered_by         =>:entered_by
,p_updated_by         =>:updated_by
,p_start_date         =>:start_date
,p_end_date           =>:end_date
,p_status             =>:status
,p_sales_force_name   =>:sales_force_name
,p_return_status    =>:p_return_status
 );
 :p_return_status := p_return_status;
 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'AssignAccountTypeSalesForce',
      p_method             => 'PUT',
      p_name               => 'P_RETURN_STATUS',
      p_bind_variable_name => 'P_RETURN_STATUS',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'AssignAccountTypeSalesForce',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from XXHBG_ASSIGN_ACCOUNT_TYPE_TO_SALES_FORCE_TBL where SF_ACCOUNT_ID = :SF_ACCOUNT_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOwnerDesc',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOwnerDesc',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select PARTY_NAME from HZ_PARTIES where status = ''A'' and party_number = :party_number');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'updateTerritorydata',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'updateTerritorydata',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_credit_territory_update (
	    p_sf_territory_id       =>:sf_territory_id
	    ,p_territory_number		=>:territory_number
		,p_territory_name		=>:territory_name
		,p_external_checkbox	=>:external_checkbox
		,p_email				=>:email
		,p_edelweiss			=> :edelweiss			
		,p_wholesale_commision	=>:wholesale_commision
		,p_retail_commision		=>:retail_commision
		,p_notes				=>:notes				
		,p_entered_by			=>:entered_by      
		,p_updated_by			=>:updated_by
	    ,p_start_date			=>:start_date
        ,p_end_date			    =>:end_date
		,p_status				=>:status  
		,p_sf_div_id 			=>:sf_div_id
        ,p_sales_force_id       =>:sales_force_id
		,p_return_status		=>:p_return_status
		);

         p_return_status := :p_return_status;
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'updateTerritorydata',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getAssignAccountType',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getAssignAccountType',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select SALES_FORCE
,SALES_FORCE_NAME
,SF_OWNER
,OWNER_NAME
,ACCOUNT_TYPE
,ACCOUNT_TYPE_NAME
,NOTES
,ENTERED_BY
,ENTERED_DATE
,UPDATED_BY
,UPDATED_DATE
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
,STATUS
,SF_ACCOUNT_ID from xxhbg_assign_account_type_to_sales_force_tbl
 where         1 = 1

    AND (
 ( :sales_force_number IS NULL
            OR SALES_FORCE = :sales_force_number )
                
          AND ( upper(:P_STATUS) IS NULL
                OR upper(STATUS) = upper(:P_STATUS) )
  ) order by SF_ACCOUNT_ID asc
  
  
');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DefaultDistributionChannel',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DefaultDistributionChannel',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin 
 hbg_sales_credit_pkg.default_distribution_channel_create(
p_organization_number       =>:organization_number       ,
p_organization_name       =>:organization_name       ,
p_account_number            => :account_number           ,
p_account_name              => :account_name             ,
p_account_type              =>:account_type              ,
p_description               =>:description               ,
p_bill_to_country           =>:bill_to_country           ,
p_bill_to_state             =>:bill_to_state             ,
p_ship_to_country           =>:ship_to_country           ,
p_ship_to_state             =>:ship_to_state             ,
p_final_destination_country =>:final_destination_country ,
p_sales_force               =>:sales_force               ,
p_sales_force_name          =>:sales_force_name          ,
p_division                  =>:division                  ,
p_division_name             =>:division_name         ' || '    ,
p_territory                 =>:territory                 ,
p_territory_name            =>:territory_name            ,
p_sales_rep                 =>:sales_rep                 ,
p_sales_rep_name            =>:sales_rep_name            ,
p_distribution_channel      =>:distribution_channel      ,
p_notes                     =>:notes                     ,
p_entered_by                =>:entered_by                ,
p_updated_by                =>:updated_by                ,
p_start_date                =>:start_date,
p_end_date                  =>:end_date,
p_status                    =>:status    ,
 p_return_status        =>:p_return_status             
 );
 :p_return_status := p_return_status;
 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'DefaultDistributionChannel',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DefaultDistributionChannel',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT * FROM ( select ORGANIZATION_NUMBER
,ORGANIZATION_NAME
,ACCOUNT_TYPE
,DESCRIPTION
,BILL_TO_COUNTRY
,BILL_TO_STATE
,SHIP_TO_COUNTRY
,SHIP_TO_STATE
,FINAL_DESTINATION_COUNTRY
,SALES_FORCE
,SALES_FORCE_NAME
,DIVISION
,DIVISION_NAME
,TERRITORY
,TERRITORY_NAME
,SALES_REP
,SALES_REP_NAME
,DISTRIBUTION_CHANNEL
,NOTES
,ENTERED_BY
,ENTERED_DATE
,UPDATED_BY
,UPDATED_DATE
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
--,STATUS
,CASE WHEN (TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'') AND 
TO_DATE(TO_CHAR(END_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') >= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) or
(END_DATE is null and TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) then
''Active'' 
else 
''Inactive'' end STATUS
,DF_DISTRIBUTION_ID
,ACCOUNT_NUMBER
,ACCOUNT_NAME from xxhbg_default_distribution_ch' || 'annel_tbl )Q
WHERE
        1 = 1

    AND (
 ( :SALES_FORCE IS NULL
            OR Q.SALES_FORCE = :SALES_FORCE )

          AND ( :DISTRIBUTION_CHANNEL IS NULL
                OR Q.DISTRIBUTION_CHANNEL = :DISTRIBUTION_CHANNEL ) 
          AND ( :P_STATUS IS NULL
                OR Q.STATUS = :P_STATUS )
  )
  order by DF_DISTRIBUTION_ID desc
      ');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DefaultDistributionChannel',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin 
     hbg_sales_credit_pkg.default_distribution_channel_update(  
         p_df_distribution_id             => :df_distribution_id
         ,p_organization_number       =>:organization_number       
         ,p_organization_name       =>:organization_name       
         ,p_account_number                => :account_number
         ,p_account_name                  => :account_name
         ,p_account_type                  => :account_type
         ,p_description                   => :description
         ,p_bill_to_country               => :bill_to_country
         ,p_bill_to_state                 => :bill_to_state
         ,p_ship_to_country               => :ship_to_country
         ,p_ship_to_state                 => :ship_to_state
         ,p_final_destination_country     => :final_destination_country
         ,p_sales_force                   => :sales_force
         ,p_sales_force_name              => :sales_force_name' || '
         ,p_division                      => :division
         ,p_division_name                 => :division_name
         ,p_territory                     => :territory
         ,p_territory_name                => :territory_name
         ,p_sales_rep                     => :sales_rep
         ,p_sales_rep_name                => :sales_rep_name
         ,p_distribution_channel          => :distribution_channel
         ,p_notes                         => :notes
         ,p_entered_by                    => :entered_by        
         ,p_updated_by                    => :updated_by       
         ,p_start_date                    => :start_date
         ,p_end_date                      => :end_date
         ,p_status                        => :status  
         ,p_return_status                 => :p_return_status
 );
  :p_return_status :=p_return_status;
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'DefaultDistributionChannel',
      p_method             => 'PUT',
      p_name               => 'P_RETURN_STATUS',
      p_bind_variable_name => 'P_RETURN_STATUS',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DefaultDistributionChannel',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from XXHBG_DEFAULT_DISTRIBUTION_CHANNEL_TBL where DF_DISTRIBUTION_ID = :DF_DISTRIBUTION_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getAccountTypeinfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getAccountTypeinfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT VALUE_CATEGORY VALUE_SET_NAME,FLEX_VALUE,DESCRIPTION,ENABLED_FLAG,START_DATE_ACTIVE,END_DATE_ACTIVE,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE FROM FND_FLEX_VALUES_VL WHERE  VALUE_CATEGORY = :P_VALUE_SET_NAME');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'salesforceMaintainance',
      p_priority       => 0,
      p_etag_type      => 'NONE',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'salesforceMaintainance',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_credit_sf_update (
        p_sales_force_number  =>:sales_force_number
        ,p_sales_force_name    =>:sales_force_name
        ,p_company             =>:company
        ,p_edelweiss           =>:edelweiss
        ,p_external_checkbox   =>:external_checkbox
        ,p_notes               =>:notes
        ,p_entered_by          =>:entered_by
        ,p_updated_by          =>:updated_by
        ,p_start_date		  =>:start_date
        ,p_end_date			  =>:end_date
        ,p_status              =>:status   
        ,p_sales_force_id      =>:sales_force_id
		,p_return_status		=>:p_return_status
		);
         :p_return_status := p_return_status;
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'salesforceMaintainance',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'salesforceMaintainance',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT * FROM (SELECT SALES_FORCE_NUMBER
,SALES_FORCE_NAME
,COMPANY
,EDELWEISS
,EXTERNAL_CHECKBOX
,NOTES
,ENTERED_BY
,ENTERED_DATE
,UPDATED_BY
,UPDATED_DATE
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
--,STATUS
,CASE WHEN (TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'') AND 
TO_DATE(TO_CHAR(END_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') >= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) or
(END_DATE is null and TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) then
''Active'' 
else 
''Inactive'' end STATUS
,SALES_FORCE_ID
FROM
   XXHBG_SALES_FORCE_MAINTENANCE_TBL) Q
WHERE
        1 = 1

    AND (
 ( :P_SALES_FORCE_NUMBER IS NULL
            OR Q.SALES_FORCE_NUMBER = :P_SALES_FORCE_NUMBER )

          AND ( :P_SALES_FORCE_NAME IS NULL
                OR Q.SALES_FORCE_NAME = :P_SALES_FORCE_NAME )

          AND ( :P_STATUS IS NULL
   ' || '             OR Q.STATUS = :P_STATUS )
  )
      order by SALES_FORCE_ID desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'salesforceMaintainance',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
p_return_status VARCHAR2(200);
BEGIN
hbg_sales_credit_pkg.hbg_sales_credit_sf_create (
       p_sales_force_number  =>:sales_force_number
        ,p_sales_force_name    =>:sales_force_name
        ,p_company             =>:company
        ,p_edelweiss           =>:edelweiss
        ,p_external_checkbox   =>:external_checkbox
        ,p_notes               =>:notes
        ,p_entered_by          =>:entered_by
        ,p_updated_by          =>:updated_by
       ,p_start_date		  =>:start_date
        ,p_end_date			  =>:end_date
        ,p_status              =>:status   
        ,p_sales_force_id      =>:sales_force_id
        ,p_return_status		=>:p_return_status
		);

        :p_return_status := p_return_status;       
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'salesforceMaintainance',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'salesforceMaintainance',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from xxhbg_sales_force_maintenance_tbl where sales_force_id = :sales_force_id');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'salesforceMaintainance',
      p_method             => 'DELETE',
      p_name               => 'P_SALES_FORCE_NUMBER',
      p_bind_variable_name => 'P_SALES_FORCE_NUMBER',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'TerritoryData',
      p_priority       => 0,
      p_etag_type      => 'NONE',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'TerritoryData',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select SF_TERRITORY_ID,TERRITORY_NUMBER,TERRITORY_NAME,EXTERNAL_CHECKBOX,EMAIL,EDELWEISS,WHOLESALE_COMMISION,RETAIL_COMMISION,
NOTES,ENTERED_BY,ENTERED_DATE,UPDATED_BY,UPDATED_DATE,to_char(START_DATE,''YYYY-MM-DD'') START_DATE,to_char(END_DATE,''YYYY-MM-DD'') END_DATE,STATUS,SF_DIV_ID,SALES_FORCE_ID from XXHBG_SALES_FORCE_TERRITORY_TBL where SF_DIV_ID = :SF_DIV_ID order by SF_TERRITORY_ID desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'TerritoryData',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_credit_territory_create (
	   p_territory_number		=>:territory_number
		,p_territory_name		=>:territory_name
		,p_external_checkbox	=>:external_checkbox
		,p_email				=>:email
		,p_edelweiss			=>:edelweiss			
		,p_wholesale_commision	=>:wholesale_commision
		,p_retail_commision		=>:retail_commision
		,p_notes				=>:notes				
		,p_entered_by			=>:entered_by      
		,p_updated_by			=>:updated_by     
		,p_start_date			=>:start_date
        ,p_end_date			    =>:end_date
		,p_status				=>:status
		,p_sf_div_id 			=>:sf_div_id
          ,p_sales_force_id       =>:sales_force_id
		,p_return_status		=>:p_return_status
		);
        p_return_status := :p_return_status;
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'TerritoryData',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'TerritoryData',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'Delete from XXHBG_SALES_FORCE_TERRITORY_TBL  where SF_TERRITORY_ID = :SF_TERRITORY_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getsalesNamebySalesForce',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getsalesNamebySalesForce',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct SALES_FORCE_NAME, sales_force_id from XXHBG_SALES_FORCE_MAINTENANCE_TBL where SALES_FORCE_NUMBER = :SALES_FORCE_NUMBER');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getSalesForceData',
      p_priority       => 0,
      p_etag_type      => 'NONE',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getSalesForceData',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
INSERT INTO XXHBG_SALES_FORCE_TBL
(
SALES_FORCE_ID
,OM_DESTINATION_ACCOUNT
,OM_SALES_FORCE_CODE
,OM_DIVISION
,OM_TERRITORY
,OM_SALES_REP
,OM_DISTRIBUTION_CHANNEL
,AR_SALES_FORCE_CODE
,AR_DIVISION
,AR_TERRITORY
,AR_SALES_REP
,AR_DISTRIBUTION_CHANNEL
,CREATED_BY
,CREATED_DATE
,LAST_UPDATED_BY
,LAST_UPDATED_DATE)
VALUES
(
:SALES_FORCE_ID
,:OM_DESTINATION_ACCOUNT
,:OM_SALES_FORCE_CODE
,:OM_DIVISION
,:OM_TERRITORY
,:OM_SALES_REP
,:OM_DISTRIBUTION_CHANNEL
,:AR_SALES_FORCE_CODE
,:AR_DIVISION
,:AR_TERRITORY
,:AR_SALES_REP
,:AR_DISTRIBUTION_CHANNEL
,:CREATED_BY
,TO_DATE(current_date)
,:LAST_UPDATED_BY
,TO_DATE(current_date)
);
COMMIT;
END;');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getSalesForceData',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'UPDATE XXHBG_SALES_FORCE_TBL
SET 
SALES_FORCE_ID           =>:SALES_FORCE_ID         ,
OM_DESTINATION_ACCOUNT   =>:OM_DESTINATION_ACCOUNT ,
OM_SALES_FORCE_CODE      =>:OM_SALES_FORCE_CODE    ,
OM_DIVISION              =>:OM_DIVISION            ,
OM_TERRITORY             =>:OM_TERRITORY           ,
OM_SALES_REP             =>:OM_SALES_REP           ,
OM_DISTRIBUTION_CHANNEL  =>:OM_DISTRIBUTION_CHANNEL,
AR_SALES_FORCE_CODE      =>:AR_SALES_FORCE_CODE    ,
AR_DIVISION              =>:AR_DIVISION            ,
AR_TERRITORY             =>:AR_TERRITORY           ,
AR_SALES_REP             =>:AR_SALES_REP           ,
AR_DISTRIBUTION_CHANNEL  =>:AR_DISTRIBUTION_CHANNEL,
CREATED_BY               =>:CREATED_BY             ,
CREATED_DATE             => SYSDATE       ,
LAST_UPDATED_BY          =>:LAST_UPDATED_BY        ,
LAST_UPDATED_DATE        => SYSDATE     ,
p_return_status          =>:p_return_status        ;

where SALES_FORCE_ID           =>:SALES_FORCE_ID');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'getSalesForceData',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getSalesForceData',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from XXHBG_SALES_FORCE_TBL WHERE SALES_FORCE_ID = :P_SALES_FORCE_ID order by SALES_FORCE_ID desc');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'getSalesForceData',
      p_method             => 'GET',
      p_name               => 'P_SALES_FORCE_ID',
      p_bind_variable_name => 'P_SALES_FORCE_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'divisionData',
      p_priority       => 0,
      p_etag_type      => 'NONE',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'divisionData',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
x_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_credit_div_update (  
    p_sf_div_id         => :sf_div_id   
		,p_division_number   =>:division_number   
		,p_division_name     =>:division_name     
		,p_external_checkbox =>:external_checkbox 
		,p_notes             =>:notes  
        ,p_updated_by        =>:updated_by      
	    ,p_start_date	     =>:start_date
        ,p_end_date			 =>:end_date 
		,p_status            =>:status
        ,p_sales_force_id    =>:sales_force_id           
		,p_return_status     =>:x_return_status

		);
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'divisionData',
      p_method             => 'PUT',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'divisionData',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT SF_DIV_ID
,DIVISION_NUMBER
,DIVISION_NAME
,EXTERNAL_CHECKBOX
,NOTES
,ENTERED_BY
,ENTERED_DATE
,UPDATED_BY
,UPDATED_DATE
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
,STATUS
,SALES_FORCE_ID FROM XXHBG_SALES_FORCE_DIV_TBL where SALES_FORCE_ID = :SALES_FORCE_ID order by SF_DIV_ID desc');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'divisionData',
      p_method             => 'GET',
      p_name               => 'SALES_FORCE_ID',
      p_bind_variable_name => 'SALES_FORCE_ID',
      p_source_type        => 'URI',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'divisionData',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
x_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_credit_div_create (     
		p_division_number   =>:division_number   
		,p_division_name     =>:division_name     
		,p_external_checkbox =>:external_checkbox 
		,p_notes             =>:notes             
		,p_entered_by        =>:entered_by
		,p_updated_by        =>:updated_by        
        ,p_start_date	     =>:start_date
        ,p_end_date          =>:end_date
		,p_status            =>:status
        ,p_sales_force_id    =>:sales_force_id            
		,p_return_status	 =>:x_return_status
		);
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'divisionData',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'divisionData',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DELETE from XXHBG_SALES_FORCE_DIV_TBL where sf_div_id = :sf_div_id');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'salesRep',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'salesRep',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from  XXHBG_SALES_FORCE_SALES_REP_TBL where SF_TERRITORY_ID = :SF_TERRITORY_ID ');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'salesRep',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
SF_SALES_REP_ID
,SALES_REP_NUMBER
,SALES_REP_NAME
,EXTERNAL_SALES_REP_IDENTIFIER
,ADDRESS
,CITY
,STATE
,POSTAL_CODE
,COUNTRY
,PHONE_NUMBER
,EMAIL
,COMPANY
,COMPANY_DESCRIPTION
,EXTERNAL_CHECKBOX
,WHOLESALE_COMMISION
,RETAIL_COMMISION
,EDELWEISS
,NOTES
,ENTERED_BY
,ENTERED_DATE
,UPDATED_BY
,UPDATED_DATE
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
,STATUS
,SF_TERRITORY_ID
,SALES_FORCE_ID
,SF_DIV_ID from XXHBG_SALES_FORCE_SALES_REP_TBL where SF_TERRITORY_ID = :SF_TERRITORY_ID order by SF_SALES_REP_ID desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'salesRep',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  p_return_status varchar2(200);
begin  

  hbg_sales_credit_pkg.hbg_sales_rep_update(
	 p_sf_sales_rep_id => :sf_sales_rep_id
    ,p_sales_rep_number => :sales_rep_number
    ,p_sales_rep_name => :sales_rep_name
    ,p_external_sales_rep_identifier => :external_sales_rep_identifier
    ,p_address => :address
    ,p_city => :city
    ,p_state => :state
    ,p_postal_code => :postal_code
    ,p_country => :country
    ,p_phone_number => :phone_number
    ,p_email => :email
    ,p_company => :company
    ,p_company_description => :company_description
    ,p_external_checkbox => :external_checkbox
    ,p_wholesale_commision => :wholesale_commision
    ,p_retail_commision => :retail_commision
    ,p_edelweiss => :edelweiss
    ,p_notes => :notes
    ,p_entered_by => :entered_by	
    ,p_updated_by => :updated_by
    ,p_start_date			=>:start_date                
    ,p_end_date			=>:end_date
    ,p_status => :status
    ,p_sf_territory_id => :sf_territory_id
    ,p_sales_force_id => ' || ':sales_force_id
    ,p_division_id => :sf_div_id
    ,p_return_status => :p_return_status
  );
  /* legacy output: 
dbms_output.put_line(''p_return_status = '' || p_return_status);
*/ 
  :p_return_status := p_return_status;
--rollback; 
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'salesRep',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'salesRep',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
  P_RETURN_STATUS VARCHAR2(200);
BEGIN  

  HBG_SALES_CREDIT_PKG.HBG_SALES_REP_CREATE(
    p_sales_rep_number => :sales_rep_number
    ,p_sales_rep_name => :sales_rep_name
    ,p_external_sales_rep_identifier => :external_sales_rep_identifier
    ,p_address => :address
    ,p_city => :city
    ,p_state => :state
    ,p_postal_code => :postal_code
    ,p_country => :country
    ,p_phone_number => :phone_number
    ,p_email => :email
    ,p_company => :company
    ,p_company_description => :company_description
    ,p_external_checkbox => :external_checkbox
    ,p_wholesale_commision => :wholesale_commision
    ,p_retail_commision => :retail_commision
    ,p_edelweiss => :edelweiss
    ,p_notes => :notes
    ,p_entered_by => :entered_by	
    ,p_updated_by => :updated_by
    ,p_start_date			=>:start_date                
    ,p_end_date			=>:end_date
    ,p_status => :status
    ,p_sf_territory_id => :sf_territory_id
    ,p_sales_force_id => :sales_force_id
    ,p_division_id => :sf' || '_div_id
    ,P_RETURN_STATUS => :P_RETURN_STATUS
  );

  :P_RETURN_STATUS := P_RETURN_STATUS;

END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'salesRep',
      p_method             => 'POST',
      p_name               => 'P_RETURN_STATUS',
      p_bind_variable_name => 'P_RETURN_STATUS',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SFAssign',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SFAssign',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from XXHBG_SALES_FORCE_ASSIGN_TBL where SF_ASSIGN_ID = :SF_ASSIGN_ID');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SFAssign',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_force_assign_create( 
p_owner                          => :owner                   ,
p_owner_description              => :owner_description           ,
p_reporting_group                => :reporting_group             ,
p_reporting_group_description    => :reporting_group_description ,
p_category_1                     => :category_1                  ,
p_category_1_description         => :category_1_description      ,
p_category_2                     => :category_2                  ,
p_category_2_description         => :category_2_description      ,
p_format                         => :format                      ,
p_format_description             => :format_description          ,
p_sub_format                     => :sub_format                  ,
p_sub_format_description         => :sub_format_description      ,
p_bisac                          => :bisac                       ,
p_bisac_description              =>' || ' :bisac_description           ,
p_customer_org_number            => :customer_org_number         ,
p_organization_name              => :organization_name           ,
p_customer_account_number        => :customer_account_number     ,
p_account_name                   => :account_name                ,
p_account_type                   => :account_type                ,
p_bill_to_                       => :bill_to_                    ,
p_state_province                 => :state_province              ,
p_bill_to_country                => :bill_to_country             ,
p_alt_sales_country              => :alt_sales_country           ,
p_ship_to_number                 => :ship_to_number              ,
p_ship_to_name                   => :ship_to_name                ,
p_ship_to_state                  => :ship_to_state               ,
p_ship_to_country                => :ship_to_country             ,
p_final_destination_country      => :final_destination_country   ,
p_sales_force                 ' || '   => :sales_force                 ,
p_sales_force_name               => :sales_force_name            ,
p_division                       => :division                    ,
p_division_name                  => :division_name               ,
p_territory                      => :territory                   ,
p_territory_name                 => :territory_name              ,
p_sales_rep                      => :sales_rep                   ,
p_sales_rep_name                 => :sales_rep_name              ,
p_override                       => :override                    ,
p_account_override_start_date	 =>:account_override_start_date,
p_account_override_end_date	     =>:account_override_end_date,  
p_notes                          => :notes                       ,
p_entered_by                     => :entered_by                  ,
p_updated_by                     => :updated_by                  ,
p_start_date	                 =>:start_date,
p_end_date	                     =>:end_date,  
p_stat' || 'us                         => :status                      ,
p_sales_force_id                 => :sales_force_id              ,
p_return_status                => :p_return_status     
);

 :p_return_status :=p_return_status;

 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'SFAssign',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SFAssign',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_force_assign_update( 
p_sf_assign_id 				   =>:sf_assign_id,
p_owner                          => :owner                   ,
p_owner_description              => :owner_description           ,
p_reporting_group                => :reporting_group             ,
p_reporting_group_description    => :reporting_group_description ,
p_category_1                     => :category_1                  ,
p_category_1_description         => :category_1_description      ,
p_category_2                     => :category_2                  ,
p_category_2_description         => :category_2_description      ,
p_format                         => :format                      ,
p_format_description             => :format_description          ,
p_sub_format                     => :sub_format                  ,
p_sub_format_description         => :sub_format_description      ,
p_bisac                          => :bisac                     ' || '  ,
p_bisac_description              => :bisac_description           ,
p_customer_org_number            => :customer_org_number         ,
p_organization_name              => :organization_name           ,
p_customer_account_number        => :customer_account_number     ,
p_account_name                   => :account_name                ,
p_account_type                   => :account_type                ,
p_bill_to_                       => :bill_to_                    ,
p_state_province                 => :state_province              ,
p_bill_to_country                => :bill_to_country             ,
p_alt_sales_country              => :alt_sales_country           ,
p_ship_to_number                 => :ship_to_number              ,
p_ship_to_name                   => :ship_to_name                ,
p_ship_to_state                  => :ship_to_state               ,
p_ship_to_country                => :ship_to_country             ,
p_final_destination_country      => :final_destination_cou' || 'ntry   ,
p_sales_force                    => :sales_force                 ,
p_sales_force_name               => :sales_force_name            ,
p_division                       => :division                    ,
p_division_name                  => :division_name               ,
p_territory                      => :territory                   ,
p_territory_name                 => :territory_name              ,
p_sales_rep                      => :sales_rep                   ,
p_sales_rep_name                 => :sales_rep_name              ,
p_override                       => :override                    ,
p_account_override_start_date	 =>:account_override_start_date,
p_account_override_end_date	     =>:account_override_end_date,  
p_notes                          => :notes                       ,
p_entered_by                     => :entered_by                  ,
p_updated_by                     => :updated_by                  ,
p_start_date	                 =>:start_date,
p_end_date	   ' || '                  =>:end_date,  
p_status                         => :status                      ,
p_sales_force_id                 => :sales_force_id              ,
p_return_status                  => :p_return_status     
);

 :p_return_status :=p_return_status;

 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'SFAssign',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SFAssign',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT * FROM ( SELECT SF_ASSIGN_ID
,OWNER
,OWNER_DESCRIPTION
,REPORTING_GROUP
,REPORTING_GROUP_DESCRIPTION
,CATEGORY_1
,CATEGORY_1_DESCRIPTION
,CATEGORY_2
,CATEGORY_2_DESCRIPTION
,FORMAT
,FORMAT_DESCRIPTION
,SUB_FORMAT
,SUB_FORMAT_DESCRIPTION
,BISAC
,BISAC_DESCRIPTION
,CUSTOMER_ORG_NUMBER
,ORGANIZATION_NAME
,CUSTOMER_ACCOUNT_NUMBER
,ACCOUNT_NAME
,ACCOUNT_TYPE
,BILL_TO_
,STATE_PROVINCE
,BILL_TO_COUNTRY
,ALT_SALES_COUNTRY
,SHIP_TO_NUMBER
,SHIP_TO_NAME
,SHIP_TO_STATE
,SHIP_TO_COUNTRY
,FINAL_DESTINATION_COUNTRY
,SALES_FORCE
,SALES_FORCE_NAME
,DIVISION
,DIVISION_NAME
,TERRITORY
,TERRITORY_NAME
,SALES_REP
,SALES_REP_NAME
,OVERRIDE
,ACCOUNT_OVERRIDE_START_DATE
,ACCOUNT_OVERRIDE_END_DATE
,NOTES
,ENTERED_BY
,ENTERED_DATE
,UPDATED_BY
,UPDATED_DATE
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
--,STATUS
,CASE WHEN (TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD'')' || ',''YYYY-MM-DD'') AND 
TO_DATE(TO_CHAR(END_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') >= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) or
(END_DATE is null and TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) then
''Active'' 
else 
''Inactive'' end STATUS
,SALES_FORCE_ID FROM
 XXHBG_SALES_FORCE_ASSIGN_TBL ) Q
WHERE 
1=1 
AND 
   ( :SALES_FORCE IS NULL  OR Q.SALES_FORCE = :SALES_FORCE )
   AND 
   ( :OVERRIDE IS NULL  OR Q.OVERRIDE = :OVERRIDE )
 AND ( :P_STATUS IS NULL
                OR Q.STATUS = :P_STATUS )
   
    order by SF_ASSIGN_ID desc
');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'AssignDistribution',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'AssignDistribution',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_assign_distribution_create(
		 p_account_number                 => :account_number  
        ,p_account_name                  => :account_name
        ,p_sales_force_number            => :sales_force_number   
        ,p_sales_force_name              => :sales_force_name   
        ,p_owner                         => :owner  
        ,p_reporting_group               => :reporting_group  
        ,p_category_1                    => :category_1   
        ,p_category_2                    => :category_2   
        ,p_bisac                         => :bisac 
        ,p_bisac_description             => :bisac_description 
        ,p_distribution_channel          => :distribution_channel
        ,p_dist_channel_description      => :dist_channel_description
        ,p_notes                         => :notes
        ,p_entered_by             	     => :entered_by
        ,p_updated_by             	     => :updated_by
		' || ',p_start_date			         => :start_date
		,p_end_date			             => :end_date
        ,p_dist_channel_id               => :dist_channel_id
        ,p_return_status               => :p_return_status
	);
	 :p_return_status :=p_return_status;
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'AssignDistribution',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'AssignDistribution',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select DIST_CHNL_ASSIGN_ID
,ACCOUNT_NUMBER
,ACCOUNT_NAME
,SALES_FORCE_NUMBER
,SALES_FORCE_NAME
,OWNER
,REPORTING_GROUP
,CATEGORY_1
,CATEGORY_2
,BISAC
,BISAC_DESCRIPTION
,DISTRIBUTION_CHANNEL
,DIST_CHANNEL_DESCRIPTION
,NOTES
,ENTERED_BY
,ENTERED_DATE
,UPDATED_BY
,UPDATED_DATE
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
,DIST_CHANNEL_ID from XXHBG_ASSIGN_DISTRUBUTION_CHANNEL_TBl
   WHERE
   ( :SALES_FORCE_NUMBER IS NULL  OR SALES_FORCE_NUMBER = :SALES_FORCE_NUMBER )
   AND 
( :DISTRIBUTION_CHANNEL IS NULL  OR DISTRIBUTION_CHANNEL = :DISTRIBUTION_CHANNEL ) order by DIST_CHNL_ASSIGN_ID desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'AssignDistribution',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_assign_distribution_update(
		 p_dist_chnl_assign_id            => :dist_chnl_assign_id
		 ,p_account_number                 => :account_number  
        ,p_account_name                  => :account_name
        ,p_sales_force_number            => :sales_force_number   
        ,p_sales_force_name              => :sales_force_name   
        ,p_owner                         => :owner  
        ,p_reporting_group               => :reporting_group  
        ,p_category_1                    => :category_1   
        ,p_category_2                    => :category_2   
        ,p_bisac                         => :bisac 
        ,p_bisac_description             => :bisac_description 
        ,p_distribution_channel          => :distribution_channel
        ,p_dist_channel_description      => :dist_channel_description
        ,p_notes                         => :notes
        ,p_entered_by             	   => :entered_b' || 'y
        ,p_updated_by             	   => :updated_by      
		,p_start_date			           =>:start_date
		,p_end_date			           => :end_date 
        ,p_dist_channel_id               => :dist_channel_id
        ,p_return_status               => :p_return_status
	);
	 :p_return_status :=p_return_status;
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'AssignDistribution',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'AssignDistribution',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from XXHBG_ASSIGN_DISTRUBUTION_CHANNEL_TBL where DIST_CHNL_ASSIGN_ID = :DIST_CHNL_ASSIGN_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DistributionChannel',
      p_priority       => 0,
      p_etag_type      => 'NONE',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DistributionChannel',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_credit_dist_channel_update  (
p_dist_channel_id               => :dist_channel_id,               			
p_distribution_channel			=>:distribution_channel,
p_dist_channel_description		=>:dist_channel_description,
p_owner							=>:owner,		
p_owner_description				=>:owner_description,
p_reporting_group				=>:reporting_group,		
p_reporting_group_description	=>:reporting_group_description,
p_entered_by					=>:entered_by,
p_updated_by					=>:updated_by,				
p_start_date			        =>:start_date,
p_end_date			            =>:end_date,				
p_return_status                 => :p_return_status     
);

 :p_return_status :=p_return_status;

 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'DistributionChannel',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DistributionChannel',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select DIST_CHANNEL_ID
,DISTRIBUTION_CHANNEL
,DIST_CHANNEL_DESCRIPTION
,OWNER
,OWNER_DESCRIPTION
,REPORTING_GROUP
,REPORTING_GROUP_DESCRIPTION
,ENTERED_BY
,ENTERED_DATE
,UPDATED_BY
,UPDATED_DATE
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE from XXHBG_DISTRUBUTION_CHANNEL_TBL
    WHERE
( :DISTRIBUTION_CHANNEL IS NULL  OR DISTRIBUTION_CHANNEL = :DISTRIBUTION_CHANNEL ) 
 order by DIST_CHANNEL_ID desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DistributionChannel',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_credit_dist_channel_create (				
p_distribution_channel			=>:distribution_channel,
p_dist_channel_description		=>:dist_channel_description,
p_owner							=>:owner,		
p_owner_description				=>:owner_description,
p_reporting_group				=>:reporting_group,		
p_reporting_group_description	=>:reporting_group_description,
p_entered_by					=>:entered_by,
p_updated_by					=>:updated_by,				
p_start_date					=>:start_date,			
p_end_date						=>:end_date,
p_return_status					=>:p_return_status
		);
:p_return_status :=p_return_status;
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'DistributionChannel',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DistributionChannel',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DELETE FROM XXHBG_DISTRUBUTION_CHANNEL_TBL WHERE DIST_CHANNEL_ID = :P_DIST_CHANNEL_ID');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'DistributionChannel',
      p_method             => 'DELETE',
      p_name               => 'P_DIST_CHANNEL_ID',
      p_bind_variable_name => 'P_DIST_CHANNEL_ID',
      p_source_type        => 'URI',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getallSalesforceNumbers',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getallSalesforceNumbers',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct SALES_FORCE_NUMBER ,sales_force_name ,SALES_FORCE_ID from XXHBG_SALES_FORCE_MAINTENANCE_TBL order by SALES_FORCE_ID desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOrganizationName',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOrganizationName',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select party_id,party_name ,PARTY_NUMBER from HZ_PARTIES where PARTY_TYPE = ''ORGANIZATION'' and STATUS = ''A'' and upper(party_number) like upper(:part_number || ''%'')');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getAllAccounts',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getAllAccounts',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'Select cust_account_id, Account_number , Account_name from hz_cust_Accounts hca where
(:party_id is null or hca.party_id = :party_id) and (:p_acct_number is null or upper(hca.account_number)  LIKE upper(:p_acct_number || ''%''))');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getCustAccntType',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getCustAccntType',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
HBG_CUSTOMER_MASTER_PKG.hbg_cust_account_type_create (
		 
         p_customer_name        => :customer_name        
         ,p_account_number       => :account_number      
         ,p_account_name         => :account_name        
         ,p_cust_accnt_id        => :cust_accnt_id       
         ,p_party_id             => :party_id            
         ,p_default_account_type => :default_account_type
         ,p_account_type_desc    => :account_type_desc   
         ,p_entered_by           => :entered_by          
         ,p_entered_date         => :entered_date        
         ,p_updated_by           => :updated_by          
         ,p_updated_date         => :updated_date        
         ,p_registry_id          => :registry_id         
         ,p_organization_name    => :organization_name   
         ,p_site_number          => :site_number         
         ,p_site_name            => :site_name           
         ,p_country              => :country   ' || '          
         ,p_address              => :address             
         ,p_city                 => :city                
         ,p_state             => :state            
         ,p_postal_code          => :postal_code         
         ,p_san                  => :san                 
		,p_lookup               => :lookup 
        ,p_return_status     => :p_return_status    );
		 
		 END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'getCustAccntType',
      p_method             => 'POST',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getCustAccntType',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT
   *
FROM
   HBG_CUST_ACCOUNT_TYPE
WHERE
        1 = 1
    AND (
 ( :CUSTOMER_NAME IS NULL
            OR CUSTOMER_NAME = :CUSTOMER_NAME )
          AND ( :ACCOUNT_NUMBER IS NULL
                OR ACCOUNT_NUMBER = :ACCOUNT_NUMBER )
				AND ( :ACCOUNT_NAME IS NULL
                OR ACCOUNT_NAME = :ACCOUNT_NAME )
				AND ( :REGISTRY_ID IS NULL
                OR REGISTRY_ID = :REGISTRY_ID )
				AND ( :SITE_NUMBER IS NULL
                OR SITE_NUMBER = :SITE_NUMBER )
				AND ( :SITE_NAME IS NULL
                OR SITE_NAME = :SITE_NAME )
				AND ( :COUNTRY IS NULL
                OR COUNTRY = :COUNTRY )
				AND ( :ADDRESS IS NULL
                OR ADDRESS = :ADDRESS )
				AND ( :CITY IS NULL
                OR CITY = :CITY )
				AND ( :STATE IS NULL
                OR STATE = :STATE )
				AND ( :POSTAL_CODE IS NULL
                OR POSTAL_CODE = :POSTAL_CODE )
				AND ( :SAN IS NULL
                OR SAN = :SAN )
				AND ( :LOOKUP IS NULL
  ' || '              OR LOOKUP = :LOOKUP )
				
				
  )');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getCustAccntType',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from HBG_CUST_ACCOUNT_TYPE where ACC_TYP_ID = :ACC_TYP_ID');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getCustAccntType',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'BEGIN
HBG_CUSTOMER_MASTER_PKG.hbg_cust_account_type_update (
		 p_acc_typ_id           => :acc_typ_id
         ,p_customer_name        => :customer_name        
         ,p_account_number       => :account_number      
         ,p_account_name         => :account_name        
         ,p_cust_accnt_id        => :cust_accnt_id       
         ,p_party_id             => :party_id            
         ,p_default_account_type => :default_account_type
         ,p_account_type_desc    => :account_type_desc   
         ,p_entered_by           => :entered_by          
         ,p_entered_date         => :entered_date        
         ,p_updated_by           => :updated_by          
         ,p_updated_date         => :updated_date        
         ,p_registry_id          => :registry_id         
         ,p_organization_name    => :organization_name   
         ,p_site_number          => :site_number         
         ,p_site_name            => :site_name           
         ' || ',p_country              => :country             
         ,p_address              => :address             
         ,p_city                 => :city                
         ,p_state             => :state            
         ,p_postal_code          => :postal_code         
         ,p_san                  => :san                 
		 ,p_lookup               => :lookup 
         ,p_return_status     => :p_return_status    );
		 
		 END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'getCustAccntType',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getallISBN',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getallISBN',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select item_number,inventory_item_id from egp_system_items_b egp , inv_Org_parameters org where egp.organization_id = org.organization_id and org.organization_code = ''ITEM_MASTER'' and egp.item_number like :itemNum || ''%''');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getalldistributionChannels',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getalldistributionChannels',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct DISTRIBUTION_CHANNEL from XXHBG_DISTRUBUTION_CHANNEL_TBL');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SFMapping',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SFMapping',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT * FROM ( select SF_MAPPING_ID
,ISBN
,SALES_FORCE
,SALES_FORCE_NAME
,OWNER
,OWNER_DESCRIPTION
,REPORTING_GROUP
,REPORTING_GROUP_DESCRIPTION
,CATEGORY_1
,CATEGORY_1_DESCRIPTION
,CATEGORY_2
,CATEGORY_2_DESCRIPTION
,FORMAT
,FORMAT_DESCRIPTION
,SUB_FORMAT
,SUB_FORMAT_DESCRIPTION
,BISAC
,BISAC_DESCRIPTION
,ACCOUNT_TYPE
,ACCOUNT_TYPE_DESCRIPTION
,PRIORITY
,NOTES
,ENTERED_BY
,ENTERED_DATE
,UPDATED_BY
,UPDATED_DATE
,TO_CHAR(START_DATE,''YYYY-MM-DD'') START_DATE
,TO_CHAR(END_DATE,''YYYY-MM-DD'') END_DATE
--,STATUS
,CASE WHEN (TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'') AND
TO_DATE(TO_CHAR(END_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') >= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) or
(END_DATE is null and TO_DATE(TO_CHAR(START_DATE,''YYYY-MM-DD''),''YYYY-MM-DD'') <= TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD'')) then
''Active''
else
''Inactive'' end STATUS
,SALES_FORCE_ID
,SF_ACCT_TYPE_ID from X' || 'XHBG_SALES_FORCE_MAPPING_TBL ) Q
   WHERE 1=1
and ( :sales_force_number IS NULL  OR Q.sales_force = :sales_force_number )
AND ( :inv_item_id IS NULL  OR owner||reporting_group||category_1||category_2 = (select ATTRIBUTE_CHAR1||ATTRIBUTE_CHAR2||ATTRIBUTE_CHAR3||ATTRIBUTE_CHAR4
  from ego_item_eff_b eib
where eib.CONTEXT_CODE=''Family Code''
and eib.INVENTORY_ITEM_ID in :inv_item_id
and ORGANIZATION_ID=(select ORGANIZATION_ID from inv_org_parameters where ORGANIZATION_CODE=''ITEM_MASTER'') ))
and ( :priority IS NULL  OR Q.priority = :priority )
and ( :P_STATUS IS NULL  OR Q.STATUS = :P_STATUS )
  order by SF_MAPPING_ID desc');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SFMapping',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_mapping_update(
p_sf_mapping_id               =>:sf_mapping_id,
p_isbn                        => :isbn                       ,
p_sales_force                 => :sales_force                ,
p_sales_force_name            => :sales_force_name           ,
p_owner                       => :owner                      ,
p_owner_description           => :owner_description          ,
p_reporting_group             => :reporting_group                     ,       
p_reporting_group_description => :reporting_group_description         ,
p_category_1                  => :category_1                          ,
p_category_1_description      => :category_1_description              ,
p_category_2                  => :category_2                          ,
p_category_2_description      => :category_2_description              ,
p_format                      => :format                              ,
p_format_description          => :' || 'format_description                  ,
p_sub_format                  => :sub_format                          ,
p_sub_format_description      => :sub_format_description              ,
p_bisac                       => :bisac                               ,
p_bisac_description           => :bisac_description                   ,
p_account_type                => :account_type                        ,
p_account_type_description    => :account_type_description            ,
p_priority                    => :priority                            ,
p_notes                       => :notes                               ,
p_entered_by                  => :entered_by                          ,            
p_updated_by                  => :updated_by                          ,     
p_start_date			      =>:start_date,
p_end_date			          =>:end_date,           
p_status                      => :status                              ,
p_sales_force_id              => :sales_force_id                      ' || ',
p_sf_acct_type_id             => :sf_acct_type_id                     ,
  p_return_status           => :p_return_status          
);

 :p_return_status :=p_return_status;

 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'SFMapping',
      p_method             => 'PUT',
      p_name               => 'p_return_status',
      p_bind_variable_name => 'p_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SFMapping',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
p_return_status varchar2(200);
begin
hbg_sales_credit_pkg.hbg_sales_mapping_create(
p_isbn                        => :isbn                       ,
p_sales_force                 => :sales_force                ,
p_sales_force_name            => :sales_force_name           ,
p_owner                       => :owner                      ,
p_owner_description           => :owner_description          ,
p_reporting_group             => :reporting_group                     ,       
p_reporting_group_description => :reporting_group_description         ,
p_category_1                  => :category_1                          ,
p_category_1_description      => :category_1_description              ,
p_category_2                  => :category_2                          ,
p_category_2_description      => :category_2_description              ,
p_format                      => :format                              ,
p_format_description          => :format_description                  ,
p_sub_form' || 'at                  => :sub_format                          ,
p_sub_format_description      => :sub_format_description              ,
p_bisac                       => :bisac                               ,
p_bisac_description           => :bisac_description                   ,
p_account_type                => :account_type                        ,
p_account_type_description    => :account_type_description            ,
p_priority                    => :priority                            ,
p_notes                       => :notes                               ,
p_entered_by                  => :entered_by                          ,            
p_updated_by                  => :updated_by                          ,      
p_start_date	=>:start_date,
p_end_date		=>:end_date,
p_status                      => :status                              ,
p_sales_force_id              => :sales_force_id                      ,
p_sf_acct_type_id             => :sf_acct_type_id                     ,
p_r' || 'eturn_status           => :p_return_status          
);

 :p_return_status :=p_return_status;

 end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesCreditExtension',
      p_pattern            => 'SFMapping',
      p_method             => 'POST',
      p_name               => 'P_RETURN_STATUS',
      p_bind_variable_name => 'P_RETURN_STATUS',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'SFMapping',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'delete from XXHBG_SALES_FORCE_MAPPING_TBL  where SF_MAPPING_ID = :SF_MAPPING_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getFamilyCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getfamilycode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getfamilycode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct owner || reporting_group  || category_1 || category_2 as familycode from xxhbg_sales_force_mapping_tbl');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DivisionTableCol',
      p_priority       => 0,
      p_etag_type      => 'QUERY',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'DivisionTableCol',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select 
DIVISION_NUMBER,
DIVISION_NAME,
SF_DIV_ID
from 
XXHBG_SALES_FORCE_DIV_TBL where SALES_FORCE_ID = :SALES_FORCE_ID');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOwners',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getOwners',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct PARTY_ID,PARTY_NUMBER from HZ_PARTIES where status = ''A''');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getDistributionChannel',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getDistributionChannel',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct DIST_CHANNEL_ID , DISTRIBUTION_CHANNEL, DIST_CHANNEL_DESCRIPTION from XXHBG_DISTRUBUTION_CHANNEL_TBL');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getBillandShipInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'getBillandShipInfo',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT distinct
HCA.CUST_ACCOUNT_ID,
HL.COUNTRY,
HL.ADDRESS1,
HL.CITY,
HL.POSTAL_CODE,
HL.STATE,
HL.PROVINCE,
HPS.PARTY_SITE_ID AS PARTY_SITE_ID,
HPS.PARTY_SITE_NUMBER AS SHIP_TO_NUMBER,
HPS.PARTY_SITE_NAME AS SHIP_TO_NAME,
HCASA.ATTRIBUTE1 FINAL_DESTINATION
FROM
HZ_PARTIES HP,
HZ_CUST_ACCOUNTS HCA,
HZ_CUST_ACCT_SITES_ALL HCASA,
HZ_PARTY_SITES HPS,
HZ_CUST_SITE_USES_ALL HCSUA,
HZ_LOCATIONS HL
WHERE 1=1
AND HP.PARTY_ID = HCA.PARTY_ID
AND HCA.CUST_ACCOUNT_ID = HCASA.CUST_ACCOUNT_ID
AND HCASA.PARTY_SITE_ID = HPS.PARTY_SITE_ID
AND HCASA.CUST_ACCT_SITE_ID = HCSUA.CUST_ACCT_SITE_ID
AND HCSUA.SITE_USE_CODE =  :USECODE --''BILL_TO'',''SHIP_TO''
AND HPS.LOCATION_ID = HL.LOCATION_ID
AND (:PARTY_SITE_NUMBER  IS NULL or HPS.PARTY_SITE_NUMBER =:PARTY_SITE_NUMBER )
AND (:CUST_ACCOUNT_ID  IS NULL or HCA.CUST_ACCOUNT_ID = :CUST_ACCOUNT_ID)');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'ValidateAccountType',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesCreditExtension',
      p_pattern        => 'ValidateAccountType',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 0,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select count(*) as sf_cnt from xxhbg_assign_account_type_to_sales_force_tbl ASSF
where 1=1
AND  ASSF.SALES_FORCE = (SELECT SALES_FORCE_NUMBER FROM xxhbg_sales_force_maintenance_tbl WHERE SALES_FORCE_ID=:P_SF_ID)
AND ASSF.ACCOUNT_TYPE = :P_ACCOUNT_TYPE
AND (:P_OWNER is null or ASSF.SF_OWNER = :P_OWNER)');

  ORDS.DEFINE_MODULE(
      p_module_name    => 'SalesOrderDiscountApp',
      p_base_path      => '/salesOrderDiscountApp/',
      p_items_per_page => 100,
      p_status         => 'NOT_PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesOrderDiscountApp',
      p_pattern        => 'getPartyLOV',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesOrderDiscountApp',
      p_pattern        => 'getPartyLOV',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 100,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct party_name,party_id from XX_HBG_ACCT_TYPE_HDR_EXT_TBLSO_PRICING');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SalesOrderDiscountApp',
      p_pattern        => 'UpdateHoldRuleInfo',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SalesOrderDiscountApp',
      p_pattern        => 'UpdateHoldRuleInfo',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
x_return_status VARCHAR2(200);
BEGIN
hbg_so_auto_holds_pkg.hbg_so_custom_rule_update (
        p_comments => :p_comments,
        p_autoreleaseflag => :p_autoreleaseflag,
        p_end_date => :p_end_date,
        p_rule_id => :p_rule_id,
        p_return_status => x_return_status
    );
:x_return_status := x_return_status;
END;
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SalesOrderDiscountApp',
      p_pattern            => 'UpdateHoldRuleInfo',
      p_method             => 'POST',
      p_name               => 'x_return_status',
      p_bind_variable_name => 'x_return_status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_MODULE(
      p_module_name    => 'SoMassUpdate',
      p_base_path      => '/SoMasterUpdate/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getNewSOs',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getNewSOs',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select ORDER_NUMBER             "Order Number",
nvl(ACTUAL_SHIP_DATE,'' '')        "Ordered Date",
nvl(LINE_NUMBER          ,'' '')        "Line Number",
nvl(PARTY_NAME           ,'' '')    "Customer Name",
nvl(ACCOUNT_NUMBER       ,'' '')      "Customer Account Number",
nvl(ITEM_NUMBER           ,'' '')    "Item Number",
nvl(INV_ORGANIZATION_CODE, '' '')         "Inventory Org",
nvl(FREIGHT_TERMS_CODE   ,'' '')       "Freight Terms Code",
nvl (TO_CHAR(ORDERED_QTY  )         ,'' '')  "Ordered Quantity",
nvl(LINE_STATUS,'' '')       "Line status",
nvl (TO_CHAR(ORDERED_NET_QTY  )     ,'' '')       "Ordered Net Quantity",
nvl(CUSTOMER_PO_NUMBER    ,'' '')          "Customer PO Number",
nvl(APPLY_RESON_CODE     ,'' '')          "Hold Reson Code",
nvl(OWNER_CODE           ,'' '')    "Owner Code",
nvl(REPORTING_GROUP       ,'' '')       "Reporting Group",
nvl(CATEGORY1             ,'' '')          "Category1",
nvl(CATEGORY2             ,'' '')       "Category2",
nvl(OFFER_CODE            ,'' '')      "Offer ' || 'code"
from hbg_so_mass_update_stg where nvl(batch_id,1) = nvl(:p_batch_id,nvl(batch_id,1))

');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getHoldCodes',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getHoldCodes',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select HOLD_CODE,HOLD_NAME from doo_hold_codes_vl');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getReleasecodes',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getReleasecodes',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select LOOKUP_CODE,MEANING from FND_LOOKUP_VALUES_VL where LOOKUP_TYPE = ''DOO_HLD_RELEASE_REASON''');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getFromApplyReasonCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getFromApplyReasonCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select APPLY_RESON_CODE from hbg_so_mass_update_stg');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getOrganizations',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getOrganizations',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select party_id,party_name ,PARTY_NUMBER from HZ_PARTIES where PARTY_TYPE = ''ORGANIZATION'' and STATUS = ''A'' and upper(party_number) like upper(:part_number || ''%'')');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getStageLinesStatus',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getStageLinesStatus',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct LINE_STATUS_CODE from HBG_SO_MASS_UPDATE_STG');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'FetchCriteriaAction',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'FetchCriteriaAction',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'declare
  x_staus_message varchar2(200);
  x_staus_code varchar2(200);
  begin
 hbg_so_mass_update_pkg.get_sales_orders (
        p_header_id           =>:p_header_id
        ,p_organization_id     =>:p_organization_id
        , p_org_name           => :p_org_name 
        ,p_invetory_item_id    =>:p_invetory_item_id
        ,p_item_number         =>:p_item_number
        ,p_order_number        =>:p_order_number
        ,p_cust_account_id     =>:p_cust_account_id
        ,p_ex_cust_account_id  =>:p_ex_cust_account_id
        ,p_line_status         =>:p_line_status
        ,p_order_status        =>:p_order_status
        ,p_from_ordered_qty    =>:p_from_ordered_qty
        ,p_to_ordered_qty      =>:p_to_ordered_qty
        ,p_po_number           =>:p_po_number
        ,p_apply_reason_code   =>:p_apply_reason_code
        ,p_release_reason_code =>:p_release_reason_code
        ,p_received_from_date  =>:p_received_from_date
        ,p_received_to_date    =>:p_received' || '_to_date
        ,p_oic_run_id          =>:p_oic_run_id
        ,p_owner_id            => :p_owner_id            
        ,p_rpg_grp             => :p_rpg_grp             
        ,p_cat1                => :p_cat1   
        ,p_cat2                => :p_cat2  
        ,p_offer_code          => :p_offer_code
        ,p_from_ord_net_value   => :p_from_ord_net_value       
         ,p_to_ord_net_value     => :p_to_ord_net_value
        ,p_party_site_id       => :p_party_site_id                                
        ,x_staus_code          =>:x_staus_code
        ,x_staus_message       =>:x_staus_message
		
    );
    :x_staus_message := x_staus_message;
    :x_staus_code  := x_staus_code;
    END;

');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SoMassUpdate',
      p_pattern            => 'FetchCriteriaAction',
      p_method             => 'POST',
      p_name               => 'x_staus_message',
      p_bind_variable_name => 'x_staus_message',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SoMassUpdate',
      p_pattern            => 'FetchCriteriaAction',
      p_method             => 'POST',
      p_name               => 'x_staus_code',
      p_bind_variable_name => 'x_staus_code',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getApplyCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getApplyCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct APPLY_RESON_CODE from HBG_SO_MASS_UPDATE_STG');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getStgReleaseCodes',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getStgReleaseCodes',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct  APPLY_RESON_CODE release_reson_code  from HBG_SO_MASS_UPDATE_STG');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getLineStatus',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getLineStatus',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page => 10000,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'with rws as (
  select ''AWAIT_EXT_VAL,CHANGE_PENDING,AWAIT_SHIP,NOT_STARTED,SCHEDULED,CREATED,PICKED,SCH_MANUAL,RESERVED'' str from dual
)
  select regexp_substr (
           str,
           ''[^,]+'',
           1,
           level
         ) line_status
  from   rws
  connect by level <=
    length ( str ) - length ( replace ( str, '','' ) ) + 1



');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getfreightCode',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SoMassUpdate',
      p_pattern        => 'getfreightCode',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select distinct FREIGHT_TERMS_CODE from HBG_SO_MASS_UPDATE_STG');

  ORDS.DEFINE_MODULE(
      p_module_name    => 'oracle.example.hr',
      p_base_path      => '/hr/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empsec/:empname',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empsec/:empname',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select empno, ename, deptno, job from emp 
	where ((select job from emp where ename = :empname) IN (''PRESIDENT'', ''MANAGER'')) 
    OR  
    (deptno = (select deptno from emp where ename = :empname)) 
order by deptno, ename
');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empsecformat/:empname',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empsecformat/:empname',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
  prevdeptno     number;
  total_rows     number;
  deptloc        varchar2(20);
  deptname       varchar2(20);
  
  CURSOR         getemps is select * from emp 
                             start with ename = :empname
                           connect by prior empno = mgr
                             order siblings by deptno, ename;
BEGIN
  sys.htp.htmlopen;
  sys.htp.headopen;
  sys.htp.title(''Hierarchical Department Report for Employee ''||apex_escape.html(:empname));
  sys.htp.headclose;
  sys.htp.bodyopen;
 
  for l_employee in getemps 
  loop
      if l_employee.deptno != prevdeptno or prevdeptno is null then
          select dname, loc 
            into deptname, deptloc 
            from dept 
           where deptno = l_employee.deptno;
           
          if prevdeptno is not null then
              sys.htp.print(''</ul>'');
          end if;

          sys.htp.print(''Department '' || apex_escape.html(deptname) || '' located in '' || apex_escape.html(deptloc) || ''<p/>'');' || '
          sys.htp.print(''<ul>'');
      end if;

      sys.htp.print(''<li>'' || apex_escape.html(l_employee.ename) || '', ''  || apex_escape.html(l_employee.empno) || '', '' || 
                        apex_escape.html(l_employee.job) || '', '' || apex_escape.html(l_employee.sal) || ''</li>'');

      prevdeptno := l_employee.deptno;
      total_rows := getemps%ROWCOUNT;
      
  end loop;

  if total_rows > 0 then
      sys.htp.print(''</ul>'');
  end if;

  sys.htp.bodyclose;
  sys.htp.htmlclose;
END;');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employees/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employees/',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_items_per_page => 7,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select empno "$uri", rn, empno, ename, job, hiredate, mgr, sal, comm, deptno
  from (
       select emp.*
            , row_number() over (order by empno) rn
         from emp
       ) tmp');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'version/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'version/',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'begin 
 sys.htp.p(''{"version": "21.2"}'');
end;');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employees/:id',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employees/:id',
      p_method         => 'GET',
      p_source_type    => 'json/query;type=single',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from emp 
where empno = :id');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employees/:id',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'begin
    update emp set ename = :ename, job = :job, hiredate = :hiredate, mgr = :mgr, sal = :sal, comm = :comm, deptno = :deptno
    where empno = :id;
    :status := 200;
    :location := :id;
exception
    when others then
        :status := 400;
        sys.htp.p( sys.htf.escape_sc(sqlerrm) );
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'oracle.example.hr',
      p_pattern            => 'employees/:id',
      p_method             => 'PUT',
      p_name               => 'X-APEX-FORWARD',
      p_bind_variable_name => 'location',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'oracle.example.hr',
      p_pattern            => 'employees/:id',
      p_method             => 'PUT',
      p_name               => 'ID',
      p_bind_variable_name => 'id',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'oracle.example.hr',
      p_pattern            => 'employees/:id',
      p_method             => 'PUT',
      p_name               => 'X-APEX-STATUS-CODE',
      p_bind_variable_name => 'status',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empinfo/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empinfo/',
      p_method         => 'GET',
      p_source_type    => 'csv/query',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from emp');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employeesfeed/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employeesfeed/',
      p_method         => 'GET',
      p_source_type    => 'json/query;type=feed',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select empno, ename from emp order by deptno, ename');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employeesfeed/:id',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employeesfeed/:id',
      p_method         => 'GET',
      p_source_type    => 'csv/query',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from emp where empno = :id');

    
  ORDS.CREATE_ROLE(p_role_name => 'emp_role');
  ORDS.CREATE_ROLE(p_role_name => 'hbg_extension_data_role');
  ORDS.CREATE_ROLE(p_role_name => 'oracle.dbtools.role.autorest.HBG_INTEGRATION');
  ORDS.CREATE_ROLE(p_role_name => 'oracle.dbtools.role.autorest.HBG_INTEGRATION.EMP');
  ORDS.CREATE_ROLE(p_role_name => 'oracle.dbtools.role.autorest.HBG_INTEGRATION.HBG_AR_TRXMAINT_TRXCODES');
  ORDS.CREATE_ROLE(p_role_name => 'oracle.dbtools.role.autorest.HBG_INTEGRATION.HBG_ITEMS');
  ORDS.CREATE_ROLE(p_role_name => 'oracle.dbtools.role.autorest.HBG_INTEGRATION.HBG_ORGANIZATION');
    
  l_roles(1) := 'emp_role';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'emp_priv',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => 'EMP Data',
      p_description    => 'Allow access to the EMP data.',
      p_comments       => NULL); 

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
    
  l_roles(1) := 'OAuth2 Client Developer';
  l_roles(2) := 'SQL Developer';
  l_roles(3) := 'RESTful Services';
  l_roles(4) := 'SODA Developer';
  l_roles(5) := 'hbg_extension_data_role';
  l_modules(1) := 'SO_PRICING';
  l_modules(2) := 'SalesOrderDiscountApp';
  l_modules(3) := 'SO_AUTOMATIC_HOLDS';
  l_modules(4) := 'AutomaticHoldsModule';
  l_modules(5) := 'HBGARInvoiceExt';
  l_modules(6) := 'Country Groups';
  l_modules(7) := 'oracle.example.hr';
  l_modules(8) := 'SalesCreditExtension';
  l_patterns(1) := '/*';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'hbg_extension_data_pri',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => 'HBG Extension Data Access',
      p_description    => 'HBG Extension Data Access to Web Services',
      p_comments       => NULL); 

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
    
  l_roles(1) := 'oracle.dbtools.autorest.any.schema';
  l_roles(2) := 'oracle.dbtools.role.autorest.HBG_INTEGRATION';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'oracle.dbtools.autorest.privilege.HBG_INTEGRATION',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => NULL,
      p_description    => NULL,
      p_comments       => NULL); 

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
    
  l_roles(1) := 'oracle.dbtools.autorest.any.schema';
  l_roles(2) := 'oracle.dbtools.role.autorest.HBG_INTEGRATION.EMP';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'oracle.dbtools.autorest.privilege.HBG_INTEGRATION.EMP',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => NULL,
      p_description    => NULL,
      p_comments       => NULL); 

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
    
  l_roles(1) := 'oracle.dbtools.autorest.any.schema';
  l_roles(2) := 'oracle.dbtools.role.autorest.HBG_INTEGRATION.HBG_AR_TRXMAINT_TRXCODES';
  l_patterns(1) := '/hbg_ar_trxmaint_trxcodes/*';
  l_patterns(2) := '/metadata-catalog/hbg_ar_trxmaint_trxcodes/*';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'oracle.dbtools.autorest.privilege.HBG_INTEGRATION.HBG_AR_TRXMAINT_TRXCODES',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => NULL,
      p_description    => NULL,
      p_comments       => NULL); 

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
    
  l_roles(1) := 'oracle.dbtools.autorest.any.schema';
  l_roles(2) := 'oracle.dbtools.role.autorest.HBG_INTEGRATION.HBG_ITEMS';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'oracle.dbtools.autorest.privilege.HBG_INTEGRATION.HBG_ITEMS',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => NULL,
      p_description    => NULL,
      p_comments       => NULL); 

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
    
  l_roles(1) := 'oracle.dbtools.autorest.any.schema';
  l_roles(2) := 'oracle.dbtools.role.autorest.HBG_INTEGRATION.HBG_ORGANIZATION';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'oracle.dbtools.autorest.privilege.HBG_INTEGRATION.HBG_ORGANIZATION',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => NULL,
      p_description    => NULL,
      p_comments       => NULL); 

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
    
  l_roles(1) := 'SODA Developer';
  l_patterns(1) := '/soda/*';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'oracle.soda.privilege.developer',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => NULL,
      p_description    => NULL,
      p_comments       => NULL); 

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
    
  ORDS_METADATA.ORDS.ENABLE_OBJECT(
      p_enabled => TRUE, 
      p_schema => 'HBG_INTEGRATION',
      p_object => 'HBG_ORGANIZATION',
      p_object_type => 'TABLE',
      p_object_alias => 'hbg_organization',
      p_auto_rest_auth => FALSE);

  ORDS_METADATA.ORDS.ENABLE_OBJECT(
      p_enabled => TRUE, 
      p_schema => 'HBG_INTEGRATION',
      p_object => 'HBG_AR_TRXMAINT_TRXCODES',
      p_object_type => 'TABLE',
      p_object_alias => 'hbg_ar_trxmaint_trxcodes',
      p_auto_rest_auth => TRUE);

  ORDS_METADATA.ORDS.ENABLE_OBJECT(
      p_enabled => TRUE, 
      p_schema => 'HBG_INTEGRATION',
      p_object => 'HBG_ITEMS',
      p_object_type => 'TABLE',
      p_object_alias => 'hbg_items',
      p_auto_rest_auth => FALSE);

  ORDS_METADATA.ORDS.ENABLE_OBJECT(
      p_enabled => TRUE, 
      p_schema => 'HBG_INTEGRATION',
      p_object => 'EMP',
      p_object_type => 'TABLE',
      p_object_alias => 'employees',
      p_auto_rest_auth => FALSE);
      
COMMIT;

END;